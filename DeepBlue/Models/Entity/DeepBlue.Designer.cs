//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Account), "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FundActivityHistory_ActivityType", "ActivityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.ActivityType), "FundActivityHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FundActivityHistory), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Address_AddressType", "AddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.AddressType), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Address), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Address_Country", "COUNTRY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.COUNTRY), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Address), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Address_State", "STATE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.STATE), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Address), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ContactAddress_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Address), "ContactAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ContactAddress), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorAddress_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Address), "InvestorAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorAddress), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CapitalCall_CapitalCallType", "CapitalCallType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CapitalCallType), "CapitalCall", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CapitalCall), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CapitalCall_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "CapitalCall", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CapitalCall), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CapitalCallLineItem_CapitalCall", "CapitalCall", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CapitalCall), "CapitalCallLineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CapitalCallLineItem), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CapitalCallLineItem_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "CapitalCallLineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CapitalCallLineItem), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CapitalDistribution_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "CapitalDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CapitalDistribution), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CapitalDistributionLineItem_CapitalDistribution", "CapitalDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CapitalDistribution), "CapitalDistributionLineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CapitalDistributionLineItem), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CapitalDistribution), "CapitalDistributionProfit", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.CapitalDistributionProfit), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CapitalDistributionLineItem_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "CapitalDistributionLineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CapitalDistributionLineItem), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CapitalDistributionProfit_InvestorType", "InvestorType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.InvestorType), "CapitalDistributionProfit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CapitalDistributionProfit), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CashDistribution_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Deal), "CashDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CashDistribution), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CashDistribution_UnderlyingFund", "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.UnderlyingFund), "CashDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CashDistribution), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CashDistribution_UnderlyingFundCashDistribution", "UnderlyingFundCashDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.UnderlyingFundCashDistribution), "CashDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CashDistribution), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundCashDistribution_CashDistributionType", "CashDistributionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CashDistributionType), "UnderlyingFundCashDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundCashDistribution), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Communication_CommunicationType", "CommunicationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CommunicationType), "Communication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Communication), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ContactCommunication_Communication", "Communication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Communication), "ContactCommunication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ContactCommunication), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorCommunication_Communication", "Communication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Communication), "InvestorCommunication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorCommunication), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CommunicationGrouping), "CommunicationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CommunicationType), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ContactAddress_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Contact), "ContactAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ContactAddress), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ContactCommunication_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Contact), "ContactCommunication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ContactCommunication), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Deal_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Contact), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Deal), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Deal_SellerContact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Contact), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Deal), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorContact_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Contact), "InvestorContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorContact), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Contact), "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Equity_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Currency), "Equity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Equity), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FixedIncome_Currency", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Currency), "FixedIncome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FixedIncome), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CustomField_CustomFieldValue", "CustomField", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CustomField), "CustomFieldValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CustomFieldValue), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CustomField_OptionField", "CustomField", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CustomField), "OptionField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.OptionField), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DataType_CustomField", "DataType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.DataType), "CustomField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CustomField), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Module_CustomField", "MODULE", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.MODULE), "CustomField", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CustomField), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_OptionFieldValueList_CustomField", "CustomField", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CustomField), "OptionFieldValueList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.OptionFieldValueList), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Deal_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Deal), "Deal1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Deal), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Deal_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Deal), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Deal_Partner", "Partner", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Partner), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Deal), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Deal_PurchaseType", "PurchaseType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.PurchaseType), "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Deal), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DealClosing_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Deal), "DealClosing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.DealClosing), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DealClosingCost_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Deal), "DealClosingCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.DealClosingCost), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DealUnderlyingDirect_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Deal), "DealUnderlyingDirect", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.DealUnderlyingDirect), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DealUnderlyingFund_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Deal), "DealUnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.DealUnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCallLineItem_Deal", "Deal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Deal), "UnderlyingFundCapitalCallLineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundCapitalCallLineItem), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DealUnderlyingDirect_DealClosing", "DealClosing", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.DealClosing), "DealUnderlyingDirect", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.DealUnderlyingDirect), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DealUnderlyingFund_DealClosing", "DealClosing", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.DealClosing), "DealUnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.DealUnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DealClosingCost_DealClosingCostType", "DealClosingCostType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.DealClosingCostType), "DealClosingCost", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.DealClosingCost), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DealUnderlyingDirect_SecurityType", "SecurityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.SecurityType), "DealUnderlyingDirect", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.DealUnderlyingDirect), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DealUnderlyingFund_UnderlyingFund", "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.UnderlyingFund), "DealUnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.DealUnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_DealUnderlyingFundAdjustment_DealUnderlyingFund", "DealUnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.DealUnderlyingFund), "DealUnderlyingFundAdjustment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.DealUnderlyingFundAdjustment), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundDocument_DocumentType", "DocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.DocumentType), "InvestorFundDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundDocument), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Equity_EquityType", "EquityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.EquityType), "Equity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Equity), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Equity_Industry", "Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Industry), "Equity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Equity), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Equity_Issuer", "Issuer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Issuer), "Equity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Equity), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Equity_ShareClassType", "ShareClassType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.ShareClassType), "Equity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Equity), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_EquitySplit_Equity", "Equity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Equity), "EquitySplit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.EquitySplit), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_File_FileType", "FileType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.FileType), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.File), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundDocument_File", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.File), "InvestorFundDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundDocument), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FixedIncome_FixedIncomeType", "FixedIncomeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.FixedIncomeType), "FixedIncome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FixedIncome), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FixedIncome_Industry", "Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Industry), "FixedIncome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FixedIncome), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FixedIncome_Issuer", "Issuer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Issuer), "FixedIncome", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FixedIncome), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FundAccount_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "FundAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FundAccount), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FundActivityHistory_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "FundActivityHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FundActivityHistory), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FundClosing_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "FundClosing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FundClosing), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FundExpense_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "FundExpense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FundExpense), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FundRateSchedule_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "FundRateSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FundRateSchedule), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFund_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "InvestorFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundDocument_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Fund), "InvestorFundDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundDocument), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingDirectLastPrice_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "UnderlyingDirectLastPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingDirectLastPrice), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCall_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "UnderlyingFundCapitalCall", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundCapitalCall), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundCashDistribution_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "UnderlyingFundCashDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundCashDistribution), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundNAV_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "UnderlyingFundNAV", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundNAV), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundTransaction_FundClosing", "FundClosing", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.FundClosing), "InvestorFundTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundTransaction), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FundExpense_FundExpenseType", "FundExpenseType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.FundExpenseType), "FundExpense", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FundExpense), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FundRateSchedule_InvestorType", "InvestorType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.InvestorType), "FundRateSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FundRateSchedule), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_Geography", "Geography", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Geography), "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_Industry", "Industry", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Industry), "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_InvestmentType", "InvestmentType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.InvestmentType), "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Investor_InvestorEntityType", "InvestorEntityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.InvestorEntityType), "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Investor), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Investor_ResidencyState", "STATE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.STATE), "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Investor), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorAccount_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "InvestorAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorAccount), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorAddress_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "InvestorAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorAddress), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorCommunication_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "InvestorCommunication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorCommunication), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorContact_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "InvestorContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorContact), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFund_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "InvestorFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundDocument_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Investor), "InvestorFundDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundDocument), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFund_InvestorType", "InvestorType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.InvestorType), "InvestorFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundTransaction_InvestorFund", "InvestorFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.InvestorFund), "InvestorFundTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundTransaction), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundTransaction_TransactionType", "TransactionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.TransactionType), "InvestorFundTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundTransaction), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_Issuer", "Issuer", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Issuer), "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ManagementFeeRateSchedule_RateScheduleType", "RateScheduleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.RateScheduleType), "ManagementFeeRateSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ManagementFeeRateSchedule), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ManagementFeeRateScheduleTier_ManagementFeeRateSchedule", "ManagementFeeRateSchedule", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.ManagementFeeRateSchedule), "ManagementFeeRateScheduleTier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ManagementFeeRateScheduleTier), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ManagementFeeRateScheduleTier_MultiplierType", "MultiplierType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.MultiplierType), "ManagementFeeRateScheduleTier", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ManagementFeeRateScheduleTier), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_OptionFieldValueList_OptionField", "OptionField", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.OptionField), "OptionFieldValueList", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.OptionFieldValueList), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_ReportingFrequency", "ReportingFrequency", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.ReportingFrequency), "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_ReportingType", "ReportingType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.ReportingType), "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_SecurityConversion_SecurityType", "SecurityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.SecurityType), "SecurityConversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.SecurityConversion), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_SecurityConversion_SecurityTypeOld", "SecurityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.SecurityType), "SecurityConversion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.SecurityConversion), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingDirectLastPrice_SecurityType", "SecurityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.SecurityType), "UnderlyingDirectLastPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingDirectLastPrice), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_ShareClassType", "ShareClassType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.ShareClassType), "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingDirectLastPriceHistory_UnderlyingDirectLastPrice", "UnderlyingDirectLastPrice", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.UnderlyingDirectLastPrice), "UnderlyingDirectLastPriceHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingDirectLastPriceHistory), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.UnderlyingFund), "UnderlyingFund1", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFund_UnderlyingFundType", "UnderlyingFundType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.UnderlyingFundType), "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCall_UnderlyingFund", "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.UnderlyingFund), "UnderlyingFundCapitalCall", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundCapitalCall), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCallLineItem_UnderlyingFund", "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.UnderlyingFund), "UnderlyingFundCapitalCallLineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundCapitalCallLineItem), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundCashDistribution_UnderlyingFund", "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.UnderlyingFund), "UnderlyingFundCashDistribution", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundCashDistribution), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundNAV_UnderlyingFund", "UnderlyingFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.UnderlyingFund), "UnderlyingFundNAV", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundNAV), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCallLineItem_UnderlyingFundCapitalCallID", "UnderlyingFundCapitalCall", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.UnderlyingFundCapitalCall), "UnderlyingFundCapitalCallLineItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundCapitalCallLineItem), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_UnderlyingFundNAVHistory_UnderlyingFundNAV", "UnderlyingFundNAV", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.UnderlyingFundNAV), "UnderlyingFundNAVHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.UnderlyingFundNAVHistory), true)]

#endregion

namespace DeepBlue.Models.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DeepBlueEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DeepBlueEntities object using the connection string found in the 'DeepBlueEntities' section of the application configuration file.
        /// </summary>
        public DeepBlueEntities() : base("name=DeepBlueEntities", "DeepBlueEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DeepBlueEntities object.
        /// </summary>
        public DeepBlueEntities(string connectionString) : base(connectionString, "DeepBlueEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DeepBlueEntities object.
        /// </summary>
        public DeepBlueEntities(EntityConnection connection) : base(connection, "DeepBlueEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityType> ActivityTypes
        {
            get
            {
                if ((_ActivityTypes == null))
                {
                    _ActivityTypes = base.CreateObjectSet<ActivityType>("ActivityTypes");
                }
                return _ActivityTypes;
            }
        }
        private ObjectSet<ActivityType> _ActivityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddressType> AddressTypes
        {
            get
            {
                if ((_AddressTypes == null))
                {
                    _AddressTypes = base.CreateObjectSet<AddressType>("AddressTypes");
                }
                return _AddressTypes;
            }
        }
        private ObjectSet<AddressType> _AddressTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapitalCall> CapitalCalls
        {
            get
            {
                if ((_CapitalCalls == null))
                {
                    _CapitalCalls = base.CreateObjectSet<CapitalCall>("CapitalCalls");
                }
                return _CapitalCalls;
            }
        }
        private ObjectSet<CapitalCall> _CapitalCalls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapitalCallLineItem> CapitalCallLineItems
        {
            get
            {
                if ((_CapitalCallLineItems == null))
                {
                    _CapitalCallLineItems = base.CreateObjectSet<CapitalCallLineItem>("CapitalCallLineItems");
                }
                return _CapitalCallLineItems;
            }
        }
        private ObjectSet<CapitalCallLineItem> _CapitalCallLineItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapitalCallLineItemType> CapitalCallLineItemTypes
        {
            get
            {
                if ((_CapitalCallLineItemTypes == null))
                {
                    _CapitalCallLineItemTypes = base.CreateObjectSet<CapitalCallLineItemType>("CapitalCallLineItemTypes");
                }
                return _CapitalCallLineItemTypes;
            }
        }
        private ObjectSet<CapitalCallLineItemType> _CapitalCallLineItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapitalCallType> CapitalCallTypes
        {
            get
            {
                if ((_CapitalCallTypes == null))
                {
                    _CapitalCallTypes = base.CreateObjectSet<CapitalCallType>("CapitalCallTypes");
                }
                return _CapitalCallTypes;
            }
        }
        private ObjectSet<CapitalCallType> _CapitalCallTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapitalDistribution> CapitalDistributions
        {
            get
            {
                if ((_CapitalDistributions == null))
                {
                    _CapitalDistributions = base.CreateObjectSet<CapitalDistribution>("CapitalDistributions");
                }
                return _CapitalDistributions;
            }
        }
        private ObjectSet<CapitalDistribution> _CapitalDistributions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapitalDistributionLineItem> CapitalDistributionLineItems
        {
            get
            {
                if ((_CapitalDistributionLineItems == null))
                {
                    _CapitalDistributionLineItems = base.CreateObjectSet<CapitalDistributionLineItem>("CapitalDistributionLineItems");
                }
                return _CapitalDistributionLineItems;
            }
        }
        private ObjectSet<CapitalDistributionLineItem> _CapitalDistributionLineItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CapitalDistributionProfit> CapitalDistributionProfits
        {
            get
            {
                if ((_CapitalDistributionProfits == null))
                {
                    _CapitalDistributionProfits = base.CreateObjectSet<CapitalDistributionProfit>("CapitalDistributionProfits");
                }
                return _CapitalDistributionProfits;
            }
        }
        private ObjectSet<CapitalDistributionProfit> _CapitalDistributionProfits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CashDistribution> CashDistributions
        {
            get
            {
                if ((_CashDistributions == null))
                {
                    _CashDistributions = base.CreateObjectSet<CashDistribution>("CashDistributions");
                }
                return _CashDistributions;
            }
        }
        private ObjectSet<CashDistribution> _CashDistributions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CashDistributionType> CashDistributionTypes
        {
            get
            {
                if ((_CashDistributionTypes == null))
                {
                    _CashDistributionTypes = base.CreateObjectSet<CashDistributionType>("CashDistributionTypes");
                }
                return _CashDistributionTypes;
            }
        }
        private ObjectSet<CashDistributionType> _CashDistributionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Communication> Communications
        {
            get
            {
                if ((_Communications == null))
                {
                    _Communications = base.CreateObjectSet<Communication>("Communications");
                }
                return _Communications;
            }
        }
        private ObjectSet<Communication> _Communications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommunicationGrouping> CommunicationGroupings
        {
            get
            {
                if ((_CommunicationGroupings == null))
                {
                    _CommunicationGroupings = base.CreateObjectSet<CommunicationGrouping>("CommunicationGroupings");
                }
                return _CommunicationGroupings;
            }
        }
        private ObjectSet<CommunicationGrouping> _CommunicationGroupings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommunicationType> CommunicationTypes
        {
            get
            {
                if ((_CommunicationTypes == null))
                {
                    _CommunicationTypes = base.CreateObjectSet<CommunicationType>("CommunicationTypes");
                }
                return _CommunicationTypes;
            }
        }
        private ObjectSet<CommunicationType> _CommunicationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactAddress> ContactAddresses
        {
            get
            {
                if ((_ContactAddresses == null))
                {
                    _ContactAddresses = base.CreateObjectSet<ContactAddress>("ContactAddresses");
                }
                return _ContactAddresses;
            }
        }
        private ObjectSet<ContactAddress> _ContactAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactCommunication> ContactCommunications
        {
            get
            {
                if ((_ContactCommunications == null))
                {
                    _ContactCommunications = base.CreateObjectSet<ContactCommunication>("ContactCommunications");
                }
                return _ContactCommunications;
            }
        }
        private ObjectSet<ContactCommunication> _ContactCommunications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COUNTRY> COUNTRies
        {
            get
            {
                if ((_COUNTRies == null))
                {
                    _COUNTRies = base.CreateObjectSet<COUNTRY>("COUNTRies");
                }
                return _COUNTRies;
            }
        }
        private ObjectSet<COUNTRY> _COUNTRies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomField> CustomFields
        {
            get
            {
                if ((_CustomFields == null))
                {
                    _CustomFields = base.CreateObjectSet<CustomField>("CustomFields");
                }
                return _CustomFields;
            }
        }
        private ObjectSet<CustomField> _CustomFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomFieldValue> CustomFieldValues
        {
            get
            {
                if ((_CustomFieldValues == null))
                {
                    _CustomFieldValues = base.CreateObjectSet<CustomFieldValue>("CustomFieldValues");
                }
                return _CustomFieldValues;
            }
        }
        private ObjectSet<CustomFieldValue> _CustomFieldValues;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataType> DataTypes
        {
            get
            {
                if ((_DataTypes == null))
                {
                    _DataTypes = base.CreateObjectSet<DataType>("DataTypes");
                }
                return _DataTypes;
            }
        }
        private ObjectSet<DataType> _DataTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Deal> Deals
        {
            get
            {
                if ((_Deals == null))
                {
                    _Deals = base.CreateObjectSet<Deal>("Deals");
                }
                return _Deals;
            }
        }
        private ObjectSet<Deal> _Deals;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealClosing> DealClosings
        {
            get
            {
                if ((_DealClosings == null))
                {
                    _DealClosings = base.CreateObjectSet<DealClosing>("DealClosings");
                }
                return _DealClosings;
            }
        }
        private ObjectSet<DealClosing> _DealClosings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealClosingCost> DealClosingCosts
        {
            get
            {
                if ((_DealClosingCosts == null))
                {
                    _DealClosingCosts = base.CreateObjectSet<DealClosingCost>("DealClosingCosts");
                }
                return _DealClosingCosts;
            }
        }
        private ObjectSet<DealClosingCost> _DealClosingCosts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealClosingCostType> DealClosingCostTypes
        {
            get
            {
                if ((_DealClosingCostTypes == null))
                {
                    _DealClosingCostTypes = base.CreateObjectSet<DealClosingCostType>("DealClosingCostTypes");
                }
                return _DealClosingCostTypes;
            }
        }
        private ObjectSet<DealClosingCostType> _DealClosingCostTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealUnderlyingDirect> DealUnderlyingDirects
        {
            get
            {
                if ((_DealUnderlyingDirects == null))
                {
                    _DealUnderlyingDirects = base.CreateObjectSet<DealUnderlyingDirect>("DealUnderlyingDirects");
                }
                return _DealUnderlyingDirects;
            }
        }
        private ObjectSet<DealUnderlyingDirect> _DealUnderlyingDirects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealUnderlyingFund> DealUnderlyingFunds
        {
            get
            {
                if ((_DealUnderlyingFunds == null))
                {
                    _DealUnderlyingFunds = base.CreateObjectSet<DealUnderlyingFund>("DealUnderlyingFunds");
                }
                return _DealUnderlyingFunds;
            }
        }
        private ObjectSet<DealUnderlyingFund> _DealUnderlyingFunds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DealUnderlyingFundAdjustment> DealUnderlyingFundAdjustments
        {
            get
            {
                if ((_DealUnderlyingFundAdjustments == null))
                {
                    _DealUnderlyingFundAdjustments = base.CreateObjectSet<DealUnderlyingFundAdjustment>("DealUnderlyingFundAdjustments");
                }
                return _DealUnderlyingFundAdjustments;
            }
        }
        private ObjectSet<DealUnderlyingFundAdjustment> _DealUnderlyingFundAdjustments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentType> DocumentTypes
        {
            get
            {
                if ((_DocumentTypes == null))
                {
                    _DocumentTypes = base.CreateObjectSet<DocumentType>("DocumentTypes");
                }
                return _DocumentTypes;
            }
        }
        private ObjectSet<DocumentType> _DocumentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Equity> Equities
        {
            get
            {
                if ((_Equities == null))
                {
                    _Equities = base.CreateObjectSet<Equity>("Equities");
                }
                return _Equities;
            }
        }
        private ObjectSet<Equity> _Equities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquitySplit> EquitySplits
        {
            get
            {
                if ((_EquitySplits == null))
                {
                    _EquitySplits = base.CreateObjectSet<EquitySplit>("EquitySplits");
                }
                return _EquitySplits;
            }
        }
        private ObjectSet<EquitySplit> _EquitySplits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EquityType> EquityTypes
        {
            get
            {
                if ((_EquityTypes == null))
                {
                    _EquityTypes = base.CreateObjectSet<EquityType>("EquityTypes");
                }
                return _EquityTypes;
            }
        }
        private ObjectSet<EquityType> _EquityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileType> FileTypes
        {
            get
            {
                if ((_FileTypes == null))
                {
                    _FileTypes = base.CreateObjectSet<FileType>("FileTypes");
                }
                return _FileTypes;
            }
        }
        private ObjectSet<FileType> _FileTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FixedIncome> FixedIncomes
        {
            get
            {
                if ((_FixedIncomes == null))
                {
                    _FixedIncomes = base.CreateObjectSet<FixedIncome>("FixedIncomes");
                }
                return _FixedIncomes;
            }
        }
        private ObjectSet<FixedIncome> _FixedIncomes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FixedIncomeType> FixedIncomeTypes
        {
            get
            {
                if ((_FixedIncomeTypes == null))
                {
                    _FixedIncomeTypes = base.CreateObjectSet<FixedIncomeType>("FixedIncomeTypes");
                }
                return _FixedIncomeTypes;
            }
        }
        private ObjectSet<FixedIncomeType> _FixedIncomeTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fund> Funds
        {
            get
            {
                if ((_Funds == null))
                {
                    _Funds = base.CreateObjectSet<Fund>("Funds");
                }
                return _Funds;
            }
        }
        private ObjectSet<Fund> _Funds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundAccount> FundAccounts
        {
            get
            {
                if ((_FundAccounts == null))
                {
                    _FundAccounts = base.CreateObjectSet<FundAccount>("FundAccounts");
                }
                return _FundAccounts;
            }
        }
        private ObjectSet<FundAccount> _FundAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundActivityHistory> FundActivityHistories
        {
            get
            {
                if ((_FundActivityHistories == null))
                {
                    _FundActivityHistories = base.CreateObjectSet<FundActivityHistory>("FundActivityHistories");
                }
                return _FundActivityHistories;
            }
        }
        private ObjectSet<FundActivityHistory> _FundActivityHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundClosing> FundClosings
        {
            get
            {
                if ((_FundClosings == null))
                {
                    _FundClosings = base.CreateObjectSet<FundClosing>("FundClosings");
                }
                return _FundClosings;
            }
        }
        private ObjectSet<FundClosing> _FundClosings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundExpense> FundExpenses
        {
            get
            {
                if ((_FundExpenses == null))
                {
                    _FundExpenses = base.CreateObjectSet<FundExpense>("FundExpenses");
                }
                return _FundExpenses;
            }
        }
        private ObjectSet<FundExpense> _FundExpenses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundExpenseType> FundExpenseTypes
        {
            get
            {
                if ((_FundExpenseTypes == null))
                {
                    _FundExpenseTypes = base.CreateObjectSet<FundExpenseType>("FundExpenseTypes");
                }
                return _FundExpenseTypes;
            }
        }
        private ObjectSet<FundExpenseType> _FundExpenseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundRateSchedule> FundRateSchedules
        {
            get
            {
                if ((_FundRateSchedules == null))
                {
                    _FundRateSchedules = base.CreateObjectSet<FundRateSchedule>("FundRateSchedules");
                }
                return _FundRateSchedules;
            }
        }
        private ObjectSet<FundRateSchedule> _FundRateSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Geography> Geographies
        {
            get
            {
                if ((_Geographies == null))
                {
                    _Geographies = base.CreateObjectSet<Geography>("Geographies");
                }
                return _Geographies;
            }
        }
        private ObjectSet<Geography> _Geographies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Industry> Industries
        {
            get
            {
                if ((_Industries == null))
                {
                    _Industries = base.CreateObjectSet<Industry>("Industries");
                }
                return _Industries;
            }
        }
        private ObjectSet<Industry> _Industries;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestmentType> InvestmentTypes
        {
            get
            {
                if ((_InvestmentTypes == null))
                {
                    _InvestmentTypes = base.CreateObjectSet<InvestmentType>("InvestmentTypes");
                }
                return _InvestmentTypes;
            }
        }
        private ObjectSet<InvestmentType> _InvestmentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Investor> Investors
        {
            get
            {
                if ((_Investors == null))
                {
                    _Investors = base.CreateObjectSet<Investor>("Investors");
                }
                return _Investors;
            }
        }
        private ObjectSet<Investor> _Investors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorAccount> InvestorAccounts
        {
            get
            {
                if ((_InvestorAccounts == null))
                {
                    _InvestorAccounts = base.CreateObjectSet<InvestorAccount>("InvestorAccounts");
                }
                return _InvestorAccounts;
            }
        }
        private ObjectSet<InvestorAccount> _InvestorAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorAddress> InvestorAddresses
        {
            get
            {
                if ((_InvestorAddresses == null))
                {
                    _InvestorAddresses = base.CreateObjectSet<InvestorAddress>("InvestorAddresses");
                }
                return _InvestorAddresses;
            }
        }
        private ObjectSet<InvestorAddress> _InvestorAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorCommunication> InvestorCommunications
        {
            get
            {
                if ((_InvestorCommunications == null))
                {
                    _InvestorCommunications = base.CreateObjectSet<InvestorCommunication>("InvestorCommunications");
                }
                return _InvestorCommunications;
            }
        }
        private ObjectSet<InvestorCommunication> _InvestorCommunications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorContact> InvestorContacts
        {
            get
            {
                if ((_InvestorContacts == null))
                {
                    _InvestorContacts = base.CreateObjectSet<InvestorContact>("InvestorContacts");
                }
                return _InvestorContacts;
            }
        }
        private ObjectSet<InvestorContact> _InvestorContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorEntityType> InvestorEntityTypes
        {
            get
            {
                if ((_InvestorEntityTypes == null))
                {
                    _InvestorEntityTypes = base.CreateObjectSet<InvestorEntityType>("InvestorEntityTypes");
                }
                return _InvestorEntityTypes;
            }
        }
        private ObjectSet<InvestorEntityType> _InvestorEntityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorFund> InvestorFunds
        {
            get
            {
                if ((_InvestorFunds == null))
                {
                    _InvestorFunds = base.CreateObjectSet<InvestorFund>("InvestorFunds");
                }
                return _InvestorFunds;
            }
        }
        private ObjectSet<InvestorFund> _InvestorFunds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorFundDocument> InvestorFundDocuments
        {
            get
            {
                if ((_InvestorFundDocuments == null))
                {
                    _InvestorFundDocuments = base.CreateObjectSet<InvestorFundDocument>("InvestorFundDocuments");
                }
                return _InvestorFundDocuments;
            }
        }
        private ObjectSet<InvestorFundDocument> _InvestorFundDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorFundTransaction> InvestorFundTransactions
        {
            get
            {
                if ((_InvestorFundTransactions == null))
                {
                    _InvestorFundTransactions = base.CreateObjectSet<InvestorFundTransaction>("InvestorFundTransactions");
                }
                return _InvestorFundTransactions;
            }
        }
        private ObjectSet<InvestorFundTransaction> _InvestorFundTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorType> InvestorTypes
        {
            get
            {
                if ((_InvestorTypes == null))
                {
                    _InvestorTypes = base.CreateObjectSet<InvestorType>("InvestorTypes");
                }
                return _InvestorTypes;
            }
        }
        private ObjectSet<InvestorType> _InvestorTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Issuer> Issuers
        {
            get
            {
                if ((_Issuers == null))
                {
                    _Issuers = base.CreateObjectSet<Issuer>("Issuers");
                }
                return _Issuers;
            }
        }
        private ObjectSet<Issuer> _Issuers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagementFeeRateSchedule> ManagementFeeRateSchedules
        {
            get
            {
                if ((_ManagementFeeRateSchedules == null))
                {
                    _ManagementFeeRateSchedules = base.CreateObjectSet<ManagementFeeRateSchedule>("ManagementFeeRateSchedules");
                }
                return _ManagementFeeRateSchedules;
            }
        }
        private ObjectSet<ManagementFeeRateSchedule> _ManagementFeeRateSchedules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ManagementFeeRateScheduleTier> ManagementFeeRateScheduleTiers
        {
            get
            {
                if ((_ManagementFeeRateScheduleTiers == null))
                {
                    _ManagementFeeRateScheduleTiers = base.CreateObjectSet<ManagementFeeRateScheduleTier>("ManagementFeeRateScheduleTiers");
                }
                return _ManagementFeeRateScheduleTiers;
            }
        }
        private ObjectSet<ManagementFeeRateScheduleTier> _ManagementFeeRateScheduleTiers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MODULE> MODULEs
        {
            get
            {
                if ((_MODULEs == null))
                {
                    _MODULEs = base.CreateObjectSet<MODULE>("MODULEs");
                }
                return _MODULEs;
            }
        }
        private ObjectSet<MODULE> _MODULEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MultiplierType> MultiplierTypes
        {
            get
            {
                if ((_MultiplierTypes == null))
                {
                    _MultiplierTypes = base.CreateObjectSet<MultiplierType>("MultiplierTypes");
                }
                return _MultiplierTypes;
            }
        }
        private ObjectSet<MultiplierType> _MultiplierTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OptionField> OptionFields
        {
            get
            {
                if ((_OptionFields == null))
                {
                    _OptionFields = base.CreateObjectSet<OptionField>("OptionFields");
                }
                return _OptionFields;
            }
        }
        private ObjectSet<OptionField> _OptionFields;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OptionFieldValueList> OptionFieldValueLists
        {
            get
            {
                if ((_OptionFieldValueLists == null))
                {
                    _OptionFieldValueLists = base.CreateObjectSet<OptionFieldValueList>("OptionFieldValueLists");
                }
                return _OptionFieldValueLists;
            }
        }
        private ObjectSet<OptionFieldValueList> _OptionFieldValueLists;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Partner> Partners
        {
            get
            {
                if ((_Partners == null))
                {
                    _Partners = base.CreateObjectSet<Partner>("Partners");
                }
                return _Partners;
            }
        }
        private ObjectSet<Partner> _Partners;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PurchaseType> PurchaseTypes
        {
            get
            {
                if ((_PurchaseTypes == null))
                {
                    _PurchaseTypes = base.CreateObjectSet<PurchaseType>("PurchaseTypes");
                }
                return _PurchaseTypes;
            }
        }
        private ObjectSet<PurchaseType> _PurchaseTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RateScheduleType> RateScheduleTypes
        {
            get
            {
                if ((_RateScheduleTypes == null))
                {
                    _RateScheduleTypes = base.CreateObjectSet<RateScheduleType>("RateScheduleTypes");
                }
                return _RateScheduleTypes;
            }
        }
        private ObjectSet<RateScheduleType> _RateScheduleTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportingFrequency> ReportingFrequencies
        {
            get
            {
                if ((_ReportingFrequencies == null))
                {
                    _ReportingFrequencies = base.CreateObjectSet<ReportingFrequency>("ReportingFrequencies");
                }
                return _ReportingFrequencies;
            }
        }
        private ObjectSet<ReportingFrequency> _ReportingFrequencies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ReportingType> ReportingTypes
        {
            get
            {
                if ((_ReportingTypes == null))
                {
                    _ReportingTypes = base.CreateObjectSet<ReportingType>("ReportingTypes");
                }
                return _ReportingTypes;
            }
        }
        private ObjectSet<ReportingType> _ReportingTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityConversion> SecurityConversions
        {
            get
            {
                if ((_SecurityConversions == null))
                {
                    _SecurityConversions = base.CreateObjectSet<SecurityConversion>("SecurityConversions");
                }
                return _SecurityConversions;
            }
        }
        private ObjectSet<SecurityConversion> _SecurityConversions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SecurityType> SecurityTypes
        {
            get
            {
                if ((_SecurityTypes == null))
                {
                    _SecurityTypes = base.CreateObjectSet<SecurityType>("SecurityTypes");
                }
                return _SecurityTypes;
            }
        }
        private ObjectSet<SecurityType> _SecurityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ShareClassType> ShareClassTypes
        {
            get
            {
                if ((_ShareClassTypes == null))
                {
                    _ShareClassTypes = base.CreateObjectSet<ShareClassType>("ShareClassTypes");
                }
                return _ShareClassTypes;
            }
        }
        private ObjectSet<ShareClassType> _ShareClassTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STATE> STATEs
        {
            get
            {
                if ((_STATEs == null))
                {
                    _STATEs = base.CreateObjectSet<STATE>("STATEs");
                }
                return _STATEs;
            }
        }
        private ObjectSet<STATE> _STATEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionType> TransactionTypes
        {
            get
            {
                if ((_TransactionTypes == null))
                {
                    _TransactionTypes = base.CreateObjectSet<TransactionType>("TransactionTypes");
                }
                return _TransactionTypes;
            }
        }
        private ObjectSet<TransactionType> _TransactionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnderlyingDirectLastPrice> UnderlyingDirectLastPrices
        {
            get
            {
                if ((_UnderlyingDirectLastPrices == null))
                {
                    _UnderlyingDirectLastPrices = base.CreateObjectSet<UnderlyingDirectLastPrice>("UnderlyingDirectLastPrices");
                }
                return _UnderlyingDirectLastPrices;
            }
        }
        private ObjectSet<UnderlyingDirectLastPrice> _UnderlyingDirectLastPrices;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnderlyingDirectLastPriceHistory> UnderlyingDirectLastPriceHistories
        {
            get
            {
                if ((_UnderlyingDirectLastPriceHistories == null))
                {
                    _UnderlyingDirectLastPriceHistories = base.CreateObjectSet<UnderlyingDirectLastPriceHistory>("UnderlyingDirectLastPriceHistories");
                }
                return _UnderlyingDirectLastPriceHistories;
            }
        }
        private ObjectSet<UnderlyingDirectLastPriceHistory> _UnderlyingDirectLastPriceHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                if ((_UnderlyingFunds == null))
                {
                    _UnderlyingFunds = base.CreateObjectSet<UnderlyingFund>("UnderlyingFunds");
                }
                return _UnderlyingFunds;
            }
        }
        private ObjectSet<UnderlyingFund> _UnderlyingFunds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnderlyingFundCapitalCall> UnderlyingFundCapitalCalls
        {
            get
            {
                if ((_UnderlyingFundCapitalCalls == null))
                {
                    _UnderlyingFundCapitalCalls = base.CreateObjectSet<UnderlyingFundCapitalCall>("UnderlyingFundCapitalCalls");
                }
                return _UnderlyingFundCapitalCalls;
            }
        }
        private ObjectSet<UnderlyingFundCapitalCall> _UnderlyingFundCapitalCalls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnderlyingFundCapitalCallLineItem> UnderlyingFundCapitalCallLineItems
        {
            get
            {
                if ((_UnderlyingFundCapitalCallLineItems == null))
                {
                    _UnderlyingFundCapitalCallLineItems = base.CreateObjectSet<UnderlyingFundCapitalCallLineItem>("UnderlyingFundCapitalCallLineItems");
                }
                return _UnderlyingFundCapitalCallLineItems;
            }
        }
        private ObjectSet<UnderlyingFundCapitalCallLineItem> _UnderlyingFundCapitalCallLineItems;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnderlyingFundCashDistribution> UnderlyingFundCashDistributions
        {
            get
            {
                if ((_UnderlyingFundCashDistributions == null))
                {
                    _UnderlyingFundCashDistributions = base.CreateObjectSet<UnderlyingFundCashDistribution>("UnderlyingFundCashDistributions");
                }
                return _UnderlyingFundCashDistributions;
            }
        }
        private ObjectSet<UnderlyingFundCashDistribution> _UnderlyingFundCashDistributions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnderlyingFundNAV> UnderlyingFundNAVs
        {
            get
            {
                if ((_UnderlyingFundNAVs == null))
                {
                    _UnderlyingFundNAVs = base.CreateObjectSet<UnderlyingFundNAV>("UnderlyingFundNAVs");
                }
                return _UnderlyingFundNAVs;
            }
        }
        private ObjectSet<UnderlyingFundNAV> _UnderlyingFundNAVs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnderlyingFundNAVHistory> UnderlyingFundNAVHistories
        {
            get
            {
                if ((_UnderlyingFundNAVHistories == null))
                {
                    _UnderlyingFundNAVHistories = base.CreateObjectSet<UnderlyingFundNAVHistory>("UnderlyingFundNAVHistories");
                }
                return _UnderlyingFundNAVHistories;
            }
        }
        private ObjectSet<UnderlyingFundNAVHistory> _UnderlyingFundNAVHistories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnderlyingFundType> UnderlyingFundTypes
        {
            get
            {
                if ((_UnderlyingFundTypes == null))
                {
                    _UnderlyingFundTypes = base.CreateObjectSet<UnderlyingFundType>("UnderlyingFundTypes");
                }
                return _UnderlyingFundTypes;
            }
        }
        private ObjectSet<UnderlyingFundType> _UnderlyingFundTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityTypes(ActivityType activityType)
        {
            base.AddObject("ActivityTypes", activityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddressTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddressTypes(AddressType addressType)
        {
            base.AddObject("AddressTypes", addressType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapitalCalls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapitalCalls(CapitalCall capitalCall)
        {
            base.AddObject("CapitalCalls", capitalCall);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapitalCallLineItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapitalCallLineItems(CapitalCallLineItem capitalCallLineItem)
        {
            base.AddObject("CapitalCallLineItems", capitalCallLineItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapitalCallLineItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapitalCallLineItemTypes(CapitalCallLineItemType capitalCallLineItemType)
        {
            base.AddObject("CapitalCallLineItemTypes", capitalCallLineItemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapitalCallTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapitalCallTypes(CapitalCallType capitalCallType)
        {
            base.AddObject("CapitalCallTypes", capitalCallType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapitalDistributions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapitalDistributions(CapitalDistribution capitalDistribution)
        {
            base.AddObject("CapitalDistributions", capitalDistribution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapitalDistributionLineItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapitalDistributionLineItems(CapitalDistributionLineItem capitalDistributionLineItem)
        {
            base.AddObject("CapitalDistributionLineItems", capitalDistributionLineItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CapitalDistributionProfits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCapitalDistributionProfits(CapitalDistributionProfit capitalDistributionProfit)
        {
            base.AddObject("CapitalDistributionProfits", capitalDistributionProfit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CashDistributions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCashDistributions(CashDistribution cashDistribution)
        {
            base.AddObject("CashDistributions", cashDistribution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CashDistributionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCashDistributionTypes(CashDistributionType cashDistributionType)
        {
            base.AddObject("CashDistributionTypes", cashDistributionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Communications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommunications(Communication communication)
        {
            base.AddObject("Communications", communication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommunicationGroupings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommunicationGroupings(CommunicationGrouping communicationGrouping)
        {
            base.AddObject("CommunicationGroupings", communicationGrouping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommunicationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommunicationTypes(CommunicationType communicationType)
        {
            base.AddObject("CommunicationTypes", communicationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactAddresses(ContactAddress contactAddress)
        {
            base.AddObject("ContactAddresses", contactAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactCommunications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactCommunications(ContactCommunication contactCommunication)
        {
            base.AddObject("ContactCommunications", contactCommunication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COUNTRies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOUNTRies(COUNTRY cOUNTRY)
        {
            base.AddObject("COUNTRies", cOUNTRY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Currencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomFields(CustomField customField)
        {
            base.AddObject("CustomFields", customField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomFieldValues EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomFieldValues(CustomFieldValue customFieldValue)
        {
            base.AddObject("CustomFieldValues", customFieldValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataTypes(DataType dataType)
        {
            base.AddObject("DataTypes", dataType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Deals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeals(Deal deal)
        {
            base.AddObject("Deals", deal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealClosings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealClosings(DealClosing dealClosing)
        {
            base.AddObject("DealClosings", dealClosing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealClosingCosts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealClosingCosts(DealClosingCost dealClosingCost)
        {
            base.AddObject("DealClosingCosts", dealClosingCost);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealClosingCostTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealClosingCostTypes(DealClosingCostType dealClosingCostType)
        {
            base.AddObject("DealClosingCostTypes", dealClosingCostType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealUnderlyingDirects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealUnderlyingDirects(DealUnderlyingDirect dealUnderlyingDirect)
        {
            base.AddObject("DealUnderlyingDirects", dealUnderlyingDirect);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealUnderlyingFunds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealUnderlyingFunds(DealUnderlyingFund dealUnderlyingFund)
        {
            base.AddObject("DealUnderlyingFunds", dealUnderlyingFund);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DealUnderlyingFundAdjustments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDealUnderlyingFundAdjustments(DealUnderlyingFundAdjustment dealUnderlyingFundAdjustment)
        {
            base.AddObject("DealUnderlyingFundAdjustments", dealUnderlyingFundAdjustment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentTypes(DocumentType documentType)
        {
            base.AddObject("DocumentTypes", documentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Equities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquities(Equity equity)
        {
            base.AddObject("Equities", equity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquitySplits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquitySplits(EquitySplit equitySplit)
        {
            base.AddObject("EquitySplits", equitySplit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EquityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEquityTypes(EquityType equityType)
        {
            base.AddObject("EquityTypes", equityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileTypes(FileType fileType)
        {
            base.AddObject("FileTypes", fileType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FixedIncomes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFixedIncomes(FixedIncome fixedIncome)
        {
            base.AddObject("FixedIncomes", fixedIncome);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FixedIncomeTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFixedIncomeTypes(FixedIncomeType fixedIncomeType)
        {
            base.AddObject("FixedIncomeTypes", fixedIncomeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Funds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFunds(Fund fund)
        {
            base.AddObject("Funds", fund);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundAccounts(FundAccount fundAccount)
        {
            base.AddObject("FundAccounts", fundAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundActivityHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundActivityHistories(FundActivityHistory fundActivityHistory)
        {
            base.AddObject("FundActivityHistories", fundActivityHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundClosings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundClosings(FundClosing fundClosing)
        {
            base.AddObject("FundClosings", fundClosing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundExpenses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundExpenses(FundExpense fundExpense)
        {
            base.AddObject("FundExpenses", fundExpense);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundExpenseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundExpenseTypes(FundExpenseType fundExpenseType)
        {
            base.AddObject("FundExpenseTypes", fundExpenseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundRateSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundRateSchedules(FundRateSchedule fundRateSchedule)
        {
            base.AddObject("FundRateSchedules", fundRateSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Geographies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGeographies(Geography geography)
        {
            base.AddObject("Geographies", geography);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Industries EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIndustries(Industry industry)
        {
            base.AddObject("Industries", industry);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestmentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestmentTypes(InvestmentType investmentType)
        {
            base.AddObject("InvestmentTypes", investmentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Investors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestors(Investor investor)
        {
            base.AddObject("Investors", investor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorAccounts(InvestorAccount investorAccount)
        {
            base.AddObject("InvestorAccounts", investorAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorAddresses(InvestorAddress investorAddress)
        {
            base.AddObject("InvestorAddresses", investorAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorCommunications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorCommunications(InvestorCommunication investorCommunication)
        {
            base.AddObject("InvestorCommunications", investorCommunication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorContacts(InvestorContact investorContact)
        {
            base.AddObject("InvestorContacts", investorContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorEntityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorEntityTypes(InvestorEntityType investorEntityType)
        {
            base.AddObject("InvestorEntityTypes", investorEntityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorFunds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorFunds(InvestorFund investorFund)
        {
            base.AddObject("InvestorFunds", investorFund);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorFundDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorFundDocuments(InvestorFundDocument investorFundDocument)
        {
            base.AddObject("InvestorFundDocuments", investorFundDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorFundTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorFundTransactions(InvestorFundTransaction investorFundTransaction)
        {
            base.AddObject("InvestorFundTransactions", investorFundTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorTypes(InvestorType investorType)
        {
            base.AddObject("InvestorTypes", investorType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Issuers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToIssuers(Issuer issuer)
        {
            base.AddObject("Issuers", issuer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagementFeeRateSchedules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagementFeeRateSchedules(ManagementFeeRateSchedule managementFeeRateSchedule)
        {
            base.AddObject("ManagementFeeRateSchedules", managementFeeRateSchedule);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManagementFeeRateScheduleTiers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManagementFeeRateScheduleTiers(ManagementFeeRateScheduleTier managementFeeRateScheduleTier)
        {
            base.AddObject("ManagementFeeRateScheduleTiers", managementFeeRateScheduleTier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MODULEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMODULEs(MODULE mODULE)
        {
            base.AddObject("MODULEs", mODULE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MultiplierTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMultiplierTypes(MultiplierType multiplierType)
        {
            base.AddObject("MultiplierTypes", multiplierType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OptionFields EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptionFields(OptionField optionField)
        {
            base.AddObject("OptionFields", optionField);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OptionFieldValueLists EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOptionFieldValueLists(OptionFieldValueList optionFieldValueList)
        {
            base.AddObject("OptionFieldValueLists", optionFieldValueList);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Partners EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPartners(Partner partner)
        {
            base.AddObject("Partners", partner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PurchaseTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPurchaseTypes(PurchaseType purchaseType)
        {
            base.AddObject("PurchaseTypes", purchaseType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RateScheduleTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRateScheduleTypes(RateScheduleType rateScheduleType)
        {
            base.AddObject("RateScheduleTypes", rateScheduleType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportingFrequencies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportingFrequencies(ReportingFrequency reportingFrequency)
        {
            base.AddObject("ReportingFrequencies", reportingFrequency);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReportingTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReportingTypes(ReportingType reportingType)
        {
            base.AddObject("ReportingTypes", reportingType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityConversions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityConversions(SecurityConversion securityConversion)
        {
            base.AddObject("SecurityConversions", securityConversion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SecurityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSecurityTypes(SecurityType securityType)
        {
            base.AddObject("SecurityTypes", securityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ShareClassTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToShareClassTypes(ShareClassType shareClassType)
        {
            base.AddObject("ShareClassTypes", shareClassType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STATEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTATEs(STATE sTATE)
        {
            base.AddObject("STATEs", sTATE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionTypes(TransactionType transactionType)
        {
            base.AddObject("TransactionTypes", transactionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnderlyingDirectLastPrices EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnderlyingDirectLastPrices(UnderlyingDirectLastPrice underlyingDirectLastPrice)
        {
            base.AddObject("UnderlyingDirectLastPrices", underlyingDirectLastPrice);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnderlyingDirectLastPriceHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnderlyingDirectLastPriceHistories(UnderlyingDirectLastPriceHistory underlyingDirectLastPriceHistory)
        {
            base.AddObject("UnderlyingDirectLastPriceHistories", underlyingDirectLastPriceHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnderlyingFunds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnderlyingFunds(UnderlyingFund underlyingFund)
        {
            base.AddObject("UnderlyingFunds", underlyingFund);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnderlyingFundCapitalCalls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnderlyingFundCapitalCalls(UnderlyingFundCapitalCall underlyingFundCapitalCall)
        {
            base.AddObject("UnderlyingFundCapitalCalls", underlyingFundCapitalCall);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnderlyingFundCapitalCallLineItems EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnderlyingFundCapitalCallLineItems(UnderlyingFundCapitalCallLineItem underlyingFundCapitalCallLineItem)
        {
            base.AddObject("UnderlyingFundCapitalCallLineItems", underlyingFundCapitalCallLineItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnderlyingFundCashDistributions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnderlyingFundCashDistributions(UnderlyingFundCashDistribution underlyingFundCashDistribution)
        {
            base.AddObject("UnderlyingFundCashDistributions", underlyingFundCashDistribution);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnderlyingFundNAVs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnderlyingFundNAVs(UnderlyingFundNAV underlyingFundNAV)
        {
            base.AddObject("UnderlyingFundNAVs", underlyingFundNAV);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnderlyingFundNAVHistories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnderlyingFundNAVHistories(UnderlyingFundNAVHistory underlyingFundNAVHistory)
        {
            base.AddObject("UnderlyingFundNAVHistories", underlyingFundNAVHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnderlyingFundTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnderlyingFundTypes(UnderlyingFundType underlyingFundType)
        {
            base.AddObject("UnderlyingFundTypes", underlyingFundType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="account1">Initial value of the Account1 property.</param>
        /// <param name="accountNumberCash">Initial value of the AccountNumberCash property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Account CreateAccount(global::System.Int32 accountID, global::System.Int32 entityID, global::System.String account1, global::System.String accountNumberCash, global::System.Boolean isPrimary, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Account account = new Account();
            account.AccountID = accountID;
            account.EntityID = entityID;
            account.Account1 = account1;
            account.AccountNumberCash = accountNumberCash;
            account.IsPrimary = isPrimary;
            account.CreatedDate = createdDate;
            account.CreatedBy = createdBy;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                if (_AccountID != value)
                {
                    OnAccountIDChanging(value);
                    ReportPropertyChanging("AccountID");
                    _AccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AccountID");
                    OnAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _AccountID;
        partial void OnAccountIDChanging(global::System.Int32 value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Routing
        {
            get
            {
                return _Routing;
            }
            set
            {
                OnRoutingChanging(value);
                ReportPropertyChanging("Routing");
                _Routing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Routing");
                OnRoutingChanged();
            }
        }
        private Nullable<global::System.Int32> _Routing;
        partial void OnRoutingChanging(Nullable<global::System.Int32> value);
        partial void OnRoutingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account1
        {
            get
            {
                return _Account1;
            }
            set
            {
                OnAccount1Changing(value);
                ReportPropertyChanging("Account1");
                _Account1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account1");
                OnAccount1Changed();
            }
        }
        private global::System.String _Account1;
        partial void OnAccount1Changing(global::System.String value);
        partial void OnAccount1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumberCash
        {
            get
            {
                return _AccountNumberCash;
            }
            set
            {
                OnAccountNumberCashChanging(value);
                ReportPropertyChanging("AccountNumberCash");
                _AccountNumberCash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNumberCash");
                OnAccountNumberCashChanged();
            }
        }
        private global::System.String _AccountNumberCash;
        partial void OnAccountNumberCashChanging(global::System.String value);
        partial void OnAccountNumberCashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SWIFT
        {
            get
            {
                return _SWIFT;
            }
            set
            {
                OnSWIFTChanging(value);
                ReportPropertyChanging("SWIFT");
                _SWIFT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SWIFT");
                OnSWIFTChanged();
            }
        }
        private global::System.String _SWIFT;
        partial void OnSWIFTChanging(global::System.String value);
        partial void OnSWIFTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountOf
        {
            get
            {
                return _AccountOf;
            }
            set
            {
                OnAccountOfChanging(value);
                ReportPropertyChanging("AccountOf");
                _AccountOf = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountOf");
                OnAccountOfChanged();
            }
        }
        private global::System.String _AccountOf;
        partial void OnAccountOfChanging(global::System.String value);
        partial void OnAccountOfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FFC
        {
            get
            {
                return _FFC;
            }
            set
            {
                OnFFCChanging(value);
                ReportPropertyChanging("FFC");
                _FFC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FFC");
                OnFFCChanged();
            }
        }
        private global::System.String _FFC;
        partial void OnFFCChanging(global::System.String value);
        partial void OnFFCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FFCNumber
        {
            get
            {
                return _FFCNumber;
            }
            set
            {
                OnFFCNumberChanging(value);
                ReportPropertyChanging("FFCNumber");
                _FFCNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FFCNumber");
                OnFFCNumberChanged();
            }
        }
        private global::System.String _FFCNumber;
        partial void OnFFCNumberChanging(global::System.String value);
        partial void OnFFCNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IBAN
        {
            get
            {
                return _IBAN;
            }
            set
            {
                OnIBANChanging(value);
                ReportPropertyChanging("IBAN");
                _IBAN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IBAN");
                OnIBANChanged();
            }
        }
        private global::System.String _IBAN;
        partial void OnIBANChanging(global::System.String value);
        partial void OnIBANChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ByOrderOf
        {
            get
            {
                return _ByOrderOf;
            }
            set
            {
                OnByOrderOfChanging(value);
                ReportPropertyChanging("ByOrderOf");
                _ByOrderOf = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ByOrderOf");
                OnByOrderOfChanged();
            }
        }
        private global::System.String _ByOrderOf;
        partial void OnByOrderOfChanging(global::System.String value);
        partial void OnByOrderOfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attention
        {
            get
            {
                return _Attention;
            }
            set
            {
                OnAttentionChanging(value);
                ReportPropertyChanging("Attention");
                _Attention = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attention");
                OnAttentionChanged();
            }
        }
        private global::System.String _Attention;
        partial void OnAttentionChanging(global::System.String value);
        partial void OnAttentionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_Account", "UnderlyingFund")]
        public EntityCollection<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_Account", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_Account", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="ActivityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityType object.
        /// </summary>
        /// <param name="activityTypeID">Initial value of the ActivityTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        public static ActivityType CreateActivityType(global::System.Int32 activityTypeID, global::System.String name, global::System.Boolean enabled)
        {
            ActivityType activityType = new ActivityType();
            activityType.ActivityTypeID = activityTypeID;
            activityType.Name = name;
            activityType.Enabled = enabled;
            return activityType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityTypeID
        {
            get
            {
                return _ActivityTypeID;
            }
            set
            {
                if (_ActivityTypeID != value)
                {
                    OnActivityTypeIDChanging(value);
                    ReportPropertyChanging("ActivityTypeID");
                    _ActivityTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ActivityTypeID");
                    OnActivityTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ActivityTypeID;
        partial void OnActivityTypeIDChanging(global::System.Int32 value);
        partial void OnActivityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundActivityHistory_ActivityType", "FundActivityHistory")]
        public EntityCollection<FundActivityHistory> FundActivityHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundActivityHistory>("DeepBlueModel.FK_FundActivityHistory_ActivityType", "FundActivityHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundActivityHistory>("DeepBlueModel.FK_FundActivityHistory_ActivityType", "FundActivityHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
        /// <param name="address1">Initial value of the Address1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="listed">Initial value of the Listed property.</param>
        /// <param name="isPreferred">Initial value of the IsPreferred property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Address CreateAddress(global::System.Int32 addressID, global::System.Int32 entityID, global::System.Int32 addressTypeID, global::System.String address1, global::System.String city, global::System.Int32 country, global::System.Boolean listed, global::System.Boolean isPreferred, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Address address = new Address();
            address.AddressID = addressID;
            address.EntityID = entityID;
            address.AddressTypeID = addressTypeID;
            address.Address1 = address1;
            address.City = city;
            address.Country = country;
            address.Listed = listed;
            address.IsPreferred = isPreferred;
            address.CreatedDate = createdDate;
            address.CreatedBy = createdBy;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeID
        {
            get
            {
                return _AddressTypeID;
            }
            set
            {
                OnAddressTypeIDChanging(value);
                ReportPropertyChanging("AddressTypeID");
                _AddressTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressTypeID");
                OnAddressTypeIDChanged();
            }
        }
        private global::System.Int32 _AddressTypeID;
        partial void OnAddressTypeIDChanging(global::System.Int32 value);
        partial void OnAddressTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address3
        {
            get
            {
                return _Address3;
            }
            set
            {
                OnAddress3Changing(value);
                ReportPropertyChanging("Address3");
                _Address3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address3");
                OnAddress3Changed();
            }
        }
        private global::System.String _Address3;
        partial void OnAddress3Changing(global::System.String value);
        partial void OnAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StProvince
        {
            get
            {
                return _StProvince;
            }
            set
            {
                OnStProvinceChanging(value);
                ReportPropertyChanging("StProvince");
                _StProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StProvince");
                OnStProvinceChanged();
            }
        }
        private global::System.String _StProvince;
        partial void OnStProvinceChanging(global::System.String value);
        partial void OnStProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private Nullable<global::System.Int32> _State;
        partial void OnStateChanging(Nullable<global::System.Int32> value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.Int32 _Country;
        partial void OnCountryChanging(global::System.Int32 value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Listed
        {
            get
            {
                return _Listed;
            }
            set
            {
                OnListedChanging(value);
                ReportPropertyChanging("Listed");
                _Listed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Listed");
                OnListedChanged();
            }
        }
        private global::System.Boolean _Listed;
        partial void OnListedChanging(global::System.Boolean value);
        partial void OnListedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPreferred
        {
            get
            {
                return _IsPreferred;
            }
            set
            {
                OnIsPreferredChanging(value);
                ReportPropertyChanging("IsPreferred");
                _IsPreferred = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPreferred");
                OnIsPreferredChanged();
            }
        }
        private global::System.Boolean _IsPreferred;
        partial void OnIsPreferredChanging(global::System.Boolean value);
        partial void OnIsPreferredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_AddressType", "AddressType")]
        public AddressType AddressType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("DeepBlueModel.FK_Address_AddressType", "AddressType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("DeepBlueModel.FK_Address_AddressType", "AddressType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AddressType> AddressTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("DeepBlueModel.FK_Address_AddressType", "AddressType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AddressType>("DeepBlueModel.FK_Address_AddressType", "AddressType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_Country", "COUNTRY")]
        public COUNTRY COUNTRY1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("DeepBlueModel.FK_Address_Country", "COUNTRY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("DeepBlueModel.FK_Address_Country", "COUNTRY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COUNTRY> COUNTRY1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("DeepBlueModel.FK_Address_Country", "COUNTRY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COUNTRY>("DeepBlueModel.FK_Address_Country", "COUNTRY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_State", "STATE")]
        public STATE STATE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Address_State", "STATE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Address_State", "STATE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STATE> STATE1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Address_State", "STATE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STATE>("DeepBlueModel.FK_Address_State", "STATE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactAddress_Address", "ContactAddress")]
        public EntityCollection<ContactAddress> ContactAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactAddress>("DeepBlueModel.FK_ContactAddress_Address", "ContactAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactAddress>("DeepBlueModel.FK_ContactAddress_Address", "ContactAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAddress_Address", "InvestorAddress")]
        public EntityCollection<InvestorAddress> InvestorAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorAddress>("DeepBlueModel.FK_InvestorAddress_Address", "InvestorAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorAddress>("DeepBlueModel.FK_InvestorAddress_Address", "InvestorAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="AddressType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressType object.
        /// </summary>
        /// <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="addressTypeName">Initial value of the AddressTypeName property.</param>
        public static AddressType CreateAddressType(global::System.Int32 addressTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.String addressTypeName)
        {
            AddressType addressType = new AddressType();
            addressType.AddressTypeID = addressTypeID;
            addressType.EntityID = entityID;
            addressType.Enabled = enabled;
            addressType.AddressTypeName = addressTypeName;
            return addressType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeID
        {
            get
            {
                return _AddressTypeID;
            }
            set
            {
                if (_AddressTypeID != value)
                {
                    OnAddressTypeIDChanging(value);
                    ReportPropertyChanging("AddressTypeID");
                    _AddressTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressTypeID");
                    OnAddressTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressTypeID;
        partial void OnAddressTypeIDChanging(global::System.Int32 value);
        partial void OnAddressTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressTypeName
        {
            get
            {
                return _AddressTypeName;
            }
            set
            {
                OnAddressTypeNameChanging(value);
                ReportPropertyChanging("AddressTypeName");
                _AddressTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressTypeName");
                OnAddressTypeNameChanged();
            }
        }
        private global::System.String _AddressTypeName;
        partial void OnAddressTypeNameChanging(global::System.String value);
        partial void OnAddressTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_AddressType", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("DeepBlueModel.FK_Address_AddressType", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("DeepBlueModel.FK_Address_AddressType", "Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CapitalCall")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapitalCall : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapitalCall object.
        /// </summary>
        /// <param name="capitalCallID">Initial value of the CapitalCallID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="capitalCallDate">Initial value of the CapitalCallDate property.</param>
        /// <param name="capitalCallDueDate">Initial value of the CapitalCallDueDate property.</param>
        /// <param name="capitalAmountCalled">Initial value of the CapitalAmountCalled property.</param>
        /// <param name="investmentAmount">Initial value of the InvestmentAmount property.</param>
        /// <param name="capitalCallTypeID">Initial value of the CapitalCallTypeID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CapitalCall CreateCapitalCall(global::System.Int32 capitalCallID, global::System.Int32 fundID, global::System.DateTime capitalCallDate, global::System.DateTime capitalCallDueDate, global::System.Decimal capitalAmountCalled, global::System.Decimal investmentAmount, global::System.Int32 capitalCallTypeID, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            CapitalCall capitalCall = new CapitalCall();
            capitalCall.CapitalCallID = capitalCallID;
            capitalCall.FundID = fundID;
            capitalCall.CapitalCallDate = capitalCallDate;
            capitalCall.CapitalCallDueDate = capitalCallDueDate;
            capitalCall.CapitalAmountCalled = capitalAmountCalled;
            capitalCall.InvestmentAmount = investmentAmount;
            capitalCall.CapitalCallTypeID = capitalCallTypeID;
            capitalCall.CreatedDate = createdDate;
            capitalCall.CreatedBy = createdBy;
            return capitalCall;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalCallID
        {
            get
            {
                return _CapitalCallID;
            }
            set
            {
                if (_CapitalCallID != value)
                {
                    OnCapitalCallIDChanging(value);
                    ReportPropertyChanging("CapitalCallID");
                    _CapitalCallID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CapitalCallID");
                    OnCapitalCallIDChanged();
                }
            }
        }
        private global::System.Int32 _CapitalCallID;
        partial void OnCapitalCallIDChanging(global::System.Int32 value);
        partial void OnCapitalCallIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CapitalCallDate
        {
            get
            {
                return _CapitalCallDate;
            }
            set
            {
                OnCapitalCallDateChanging(value);
                ReportPropertyChanging("CapitalCallDate");
                _CapitalCallDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalCallDate");
                OnCapitalCallDateChanged();
            }
        }
        private global::System.DateTime _CapitalCallDate;
        partial void OnCapitalCallDateChanging(global::System.DateTime value);
        partial void OnCapitalCallDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CapitalCallDueDate
        {
            get
            {
                return _CapitalCallDueDate;
            }
            set
            {
                OnCapitalCallDueDateChanging(value);
                ReportPropertyChanging("CapitalCallDueDate");
                _CapitalCallDueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalCallDueDate");
                OnCapitalCallDueDateChanged();
            }
        }
        private global::System.DateTime _CapitalCallDueDate;
        partial void OnCapitalCallDueDateChanging(global::System.DateTime value);
        partial void OnCapitalCallDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CapitalAmountCalled
        {
            get
            {
                return _CapitalAmountCalled;
            }
            set
            {
                OnCapitalAmountCalledChanging(value);
                ReportPropertyChanging("CapitalAmountCalled");
                _CapitalAmountCalled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalAmountCalled");
                OnCapitalAmountCalledChanged();
            }
        }
        private global::System.Decimal _CapitalAmountCalled;
        partial void OnCapitalAmountCalledChanging(global::System.Decimal value);
        partial void OnCapitalAmountCalledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InvestmentAmount
        {
            get
            {
                return _InvestmentAmount;
            }
            set
            {
                OnInvestmentAmountChanging(value);
                ReportPropertyChanging("InvestmentAmount");
                _InvestmentAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestmentAmount");
                OnInvestmentAmountChanged();
            }
        }
        private global::System.Decimal _InvestmentAmount;
        partial void OnInvestmentAmountChanging(global::System.Decimal value);
        partial void OnInvestmentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NewInvestmentAmount
        {
            get
            {
                return _NewInvestmentAmount;
            }
            set
            {
                OnNewInvestmentAmountChanging(value);
                ReportPropertyChanging("NewInvestmentAmount");
                _NewInvestmentAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewInvestmentAmount");
                OnNewInvestmentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _NewInvestmentAmount;
        partial void OnNewInvestmentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnNewInvestmentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ExistingInvestmentAmount
        {
            get
            {
                return _ExistingInvestmentAmount;
            }
            set
            {
                OnExistingInvestmentAmountChanging(value);
                ReportPropertyChanging("ExistingInvestmentAmount");
                _ExistingInvestmentAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExistingInvestmentAmount");
                OnExistingInvestmentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _ExistingInvestmentAmount;
        partial void OnExistingInvestmentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnExistingInvestmentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ManagementFees
        {
            get
            {
                return _ManagementFees;
            }
            set
            {
                OnManagementFeesChanging(value);
                ReportPropertyChanging("ManagementFees");
                _ManagementFees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagementFees");
                OnManagementFeesChanged();
            }
        }
        private Nullable<global::System.Decimal> _ManagementFees;
        partial void OnManagementFeesChanging(Nullable<global::System.Decimal> value);
        partial void OnManagementFeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ManagementFeeStartDate
        {
            get
            {
                return _ManagementFeeStartDate;
            }
            set
            {
                OnManagementFeeStartDateChanging(value);
                ReportPropertyChanging("ManagementFeeStartDate");
                _ManagementFeeStartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagementFeeStartDate");
                OnManagementFeeStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ManagementFeeStartDate;
        partial void OnManagementFeeStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnManagementFeeStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ManagementFeeEndDate
        {
            get
            {
                return _ManagementFeeEndDate;
            }
            set
            {
                OnManagementFeeEndDateChanging(value);
                ReportPropertyChanging("ManagementFeeEndDate");
                _ManagementFeeEndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagementFeeEndDate");
                OnManagementFeeEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ManagementFeeEndDate;
        partial void OnManagementFeeEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnManagementFeeEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundExpenses
        {
            get
            {
                return _FundExpenses;
            }
            set
            {
                OnFundExpensesChanging(value);
                ReportPropertyChanging("FundExpenses");
                _FundExpenses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundExpenses");
                OnFundExpensesChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundExpenses;
        partial void OnFundExpensesChanging(Nullable<global::System.Decimal> value);
        partial void OnFundExpensesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ManagementFeeInterest
        {
            get
            {
                return _ManagementFeeInterest;
            }
            set
            {
                OnManagementFeeInterestChanging(value);
                ReportPropertyChanging("ManagementFeeInterest");
                _ManagementFeeInterest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagementFeeInterest");
                OnManagementFeeInterestChanged();
            }
        }
        private Nullable<global::System.Decimal> _ManagementFeeInterest;
        partial void OnManagementFeeInterestChanging(Nullable<global::System.Decimal> value);
        partial void OnManagementFeeInterestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InvestedAmountInterest
        {
            get
            {
                return _InvestedAmountInterest;
            }
            set
            {
                OnInvestedAmountInterestChanging(value);
                ReportPropertyChanging("InvestedAmountInterest");
                _InvestedAmountInterest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestedAmountInterest");
                OnInvestedAmountInterestChanged();
            }
        }
        private Nullable<global::System.Decimal> _InvestedAmountInterest;
        partial void OnInvestedAmountInterestChanging(Nullable<global::System.Decimal> value);
        partial void OnInvestedAmountInterestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CapitalCallNumber
        {
            get
            {
                return _CapitalCallNumber;
            }
            set
            {
                OnCapitalCallNumberChanging(value);
                ReportPropertyChanging("CapitalCallNumber");
                _CapitalCallNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CapitalCallNumber");
                OnCapitalCallNumberChanged();
            }
        }
        private global::System.String _CapitalCallNumber;
        partial void OnCapitalCallNumberChanging(global::System.String value);
        partial void OnCapitalCallNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalCallTypeID
        {
            get
            {
                return _CapitalCallTypeID;
            }
            set
            {
                OnCapitalCallTypeIDChanging(value);
                ReportPropertyChanging("CapitalCallTypeID");
                _CapitalCallTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalCallTypeID");
                OnCapitalCallTypeIDChanged();
            }
        }
        private global::System.Int32 _CapitalCallTypeID;
        partial void OnCapitalCallTypeIDChanging(global::System.Int32 value);
        partial void OnCapitalCallTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalCall_CapitalCallType", "CapitalCallType")]
        public CapitalCallType CapitalCallType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalCallType>("DeepBlueModel.FK_CapitalCall_CapitalCallType", "CapitalCallType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalCallType>("DeepBlueModel.FK_CapitalCall_CapitalCallType", "CapitalCallType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CapitalCallType> CapitalCallTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalCallType>("DeepBlueModel.FK_CapitalCall_CapitalCallType", "CapitalCallType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CapitalCallType>("DeepBlueModel.FK_CapitalCall_CapitalCallType", "CapitalCallType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalCall_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_CapitalCall_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_CapitalCall_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_CapitalCall_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_CapitalCall_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalCallLineItem_CapitalCall", "CapitalCallLineItem")]
        public EntityCollection<CapitalCallLineItem> CapitalCallLineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapitalCallLineItem>("DeepBlueModel.FK_CapitalCallLineItem_CapitalCall", "CapitalCallLineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapitalCallLineItem>("DeepBlueModel.FK_CapitalCallLineItem_CapitalCall", "CapitalCallLineItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CapitalCallLineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapitalCallLineItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapitalCallLineItem object.
        /// </summary>
        /// <param name="capitalCallLineItemID">Initial value of the CapitalCallLineItemID property.</param>
        /// <param name="capitalCallID">Initial value of the CapitalCallID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="capitalAmountCalled">Initial value of the CapitalAmountCalled property.</param>
        /// <param name="investmentAmount">Initial value of the InvestmentAmount property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CapitalCallLineItem CreateCapitalCallLineItem(global::System.Int32 capitalCallLineItemID, global::System.Int32 capitalCallID, global::System.Int32 investorID, global::System.Decimal capitalAmountCalled, global::System.Decimal investmentAmount, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            CapitalCallLineItem capitalCallLineItem = new CapitalCallLineItem();
            capitalCallLineItem.CapitalCallLineItemID = capitalCallLineItemID;
            capitalCallLineItem.CapitalCallID = capitalCallID;
            capitalCallLineItem.InvestorID = investorID;
            capitalCallLineItem.CapitalAmountCalled = capitalAmountCalled;
            capitalCallLineItem.InvestmentAmount = investmentAmount;
            capitalCallLineItem.CreatedDate = createdDate;
            capitalCallLineItem.CreatedBy = createdBy;
            return capitalCallLineItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalCallLineItemID
        {
            get
            {
                return _CapitalCallLineItemID;
            }
            set
            {
                if (_CapitalCallLineItemID != value)
                {
                    OnCapitalCallLineItemIDChanging(value);
                    ReportPropertyChanging("CapitalCallLineItemID");
                    _CapitalCallLineItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CapitalCallLineItemID");
                    OnCapitalCallLineItemIDChanged();
                }
            }
        }
        private global::System.Int32 _CapitalCallLineItemID;
        partial void OnCapitalCallLineItemIDChanging(global::System.Int32 value);
        partial void OnCapitalCallLineItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalCallID
        {
            get
            {
                return _CapitalCallID;
            }
            set
            {
                OnCapitalCallIDChanging(value);
                ReportPropertyChanging("CapitalCallID");
                _CapitalCallID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalCallID");
                OnCapitalCallIDChanged();
            }
        }
        private global::System.Int32 _CapitalCallID;
        partial void OnCapitalCallIDChanging(global::System.Int32 value);
        partial void OnCapitalCallIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal CapitalAmountCalled
        {
            get
            {
                return _CapitalAmountCalled;
            }
            set
            {
                OnCapitalAmountCalledChanging(value);
                ReportPropertyChanging("CapitalAmountCalled");
                _CapitalAmountCalled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalAmountCalled");
                OnCapitalAmountCalledChanged();
            }
        }
        private global::System.Decimal _CapitalAmountCalled;
        partial void OnCapitalAmountCalledChanging(global::System.Decimal value);
        partial void OnCapitalAmountCalledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InvestmentAmount
        {
            get
            {
                return _InvestmentAmount;
            }
            set
            {
                OnInvestmentAmountChanging(value);
                ReportPropertyChanging("InvestmentAmount");
                _InvestmentAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestmentAmount");
                OnInvestmentAmountChanged();
            }
        }
        private global::System.Decimal _InvestmentAmount;
        partial void OnInvestmentAmountChanging(global::System.Decimal value);
        partial void OnInvestmentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> NewInvestmentAmount
        {
            get
            {
                return _NewInvestmentAmount;
            }
            set
            {
                OnNewInvestmentAmountChanging(value);
                ReportPropertyChanging("NewInvestmentAmount");
                _NewInvestmentAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewInvestmentAmount");
                OnNewInvestmentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _NewInvestmentAmount;
        partial void OnNewInvestmentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnNewInvestmentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ExistingInvestmentAmount
        {
            get
            {
                return _ExistingInvestmentAmount;
            }
            set
            {
                OnExistingInvestmentAmountChanging(value);
                ReportPropertyChanging("ExistingInvestmentAmount");
                _ExistingInvestmentAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExistingInvestmentAmount");
                OnExistingInvestmentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _ExistingInvestmentAmount;
        partial void OnExistingInvestmentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnExistingInvestmentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ManagementFees
        {
            get
            {
                return _ManagementFees;
            }
            set
            {
                OnManagementFeesChanging(value);
                ReportPropertyChanging("ManagementFees");
                _ManagementFees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagementFees");
                OnManagementFeesChanged();
            }
        }
        private Nullable<global::System.Decimal> _ManagementFees;
        partial void OnManagementFeesChanging(Nullable<global::System.Decimal> value);
        partial void OnManagementFeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundExpenses
        {
            get
            {
                return _FundExpenses;
            }
            set
            {
                OnFundExpensesChanging(value);
                ReportPropertyChanging("FundExpenses");
                _FundExpenses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundExpenses");
                OnFundExpensesChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundExpenses;
        partial void OnFundExpensesChanging(Nullable<global::System.Decimal> value);
        partial void OnFundExpensesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ManagementFeeInterest
        {
            get
            {
                return _ManagementFeeInterest;
            }
            set
            {
                OnManagementFeeInterestChanging(value);
                ReportPropertyChanging("ManagementFeeInterest");
                _ManagementFeeInterest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagementFeeInterest");
                OnManagementFeeInterestChanged();
            }
        }
        private Nullable<global::System.Decimal> _ManagementFeeInterest;
        partial void OnManagementFeeInterestChanging(Nullable<global::System.Decimal> value);
        partial void OnManagementFeeInterestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> InvestedAmountInterest
        {
            get
            {
                return _InvestedAmountInterest;
            }
            set
            {
                OnInvestedAmountInterestChanging(value);
                ReportPropertyChanging("InvestedAmountInterest");
                _InvestedAmountInterest = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestedAmountInterest");
                OnInvestedAmountInterestChanged();
            }
        }
        private Nullable<global::System.Decimal> _InvestedAmountInterest;
        partial void OnInvestedAmountInterestChanging(Nullable<global::System.Decimal> value);
        partial void OnInvestedAmountInterestChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivedDate;
        partial void OnReceivedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalCallLineItem_CapitalCall", "CapitalCall")]
        public CapitalCall CapitalCall
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalCall>("DeepBlueModel.FK_CapitalCallLineItem_CapitalCall", "CapitalCall").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalCall>("DeepBlueModel.FK_CapitalCallLineItem_CapitalCall", "CapitalCall").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CapitalCall> CapitalCallReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalCall>("DeepBlueModel.FK_CapitalCallLineItem_CapitalCall", "CapitalCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CapitalCall>("DeepBlueModel.FK_CapitalCallLineItem_CapitalCall", "CapitalCall", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalCallLineItem_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_CapitalCallLineItem_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_CapitalCallLineItem_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_CapitalCallLineItem_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_CapitalCallLineItem_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CapitalCallLineItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapitalCallLineItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapitalCallLineItemType object.
        /// </summary>
        /// <param name="capitalCallLineItemTypeID">Initial value of the CapitalCallLineItemTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CapitalCallLineItemType CreateCapitalCallLineItemType(global::System.Int32 capitalCallLineItemTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            CapitalCallLineItemType capitalCallLineItemType = new CapitalCallLineItemType();
            capitalCallLineItemType.CapitalCallLineItemTypeID = capitalCallLineItemTypeID;
            capitalCallLineItemType.EntityID = entityID;
            capitalCallLineItemType.Enabled = enabled;
            capitalCallLineItemType.CreatedDate = createdDate;
            capitalCallLineItemType.CreatedBy = createdBy;
            return capitalCallLineItemType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalCallLineItemTypeID
        {
            get
            {
                return _CapitalCallLineItemTypeID;
            }
            set
            {
                if (_CapitalCallLineItemTypeID != value)
                {
                    OnCapitalCallLineItemTypeIDChanging(value);
                    ReportPropertyChanging("CapitalCallLineItemTypeID");
                    _CapitalCallLineItemTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CapitalCallLineItemTypeID");
                    OnCapitalCallLineItemTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CapitalCallLineItemTypeID;
        partial void OnCapitalCallLineItemTypeIDChanging(global::System.Int32 value);
        partial void OnCapitalCallLineItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CapitalCallType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapitalCallType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapitalCallType object.
        /// </summary>
        /// <param name="capitalCallTypeID">Initial value of the CapitalCallTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CapitalCallType CreateCapitalCallType(global::System.Int32 capitalCallTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            CapitalCallType capitalCallType = new CapitalCallType();
            capitalCallType.CapitalCallTypeID = capitalCallTypeID;
            capitalCallType.EntityID = entityID;
            capitalCallType.Enabled = enabled;
            capitalCallType.CreatedDate = createdDate;
            capitalCallType.CreatedBy = createdBy;
            return capitalCallType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalCallTypeID
        {
            get
            {
                return _CapitalCallTypeID;
            }
            set
            {
                if (_CapitalCallTypeID != value)
                {
                    OnCapitalCallTypeIDChanging(value);
                    ReportPropertyChanging("CapitalCallTypeID");
                    _CapitalCallTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CapitalCallTypeID");
                    OnCapitalCallTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CapitalCallTypeID;
        partial void OnCapitalCallTypeIDChanging(global::System.Int32 value);
        partial void OnCapitalCallTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalCall_CapitalCallType", "CapitalCall")]
        public EntityCollection<CapitalCall> CapitalCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapitalCall>("DeepBlueModel.FK_CapitalCall_CapitalCallType", "CapitalCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapitalCall>("DeepBlueModel.FK_CapitalCall_CapitalCallType", "CapitalCall", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CapitalDistribution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapitalDistribution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapitalDistribution object.
        /// </summary>
        /// <param name="capitalDistributionID">Initial value of the CapitalDistributionID property.</param>
        /// <param name="capitalDistributionDate">Initial value of the CapitalDistributionDate property.</param>
        /// <param name="capitalDistributionDueDate">Initial value of the CapitalDistributionDueDate property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="distributionAmount">Initial value of the DistributionAmount property.</param>
        /// <param name="isManual">Initial value of the IsManual property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CapitalDistribution CreateCapitalDistribution(global::System.Int32 capitalDistributionID, global::System.DateTime capitalDistributionDate, global::System.DateTime capitalDistributionDueDate, global::System.Int32 fundID, global::System.Decimal distributionAmount, global::System.Boolean isManual, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            CapitalDistribution capitalDistribution = new CapitalDistribution();
            capitalDistribution.CapitalDistributionID = capitalDistributionID;
            capitalDistribution.CapitalDistributionDate = capitalDistributionDate;
            capitalDistribution.CapitalDistributionDueDate = capitalDistributionDueDate;
            capitalDistribution.FundID = fundID;
            capitalDistribution.DistributionAmount = distributionAmount;
            capitalDistribution.IsManual = isManual;
            capitalDistribution.CreatedDate = createdDate;
            capitalDistribution.CreatedBy = createdBy;
            return capitalDistribution;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalDistributionID
        {
            get
            {
                return _CapitalDistributionID;
            }
            set
            {
                if (_CapitalDistributionID != value)
                {
                    OnCapitalDistributionIDChanging(value);
                    ReportPropertyChanging("CapitalDistributionID");
                    _CapitalDistributionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CapitalDistributionID");
                    OnCapitalDistributionIDChanged();
                }
            }
        }
        private global::System.Int32 _CapitalDistributionID;
        partial void OnCapitalDistributionIDChanging(global::System.Int32 value);
        partial void OnCapitalDistributionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CapitalDistributionDate
        {
            get
            {
                return _CapitalDistributionDate;
            }
            set
            {
                OnCapitalDistributionDateChanging(value);
                ReportPropertyChanging("CapitalDistributionDate");
                _CapitalDistributionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalDistributionDate");
                OnCapitalDistributionDateChanged();
            }
        }
        private global::System.DateTime _CapitalDistributionDate;
        partial void OnCapitalDistributionDateChanging(global::System.DateTime value);
        partial void OnCapitalDistributionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CapitalDistributionDueDate
        {
            get
            {
                return _CapitalDistributionDueDate;
            }
            set
            {
                OnCapitalDistributionDueDateChanging(value);
                ReportPropertyChanging("CapitalDistributionDueDate");
                _CapitalDistributionDueDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalDistributionDueDate");
                OnCapitalDistributionDueDateChanged();
            }
        }
        private global::System.DateTime _CapitalDistributionDueDate;
        partial void OnCapitalDistributionDueDateChanging(global::System.DateTime value);
        partial void OnCapitalDistributionDueDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DistributionAmount
        {
            get
            {
                return _DistributionAmount;
            }
            set
            {
                OnDistributionAmountChanging(value);
                ReportPropertyChanging("DistributionAmount");
                _DistributionAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistributionAmount");
                OnDistributionAmountChanged();
            }
        }
        private global::System.Decimal _DistributionAmount;
        partial void OnDistributionAmountChanging(global::System.Decimal value);
        partial void OnDistributionAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CapitalReturn
        {
            get
            {
                return _CapitalReturn;
            }
            set
            {
                OnCapitalReturnChanging(value);
                ReportPropertyChanging("CapitalReturn");
                _CapitalReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalReturn");
                OnCapitalReturnChanged();
            }
        }
        private Nullable<global::System.Decimal> _CapitalReturn;
        partial void OnCapitalReturnChanging(Nullable<global::System.Decimal> value);
        partial void OnCapitalReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PreferredReturn
        {
            get
            {
                return _PreferredReturn;
            }
            set
            {
                OnPreferredReturnChanging(value);
                ReportPropertyChanging("PreferredReturn");
                _PreferredReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreferredReturn");
                OnPreferredReturnChanged();
            }
        }
        private Nullable<global::System.Decimal> _PreferredReturn;
        partial void OnPreferredReturnChanging(Nullable<global::System.Decimal> value);
        partial void OnPreferredReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReturnManagementFees
        {
            get
            {
                return _ReturnManagementFees;
            }
            set
            {
                OnReturnManagementFeesChanging(value);
                ReportPropertyChanging("ReturnManagementFees");
                _ReturnManagementFees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnManagementFees");
                OnReturnManagementFeesChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReturnManagementFees;
        partial void OnReturnManagementFeesChanging(Nullable<global::System.Decimal> value);
        partial void OnReturnManagementFeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReturnFundExpenses
        {
            get
            {
                return _ReturnFundExpenses;
            }
            set
            {
                OnReturnFundExpensesChanging(value);
                ReportPropertyChanging("ReturnFundExpenses");
                _ReturnFundExpenses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnFundExpenses");
                OnReturnFundExpensesChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReturnFundExpenses;
        partial void OnReturnFundExpensesChanging(Nullable<global::System.Decimal> value);
        partial void OnReturnFundExpensesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PreferredCatchUp
        {
            get
            {
                return _PreferredCatchUp;
            }
            set
            {
                OnPreferredCatchUpChanging(value);
                ReportPropertyChanging("PreferredCatchUp");
                _PreferredCatchUp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreferredCatchUp");
                OnPreferredCatchUpChanged();
            }
        }
        private Nullable<global::System.Decimal> _PreferredCatchUp;
        partial void OnPreferredCatchUpChanging(Nullable<global::System.Decimal> value);
        partial void OnPreferredCatchUpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Profits
        {
            get
            {
                return _Profits;
            }
            set
            {
                OnProfitsChanging(value);
                ReportPropertyChanging("Profits");
                _Profits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Profits");
                OnProfitsChanged();
            }
        }
        private Nullable<global::System.Decimal> _Profits;
        partial void OnProfitsChanging(Nullable<global::System.Decimal> value);
        partial void OnProfitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DistributionNumber
        {
            get
            {
                return _DistributionNumber;
            }
            set
            {
                OnDistributionNumberChanging(value);
                ReportPropertyChanging("DistributionNumber");
                _DistributionNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DistributionNumber");
                OnDistributionNumberChanged();
            }
        }
        private global::System.String _DistributionNumber;
        partial void OnDistributionNumberChanging(global::System.String value);
        partial void OnDistributionNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsManual
        {
            get
            {
                return _IsManual;
            }
            set
            {
                OnIsManualChanging(value);
                ReportPropertyChanging("IsManual");
                _IsManual = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsManual");
                OnIsManualChanged();
            }
        }
        private global::System.Boolean _IsManual;
        partial void OnIsManualChanging(global::System.Boolean value);
        partial void OnIsManualChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LPProfits
        {
            get
            {
                return _LPProfits;
            }
            set
            {
                OnLPProfitsChanging(value);
                ReportPropertyChanging("LPProfits");
                _LPProfits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LPProfits");
                OnLPProfitsChanged();
            }
        }
        private Nullable<global::System.Decimal> _LPProfits;
        partial void OnLPProfitsChanging(Nullable<global::System.Decimal> value);
        partial void OnLPProfitsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalDistribution_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_CapitalDistribution_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_CapitalDistribution_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_CapitalDistribution_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_CapitalDistribution_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalDistributionLineItem_CapitalDistribution", "CapitalDistributionLineItem")]
        public EntityCollection<CapitalDistributionLineItem> CapitalDistributionLineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapitalDistributionLineItem>("DeepBlueModel.FK_CapitalDistributionLineItem_CapitalDistribution", "CapitalDistributionLineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapitalDistributionLineItem>("DeepBlueModel.FK_CapitalDistributionLineItem_CapitalDistribution", "CapitalDistributionLineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistributionProfit")]
        public CapitalDistributionProfit CapitalDistributionProfit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalDistributionProfit>("DeepBlueModel.FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistributionProfit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalDistributionProfit>("DeepBlueModel.FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistributionProfit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CapitalDistributionProfit> CapitalDistributionProfitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalDistributionProfit>("DeepBlueModel.FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistributionProfit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CapitalDistributionProfit>("DeepBlueModel.FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistributionProfit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CapitalDistributionLineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapitalDistributionLineItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapitalDistributionLineItem object.
        /// </summary>
        /// <param name="capitalDistributionLineItemID">Initial value of the CapitalDistributionLineItemID property.</param>
        /// <param name="capitalDistributionID">Initial value of the CapitalDistributionID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="distributionAmount">Initial value of the DistributionAmount property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CapitalDistributionLineItem CreateCapitalDistributionLineItem(global::System.Int32 capitalDistributionLineItemID, global::System.Int32 capitalDistributionID, global::System.Int32 investorID, global::System.Decimal distributionAmount, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            CapitalDistributionLineItem capitalDistributionLineItem = new CapitalDistributionLineItem();
            capitalDistributionLineItem.CapitalDistributionLineItemID = capitalDistributionLineItemID;
            capitalDistributionLineItem.CapitalDistributionID = capitalDistributionID;
            capitalDistributionLineItem.InvestorID = investorID;
            capitalDistributionLineItem.DistributionAmount = distributionAmount;
            capitalDistributionLineItem.CreatedDate = createdDate;
            capitalDistributionLineItem.CreatedBy = createdBy;
            return capitalDistributionLineItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalDistributionLineItemID
        {
            get
            {
                return _CapitalDistributionLineItemID;
            }
            set
            {
                if (_CapitalDistributionLineItemID != value)
                {
                    OnCapitalDistributionLineItemIDChanging(value);
                    ReportPropertyChanging("CapitalDistributionLineItemID");
                    _CapitalDistributionLineItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CapitalDistributionLineItemID");
                    OnCapitalDistributionLineItemIDChanged();
                }
            }
        }
        private global::System.Int32 _CapitalDistributionLineItemID;
        partial void OnCapitalDistributionLineItemIDChanging(global::System.Int32 value);
        partial void OnCapitalDistributionLineItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalDistributionID
        {
            get
            {
                return _CapitalDistributionID;
            }
            set
            {
                OnCapitalDistributionIDChanging(value);
                ReportPropertyChanging("CapitalDistributionID");
                _CapitalDistributionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalDistributionID");
                OnCapitalDistributionIDChanged();
            }
        }
        private global::System.Int32 _CapitalDistributionID;
        partial void OnCapitalDistributionIDChanging(global::System.Int32 value);
        partial void OnCapitalDistributionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal DistributionAmount
        {
            get
            {
                return _DistributionAmount;
            }
            set
            {
                OnDistributionAmountChanging(value);
                ReportPropertyChanging("DistributionAmount");
                _DistributionAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistributionAmount");
                OnDistributionAmountChanged();
            }
        }
        private global::System.Decimal _DistributionAmount;
        partial void OnDistributionAmountChanging(global::System.Decimal value);
        partial void OnDistributionAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CapitalReturn
        {
            get
            {
                return _CapitalReturn;
            }
            set
            {
                OnCapitalReturnChanging(value);
                ReportPropertyChanging("CapitalReturn");
                _CapitalReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalReturn");
                OnCapitalReturnChanged();
            }
        }
        private Nullable<global::System.Decimal> _CapitalReturn;
        partial void OnCapitalReturnChanging(Nullable<global::System.Decimal> value);
        partial void OnCapitalReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PreferredReturn
        {
            get
            {
                return _PreferredReturn;
            }
            set
            {
                OnPreferredReturnChanging(value);
                ReportPropertyChanging("PreferredReturn");
                _PreferredReturn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreferredReturn");
                OnPreferredReturnChanged();
            }
        }
        private Nullable<global::System.Decimal> _PreferredReturn;
        partial void OnPreferredReturnChanging(Nullable<global::System.Decimal> value);
        partial void OnPreferredReturnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReturnManagementFees
        {
            get
            {
                return _ReturnManagementFees;
            }
            set
            {
                OnReturnManagementFeesChanging(value);
                ReportPropertyChanging("ReturnManagementFees");
                _ReturnManagementFees = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnManagementFees");
                OnReturnManagementFeesChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReturnManagementFees;
        partial void OnReturnManagementFeesChanging(Nullable<global::System.Decimal> value);
        partial void OnReturnManagementFeesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReturnFundExpenses
        {
            get
            {
                return _ReturnFundExpenses;
            }
            set
            {
                OnReturnFundExpensesChanging(value);
                ReportPropertyChanging("ReturnFundExpenses");
                _ReturnFundExpenses = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReturnFundExpenses");
                OnReturnFundExpensesChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReturnFundExpenses;
        partial void OnReturnFundExpensesChanging(Nullable<global::System.Decimal> value);
        partial void OnReturnFundExpensesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PreferredCatchUp
        {
            get
            {
                return _PreferredCatchUp;
            }
            set
            {
                OnPreferredCatchUpChanging(value);
                ReportPropertyChanging("PreferredCatchUp");
                _PreferredCatchUp = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PreferredCatchUp");
                OnPreferredCatchUpChanged();
            }
        }
        private Nullable<global::System.Decimal> _PreferredCatchUp;
        partial void OnPreferredCatchUpChanging(Nullable<global::System.Decimal> value);
        partial void OnPreferredCatchUpChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Profits
        {
            get
            {
                return _Profits;
            }
            set
            {
                OnProfitsChanging(value);
                ReportPropertyChanging("Profits");
                _Profits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Profits");
                OnProfitsChanged();
            }
        }
        private Nullable<global::System.Decimal> _Profits;
        partial void OnProfitsChanging(Nullable<global::System.Decimal> value);
        partial void OnProfitsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalDistributionLineItem_CapitalDistribution", "CapitalDistribution")]
        public CapitalDistribution CapitalDistribution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalDistribution>("DeepBlueModel.FK_CapitalDistributionLineItem_CapitalDistribution", "CapitalDistribution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalDistribution>("DeepBlueModel.FK_CapitalDistributionLineItem_CapitalDistribution", "CapitalDistribution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CapitalDistribution> CapitalDistributionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalDistribution>("DeepBlueModel.FK_CapitalDistributionLineItem_CapitalDistribution", "CapitalDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CapitalDistribution>("DeepBlueModel.FK_CapitalDistributionLineItem_CapitalDistribution", "CapitalDistribution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalDistributionLineItem_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_CapitalDistributionLineItem_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_CapitalDistributionLineItem_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_CapitalDistributionLineItem_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_CapitalDistributionLineItem_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CapitalDistributionProfit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CapitalDistributionProfit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CapitalDistributionProfit object.
        /// </summary>
        /// <param name="capitalDistributionProfitID">Initial value of the CapitalDistributionProfitID property.</param>
        /// <param name="investorTypeID">Initial value of the InvestorTypeID property.</param>
        /// <param name="capitalDistributionID">Initial value of the CapitalDistributionID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static CapitalDistributionProfit CreateCapitalDistributionProfit(global::System.Int32 capitalDistributionProfitID, global::System.Int32 investorTypeID, global::System.Int32 capitalDistributionID, global::System.Decimal amount)
        {
            CapitalDistributionProfit capitalDistributionProfit = new CapitalDistributionProfit();
            capitalDistributionProfit.CapitalDistributionProfitID = capitalDistributionProfitID;
            capitalDistributionProfit.InvestorTypeID = investorTypeID;
            capitalDistributionProfit.CapitalDistributionID = capitalDistributionID;
            capitalDistributionProfit.Amount = amount;
            return capitalDistributionProfit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalDistributionProfitID
        {
            get
            {
                return _CapitalDistributionProfitID;
            }
            set
            {
                if (_CapitalDistributionProfitID != value)
                {
                    OnCapitalDistributionProfitIDChanging(value);
                    ReportPropertyChanging("CapitalDistributionProfitID");
                    _CapitalDistributionProfitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CapitalDistributionProfitID");
                    OnCapitalDistributionProfitIDChanged();
                }
            }
        }
        private global::System.Int32 _CapitalDistributionProfitID;
        partial void OnCapitalDistributionProfitIDChanging(global::System.Int32 value);
        partial void OnCapitalDistributionProfitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorTypeID
        {
            get
            {
                return _InvestorTypeID;
            }
            set
            {
                OnInvestorTypeIDChanging(value);
                ReportPropertyChanging("InvestorTypeID");
                _InvestorTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorTypeID");
                OnInvestorTypeIDChanged();
            }
        }
        private global::System.Int32 _InvestorTypeID;
        partial void OnInvestorTypeIDChanging(global::System.Int32 value);
        partial void OnInvestorTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CapitalDistributionID
        {
            get
            {
                return _CapitalDistributionID;
            }
            set
            {
                OnCapitalDistributionIDChanging(value);
                ReportPropertyChanging("CapitalDistributionID");
                _CapitalDistributionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CapitalDistributionID");
                OnCapitalDistributionIDChanged();
            }
        }
        private global::System.Int32 _CapitalDistributionID;
        partial void OnCapitalDistributionIDChanging(global::System.Int32 value);
        partial void OnCapitalDistributionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistribution")]
        public CapitalDistribution CapitalDistribution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalDistribution>("DeepBlueModel.FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistribution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalDistribution>("DeepBlueModel.FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistribution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CapitalDistribution> CapitalDistributionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CapitalDistribution>("DeepBlueModel.FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CapitalDistribution>("DeepBlueModel.FK_CapitalDistributionProfit_CapitalDistribution", "CapitalDistribution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalDistributionProfit_InvestorType", "InvestorType")]
        public InvestorType InvestorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_CapitalDistributionProfit_InvestorType", "InvestorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_CapitalDistributionProfit_InvestorType", "InvestorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvestorType> InvestorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_CapitalDistributionProfit_InvestorType", "InvestorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvestorType>("DeepBlueModel.FK_CapitalDistributionProfit_InvestorType", "InvestorType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CashDistribution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CashDistribution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CashDistribution object.
        /// </summary>
        /// <param name="cashDistributionID">Initial value of the CashDistributionID property.</param>
        /// <param name="underlyingFundID">Initial value of the UnderlyingFundID property.</param>
        /// <param name="dealID">Initial value of the DealID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CashDistribution CreateCashDistribution(global::System.Int32 cashDistributionID, global::System.Int32 underlyingFundID, global::System.Int32 dealID, global::System.Decimal amount, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            CashDistribution cashDistribution = new CashDistribution();
            cashDistribution.CashDistributionID = cashDistributionID;
            cashDistribution.UnderlyingFundID = underlyingFundID;
            cashDistribution.DealID = dealID;
            cashDistribution.Amount = amount;
            cashDistribution.CreatedDate = createdDate;
            cashDistribution.CreatedBy = createdBy;
            return cashDistribution;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CashDistributionID
        {
            get
            {
                return _CashDistributionID;
            }
            set
            {
                if (_CashDistributionID != value)
                {
                    OnCashDistributionIDChanging(value);
                    ReportPropertyChanging("CashDistributionID");
                    _CashDistributionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CashDistributionID");
                    OnCashDistributionIDChanged();
                }
            }
        }
        private global::System.Int32 _CashDistributionID;
        partial void OnCashDistributionIDChanging(global::System.Int32 value);
        partial void OnCashDistributionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundID
        {
            get
            {
                return _UnderlyingFundID;
            }
            set
            {
                OnUnderlyingFundIDChanging(value);
                ReportPropertyChanging("UnderlyingFundID");
                _UnderlyingFundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderlyingFundID");
                OnUnderlyingFundIDChanged();
            }
        }
        private global::System.Int32 _UnderlyingFundID;
        partial void OnUnderlyingFundIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealID
        {
            get
            {
                return _DealID;
            }
            set
            {
                OnDealIDChanging(value);
                ReportPropertyChanging("DealID");
                _DealID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealID");
                OnDealIDChanged();
            }
        }
        private global::System.Int32 _DealID;
        partial void OnDealIDChanging(global::System.Int32 value);
        partial void OnDealIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnderluingFundCashDistributionID
        {
            get
            {
                return _UnderluingFundCashDistributionID;
            }
            set
            {
                OnUnderluingFundCashDistributionIDChanging(value);
                ReportPropertyChanging("UnderluingFundCashDistributionID");
                _UnderluingFundCashDistributionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderluingFundCashDistributionID");
                OnUnderluingFundCashDistributionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UnderluingFundCashDistributionID;
        partial void OnUnderluingFundCashDistributionIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnderluingFundCashDistributionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CashDistribution_Deal", "Deal")]
        public Deal Deal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_CashDistribution_Deal", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_CashDistribution_Deal", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> DealReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_CashDistribution_Deal", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("DeepBlueModel.FK_CashDistribution_Deal", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CashDistribution_UnderlyingFund", "UnderlyingFund")]
        public UnderlyingFund UnderlyingFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_CashDistribution_UnderlyingFund", "UnderlyingFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_CashDistribution_UnderlyingFund", "UnderlyingFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFund> UnderlyingFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_CashDistribution_UnderlyingFund", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFund>("DeepBlueModel.FK_CashDistribution_UnderlyingFund", "UnderlyingFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CashDistribution_UnderlyingFundCashDistribution", "UnderlyingFundCashDistribution")]
        public UnderlyingFundCashDistribution UnderlyingFundCashDistribution
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundCashDistribution>("DeepBlueModel.FK_CashDistribution_UnderlyingFundCashDistribution", "UnderlyingFundCashDistribution").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundCashDistribution>("DeepBlueModel.FK_CashDistribution_UnderlyingFundCashDistribution", "UnderlyingFundCashDistribution").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFundCashDistribution> UnderlyingFundCashDistributionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundCashDistribution>("DeepBlueModel.FK_CashDistribution_UnderlyingFundCashDistribution", "UnderlyingFundCashDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFundCashDistribution>("DeepBlueModel.FK_CashDistribution_UnderlyingFundCashDistribution", "UnderlyingFundCashDistribution", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CashDistributionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CashDistributionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CashDistributionType object.
        /// </summary>
        /// <param name="cashDistributionTypeID">Initial value of the CashDistributionTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        public static CashDistributionType CreateCashDistributionType(global::System.Int32 cashDistributionTypeID, global::System.String name, global::System.Boolean enabled)
        {
            CashDistributionType cashDistributionType = new CashDistributionType();
            cashDistributionType.CashDistributionTypeID = cashDistributionTypeID;
            cashDistributionType.Name = name;
            cashDistributionType.Enabled = enabled;
            return cashDistributionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CashDistributionTypeID
        {
            get
            {
                return _CashDistributionTypeID;
            }
            set
            {
                if (_CashDistributionTypeID != value)
                {
                    OnCashDistributionTypeIDChanging(value);
                    ReportPropertyChanging("CashDistributionTypeID");
                    _CashDistributionTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CashDistributionTypeID");
                    OnCashDistributionTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CashDistributionTypeID;
        partial void OnCashDistributionTypeIDChanging(global::System.Int32 value);
        partial void OnCashDistributionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCashDistribution_CashDistributionType", "UnderlyingFundCashDistribution")]
        public EntityCollection<UnderlyingFundCashDistribution> UnderlyingFundCashDistributions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundCashDistribution>("DeepBlueModel.FK_UnderlyingFundCashDistribution_CashDistributionType", "UnderlyingFundCashDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundCashDistribution>("DeepBlueModel.FK_UnderlyingFundCashDistribution_CashDistributionType", "UnderlyingFundCashDistribution", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Communication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Communication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Communication object.
        /// </summary>
        /// <param name="communicationID">Initial value of the CommunicationID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="communicationTypeID">Initial value of the CommunicationTypeID property.</param>
        /// <param name="communicationValue">Initial value of the CommunicationValue property.</param>
        /// <param name="listed">Initial value of the Listed property.</param>
        /// <param name="isPreferred">Initial value of the IsPreferred property.</param>
        public static Communication CreateCommunication(global::System.Int32 communicationID, global::System.Int32 entityID, global::System.Int32 communicationTypeID, global::System.String communicationValue, global::System.Boolean listed, global::System.Boolean isPreferred)
        {
            Communication communication = new Communication();
            communication.CommunicationID = communicationID;
            communication.EntityID = entityID;
            communication.CommunicationTypeID = communicationTypeID;
            communication.CommunicationValue = communicationValue;
            communication.Listed = listed;
            communication.IsPreferred = isPreferred;
            return communication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationID
        {
            get
            {
                return _CommunicationID;
            }
            set
            {
                if (_CommunicationID != value)
                {
                    OnCommunicationIDChanging(value);
                    ReportPropertyChanging("CommunicationID");
                    _CommunicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommunicationID");
                    OnCommunicationIDChanged();
                }
            }
        }
        private global::System.Int32 _CommunicationID;
        partial void OnCommunicationIDChanging(global::System.Int32 value);
        partial void OnCommunicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationTypeID
        {
            get
            {
                return _CommunicationTypeID;
            }
            set
            {
                OnCommunicationTypeIDChanging(value);
                ReportPropertyChanging("CommunicationTypeID");
                _CommunicationTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommunicationTypeID");
                OnCommunicationTypeIDChanged();
            }
        }
        private global::System.Int32 _CommunicationTypeID;
        partial void OnCommunicationTypeIDChanging(global::System.Int32 value);
        partial void OnCommunicationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommunicationValue
        {
            get
            {
                return _CommunicationValue;
            }
            set
            {
                OnCommunicationValueChanging(value);
                ReportPropertyChanging("CommunicationValue");
                _CommunicationValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommunicationValue");
                OnCommunicationValueChanged();
            }
        }
        private global::System.String _CommunicationValue;
        partial void OnCommunicationValueChanging(global::System.String value);
        partial void OnCommunicationValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastFourPhone
        {
            get
            {
                return _LastFourPhone;
            }
            set
            {
                OnLastFourPhoneChanging(value);
                ReportPropertyChanging("LastFourPhone");
                _LastFourPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastFourPhone");
                OnLastFourPhoneChanged();
            }
        }
        private global::System.String _LastFourPhone;
        partial void OnLastFourPhoneChanging(global::System.String value);
        partial void OnLastFourPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Listed
        {
            get
            {
                return _Listed;
            }
            set
            {
                OnListedChanging(value);
                ReportPropertyChanging("Listed");
                _Listed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Listed");
                OnListedChanged();
            }
        }
        private global::System.Boolean _Listed;
        partial void OnListedChanging(global::System.Boolean value);
        partial void OnListedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPreferred
        {
            get
            {
                return _IsPreferred;
            }
            set
            {
                OnIsPreferredChanging(value);
                ReportPropertyChanging("IsPreferred");
                _IsPreferred = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPreferred");
                OnIsPreferredChanged();
            }
        }
        private global::System.Boolean _IsPreferred;
        partial void OnIsPreferredChanging(global::System.Boolean value);
        partial void OnIsPreferredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommunicationComment
        {
            get
            {
                return _CommunicationComment;
            }
            set
            {
                OnCommunicationCommentChanging(value);
                ReportPropertyChanging("CommunicationComment");
                _CommunicationComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommunicationComment");
                OnCommunicationCommentChanged();
            }
        }
        private global::System.String _CommunicationComment;
        partial void OnCommunicationCommentChanging(global::System.String value);
        partial void OnCommunicationCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Communication_CommunicationType", "CommunicationType")]
        public CommunicationType CommunicationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationType>("DeepBlueModel.FK_Communication_CommunicationType", "CommunicationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationType>("DeepBlueModel.FK_Communication_CommunicationType", "CommunicationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommunicationType> CommunicationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationType>("DeepBlueModel.FK_Communication_CommunicationType", "CommunicationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommunicationType>("DeepBlueModel.FK_Communication_CommunicationType", "CommunicationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactCommunication_Communication", "ContactCommunication")]
        public EntityCollection<ContactCommunication> ContactCommunications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactCommunication>("DeepBlueModel.FK_ContactCommunication_Communication", "ContactCommunication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactCommunication>("DeepBlueModel.FK_ContactCommunication_Communication", "ContactCommunication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorCommunication_Communication", "InvestorCommunication")]
        public EntityCollection<InvestorCommunication> InvestorCommunications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorCommunication>("DeepBlueModel.FK_InvestorCommunication_Communication", "InvestorCommunication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorCommunication>("DeepBlueModel.FK_InvestorCommunication_Communication", "InvestorCommunication", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CommunicationGrouping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommunicationGrouping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommunicationGrouping object.
        /// </summary>
        /// <param name="communicationGroupingID">Initial value of the CommunicationGroupingID property.</param>
        /// <param name="communicationGroupingName">Initial value of the CommunicationGroupingName property.</param>
        public static CommunicationGrouping CreateCommunicationGrouping(global::System.Int32 communicationGroupingID, global::System.String communicationGroupingName)
        {
            CommunicationGrouping communicationGrouping = new CommunicationGrouping();
            communicationGrouping.CommunicationGroupingID = communicationGroupingID;
            communicationGrouping.CommunicationGroupingName = communicationGroupingName;
            return communicationGrouping;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationGroupingID
        {
            get
            {
                return _CommunicationGroupingID;
            }
            set
            {
                if (_CommunicationGroupingID != value)
                {
                    OnCommunicationGroupingIDChanging(value);
                    ReportPropertyChanging("CommunicationGroupingID");
                    _CommunicationGroupingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommunicationGroupingID");
                    OnCommunicationGroupingIDChanged();
                }
            }
        }
        private global::System.Int32 _CommunicationGroupingID;
        partial void OnCommunicationGroupingIDChanging(global::System.Int32 value);
        partial void OnCommunicationGroupingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommunicationGroupingName
        {
            get
            {
                return _CommunicationGroupingName;
            }
            set
            {
                OnCommunicationGroupingNameChanging(value);
                ReportPropertyChanging("CommunicationGroupingName");
                _CommunicationGroupingName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommunicationGroupingName");
                OnCommunicationGroupingNameChanged();
            }
        }
        private global::System.String _CommunicationGroupingName;
        partial void OnCommunicationGroupingNameChanging(global::System.String value);
        partial void OnCommunicationGroupingNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CommunicationType_CommunicationGrouping", "CommunicationType")]
        public EntityCollection<CommunicationType> CommunicationTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommunicationType>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommunicationType>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CommunicationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommunicationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommunicationType object.
        /// </summary>
        /// <param name="communicationTypeID">Initial value of the CommunicationTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="communicationGroupingID">Initial value of the CommunicationGroupingID property.</param>
        /// <param name="communicationTypeName">Initial value of the CommunicationTypeName property.</param>
        public static CommunicationType CreateCommunicationType(global::System.Int32 communicationTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.Int32 communicationGroupingID, global::System.String communicationTypeName)
        {
            CommunicationType communicationType = new CommunicationType();
            communicationType.CommunicationTypeID = communicationTypeID;
            communicationType.EntityID = entityID;
            communicationType.Enabled = enabled;
            communicationType.CommunicationGroupingID = communicationGroupingID;
            communicationType.CommunicationTypeName = communicationTypeName;
            return communicationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationTypeID
        {
            get
            {
                return _CommunicationTypeID;
            }
            set
            {
                if (_CommunicationTypeID != value)
                {
                    OnCommunicationTypeIDChanging(value);
                    ReportPropertyChanging("CommunicationTypeID");
                    _CommunicationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommunicationTypeID");
                    OnCommunicationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CommunicationTypeID;
        partial void OnCommunicationTypeIDChanging(global::System.Int32 value);
        partial void OnCommunicationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationGroupingID
        {
            get
            {
                return _CommunicationGroupingID;
            }
            set
            {
                OnCommunicationGroupingIDChanging(value);
                ReportPropertyChanging("CommunicationGroupingID");
                _CommunicationGroupingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommunicationGroupingID");
                OnCommunicationGroupingIDChanged();
            }
        }
        private global::System.Int32 _CommunicationGroupingID;
        partial void OnCommunicationGroupingIDChanging(global::System.Int32 value);
        partial void OnCommunicationGroupingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommunicationTypeName
        {
            get
            {
                return _CommunicationTypeName;
            }
            set
            {
                OnCommunicationTypeNameChanging(value);
                ReportPropertyChanging("CommunicationTypeName");
                _CommunicationTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommunicationTypeName");
                OnCommunicationTypeNameChanged();
            }
        }
        private global::System.String _CommunicationTypeName;
        partial void OnCommunicationTypeNameChanging(global::System.String value);
        partial void OnCommunicationTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Communication_CommunicationType", "Communication")]
        public EntityCollection<Communication> Communications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Communication>("DeepBlueModel.FK_Communication_CommunicationType", "Communication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Communication>("DeepBlueModel.FK_Communication_CommunicationType", "Communication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping")]
        public CommunicationGrouping CommunicationGrouping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationGrouping>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationGrouping>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommunicationGrouping> CommunicationGroupingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationGrouping>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommunicationGrouping>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="receivesDistributionNotices">Initial value of the ReceivesDistributionNotices property.</param>
        /// <param name="receivesK1">Initial value of the ReceivesK1 property.</param>
        /// <param name="receivesFinancials">Initial value of the ReceivesFinancials property.</param>
        /// <param name="receivesInvestorLetters">Initial value of the ReceivesInvestorLetters property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Contact CreateContact(global::System.Int32 contactID, global::System.Int32 entityID, global::System.String lastName, global::System.Boolean receivesDistributionNotices, global::System.Boolean receivesK1, global::System.Boolean receivesFinancials, global::System.Boolean receivesInvestorLetters, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Contact contact = new Contact();
            contact.ContactID = contactID;
            contact.EntityID = entityID;
            contact.LastName = lastName;
            contact.ReceivesDistributionNotices = receivesDistributionNotices;
            contact.ReceivesK1 = receivesK1;
            contact.ReceivesFinancials = receivesFinancials;
            contact.ReceivesInvestorLetters = receivesInvestorLetters;
            contact.CreatedDate = createdDate;
            contact.CreatedBy = createdBy;
            return contact;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Designation
        {
            get
            {
                return _Designation;
            }
            set
            {
                OnDesignationChanging(value);
                ReportPropertyChanging("Designation");
                _Designation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Designation");
                OnDesignationChanged();
            }
        }
        private global::System.String _Designation;
        partial void OnDesignationChanging(global::System.String value);
        partial void OnDesignationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReceivesDistributionNotices
        {
            get
            {
                return _ReceivesDistributionNotices;
            }
            set
            {
                OnReceivesDistributionNoticesChanging(value);
                ReportPropertyChanging("ReceivesDistributionNotices");
                _ReceivesDistributionNotices = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivesDistributionNotices");
                OnReceivesDistributionNoticesChanged();
            }
        }
        private global::System.Boolean _ReceivesDistributionNotices;
        partial void OnReceivesDistributionNoticesChanging(global::System.Boolean value);
        partial void OnReceivesDistributionNoticesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReceivesK1
        {
            get
            {
                return _ReceivesK1;
            }
            set
            {
                OnReceivesK1Changing(value);
                ReportPropertyChanging("ReceivesK1");
                _ReceivesK1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivesK1");
                OnReceivesK1Changed();
            }
        }
        private global::System.Boolean _ReceivesK1;
        partial void OnReceivesK1Changing(global::System.Boolean value);
        partial void OnReceivesK1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReceivesFinancials
        {
            get
            {
                return _ReceivesFinancials;
            }
            set
            {
                OnReceivesFinancialsChanging(value);
                ReportPropertyChanging("ReceivesFinancials");
                _ReceivesFinancials = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivesFinancials");
                OnReceivesFinancialsChanged();
            }
        }
        private global::System.Boolean _ReceivesFinancials;
        partial void OnReceivesFinancialsChanging(global::System.Boolean value);
        partial void OnReceivesFinancialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReceivesInvestorLetters
        {
            get
            {
                return _ReceivesInvestorLetters;
            }
            set
            {
                OnReceivesInvestorLettersChanging(value);
                ReportPropertyChanging("ReceivesInvestorLetters");
                _ReceivesInvestorLetters = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivesInvestorLetters");
                OnReceivesInvestorLettersChanged();
            }
        }
        private global::System.Boolean _ReceivesInvestorLetters;
        partial void OnReceivesInvestorLettersChanging(global::System.Boolean value);
        partial void OnReceivesInvestorLettersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactAddress_Contact", "ContactAddress")]
        public EntityCollection<ContactAddress> ContactAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactAddress>("DeepBlueModel.FK_ContactAddress_Contact", "ContactAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactAddress>("DeepBlueModel.FK_ContactAddress_Contact", "ContactAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactCommunication_Contact", "ContactCommunication")]
        public EntityCollection<ContactCommunication> ContactCommunications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactCommunication>("DeepBlueModel.FK_ContactCommunication_Contact", "ContactCommunication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactCommunication>("DeepBlueModel.FK_ContactCommunication_Contact", "ContactCommunication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_Contact", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("DeepBlueModel.FK_Deal_Contact", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("DeepBlueModel.FK_Deal_Contact", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_SellerContact", "Deal")]
        public EntityCollection<Deal> Deals1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("DeepBlueModel.FK_Deal_SellerContact", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("DeepBlueModel.FK_Deal_SellerContact", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorContact_Contact", "InvestorContact")]
        public EntityCollection<InvestorContact> InvestorContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorContact>("DeepBlueModel.FK_InvestorContact_Contact", "InvestorContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorContact>("DeepBlueModel.FK_InvestorContact_Contact", "InvestorContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_Contact", "UnderlyingFund")]
        public EntityCollection<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_Contact", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_Contact", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="ContactAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactAddress object.
        /// </summary>
        /// <param name="contactAddressID">Initial value of the ContactAddressID property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        public static ContactAddress CreateContactAddress(global::System.Int32 contactAddressID, global::System.Int32 contactID, global::System.Int32 entityID, global::System.Int32 addressID)
        {
            ContactAddress contactAddress = new ContactAddress();
            contactAddress.ContactAddressID = contactAddressID;
            contactAddress.ContactID = contactID;
            contactAddress.EntityID = entityID;
            contactAddress.AddressID = addressID;
            return contactAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactAddressID
        {
            get
            {
                return _ContactAddressID;
            }
            set
            {
                if (_ContactAddressID != value)
                {
                    OnContactAddressIDChanging(value);
                    ReportPropertyChanging("ContactAddressID");
                    _ContactAddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactAddressID");
                    OnContactAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactAddressID;
        partial void OnContactAddressIDChanging(global::System.Int32 value);
        partial void OnContactAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactAddress_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_ContactAddress_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_ContactAddress_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_ContactAddress_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("DeepBlueModel.FK_ContactAddress_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactAddress_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactAddress_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactAddress_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactAddress_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DeepBlueModel.FK_ContactAddress_Contact", "Contact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="ContactCommunication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactCommunication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactCommunication object.
        /// </summary>
        /// <param name="contactCommunicationID">Initial value of the ContactCommunicationID property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="communicationID">Initial value of the CommunicationID property.</param>
        public static ContactCommunication CreateContactCommunication(global::System.Int32 contactCommunicationID, global::System.Int32 contactID, global::System.Int32 entityID, global::System.Int32 communicationID)
        {
            ContactCommunication contactCommunication = new ContactCommunication();
            contactCommunication.ContactCommunicationID = contactCommunicationID;
            contactCommunication.ContactID = contactID;
            contactCommunication.EntityID = entityID;
            contactCommunication.CommunicationID = communicationID;
            return contactCommunication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactCommunicationID
        {
            get
            {
                return _ContactCommunicationID;
            }
            set
            {
                if (_ContactCommunicationID != value)
                {
                    OnContactCommunicationIDChanging(value);
                    ReportPropertyChanging("ContactCommunicationID");
                    _ContactCommunicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactCommunicationID");
                    OnContactCommunicationIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactCommunicationID;
        partial void OnContactCommunicationIDChanging(global::System.Int32 value);
        partial void OnContactCommunicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationID
        {
            get
            {
                return _CommunicationID;
            }
            set
            {
                OnCommunicationIDChanging(value);
                ReportPropertyChanging("CommunicationID");
                _CommunicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommunicationID");
                OnCommunicationIDChanged();
            }
        }
        private global::System.Int32 _CommunicationID;
        partial void OnCommunicationIDChanging(global::System.Int32 value);
        partial void OnCommunicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactCommunication_Communication", "Communication")]
        public Communication Communication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_ContactCommunication_Communication", "Communication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_ContactCommunication_Communication", "Communication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Communication> CommunicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_ContactCommunication_Communication", "Communication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Communication>("DeepBlueModel.FK_ContactCommunication_Communication", "Communication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactCommunication_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactCommunication_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactCommunication_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactCommunication_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DeepBlueModel.FK_ContactCommunication_Contact", "Contact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="COUNTRY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COUNTRY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COUNTRY object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="countryCode">Initial value of the CountryCode property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static COUNTRY CreateCOUNTRY(global::System.Int32 countryID, global::System.String countryCode, global::System.String countryName)
        {
            COUNTRY cOUNTRY = new COUNTRY();
            cOUNTRY.CountryID = countryID;
            cOUNTRY.CountryCode = countryCode;
            cOUNTRY.CountryName = countryName;
            return cOUNTRY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_Country", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("DeepBlueModel.FK_Address_Country", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("DeepBlueModel.FK_Address_Country", "Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Currency object.
        /// </summary>
        /// <param name="currencyID">Initial value of the CurrencyID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Currency CreateCurrency(global::System.Int32 currencyID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Currency currency = new Currency();
            currency.CurrencyID = currencyID;
            currency.EntityID = entityID;
            currency.Enabled = enabled;
            currency.CreatedDate = createdDate;
            currency.CreatedBy = createdBy;
            return currency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                if (_CurrencyID != value)
                {
                    OnCurrencyIDChanging(value);
                    ReportPropertyChanging("CurrencyID");
                    _CurrencyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CurrencyID");
                    OnCurrencyIDChanged();
                }
            }
        }
        private global::System.Int32 _CurrencyID;
        partial void OnCurrencyIDChanging(global::System.Int32 value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Currency1
        {
            get
            {
                return _Currency1;
            }
            set
            {
                OnCurrency1Changing(value);
                ReportPropertyChanging("Currency1");
                _Currency1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Currency1");
                OnCurrency1Changed();
            }
        }
        private global::System.String _Currency1;
        partial void OnCurrency1Changing(global::System.String value);
        partial void OnCurrency1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Equity_Currency", "Equity")]
        public EntityCollection<Equity> Equities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equity>("DeepBlueModel.FK_Equity_Currency", "Equity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equity>("DeepBlueModel.FK_Equity_Currency", "Equity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FixedIncome_Currency", "FixedIncome")]
        public EntityCollection<FixedIncome> FixedIncomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FixedIncome>("DeepBlueModel.FK_FixedIncome_Currency", "FixedIncome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FixedIncome>("DeepBlueModel.FK_FixedIncome_Currency", "FixedIncome", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CustomField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomField object.
        /// </summary>
        /// <param name="customFieldID">Initial value of the CustomFieldID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="moduleID">Initial value of the ModuleID property.</param>
        /// <param name="dataTypeID">Initial value of the DataTypeID property.</param>
        /// <param name="search">Initial value of the Search property.</param>
        public static CustomField CreateCustomField(global::System.Int32 customFieldID, global::System.Int32 entityID, global::System.Int32 moduleID, global::System.Int32 dataTypeID, global::System.Boolean search)
        {
            CustomField customField = new CustomField();
            customField.CustomFieldID = customFieldID;
            customField.EntityID = entityID;
            customField.ModuleID = moduleID;
            customField.DataTypeID = dataTypeID;
            customField.Search = search;
            return customField;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomFieldID
        {
            get
            {
                return _CustomFieldID;
            }
            set
            {
                if (_CustomFieldID != value)
                {
                    OnCustomFieldIDChanging(value);
                    ReportPropertyChanging("CustomFieldID");
                    _CustomFieldID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomFieldID");
                    OnCustomFieldIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomFieldID;
        partial void OnCustomFieldIDChanging(global::System.Int32 value);
        partial void OnCustomFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleID
        {
            get
            {
                return _ModuleID;
            }
            set
            {
                OnModuleIDChanging(value);
                ReportPropertyChanging("ModuleID");
                _ModuleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModuleID");
                OnModuleIDChanged();
            }
        }
        private global::System.Int32 _ModuleID;
        partial void OnModuleIDChanging(global::System.Int32 value);
        partial void OnModuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataTypeID
        {
            get
            {
                return _DataTypeID;
            }
            set
            {
                OnDataTypeIDChanging(value);
                ReportPropertyChanging("DataTypeID");
                _DataTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DataTypeID");
                OnDataTypeIDChanged();
            }
        }
        private global::System.Int32 _DataTypeID;
        partial void OnDataTypeIDChanging(global::System.Int32 value);
        partial void OnDataTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomFieldText
        {
            get
            {
                return _CustomFieldText;
            }
            set
            {
                OnCustomFieldTextChanging(value);
                ReportPropertyChanging("CustomFieldText");
                _CustomFieldText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomFieldText");
                OnCustomFieldTextChanged();
            }
        }
        private global::System.String _CustomFieldText;
        partial void OnCustomFieldTextChanging(global::System.String value);
        partial void OnCustomFieldTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OptionalText
        {
            get
            {
                return _OptionalText;
            }
            set
            {
                OnOptionalTextChanging(value);
                ReportPropertyChanging("OptionalText");
                _OptionalText = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OptionalText");
                OnOptionalTextChanged();
            }
        }
        private global::System.String _OptionalText;
        partial void OnOptionalTextChanging(global::System.String value);
        partial void OnOptionalTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Search
        {
            get
            {
                return _Search;
            }
            set
            {
                OnSearchChanging(value);
                ReportPropertyChanging("Search");
                _Search = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Search");
                OnSearchChanged();
            }
        }
        private global::System.Boolean _Search;
        partial void OnSearchChanging(global::System.Boolean value);
        partial void OnSearchChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CustomField_CustomFieldValue", "CustomFieldValue")]
        public EntityCollection<CustomFieldValue> CustomFieldValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomFieldValue>("DeepBlueModel.FK_CustomField_CustomFieldValue", "CustomFieldValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomFieldValue>("DeepBlueModel.FK_CustomField_CustomFieldValue", "CustomFieldValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CustomField_OptionField", "OptionField")]
        public EntityCollection<OptionField> OptionFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OptionField>("DeepBlueModel.FK_CustomField_OptionField", "OptionField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OptionField>("DeepBlueModel.FK_CustomField_OptionField", "OptionField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DataType_CustomField", "DataType")]
        public DataType DataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataType>("DeepBlueModel.FK_DataType_CustomField", "DataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataType>("DeepBlueModel.FK_DataType_CustomField", "DataType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DataType> DataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DataType>("DeepBlueModel.FK_DataType_CustomField", "DataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DataType>("DeepBlueModel.FK_DataType_CustomField", "DataType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Module_CustomField", "MODULE")]
        public MODULE MODULE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MODULE>("DeepBlueModel.FK_Module_CustomField", "MODULE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MODULE>("DeepBlueModel.FK_Module_CustomField", "MODULE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MODULE> MODULEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MODULE>("DeepBlueModel.FK_Module_CustomField", "MODULE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MODULE>("DeepBlueModel.FK_Module_CustomField", "MODULE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_OptionFieldValueList_CustomField", "OptionFieldValueList")]
        public EntityCollection<OptionFieldValueList> OptionFieldValueLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OptionFieldValueList>("DeepBlueModel.FK_OptionFieldValueList_CustomField", "OptionFieldValueList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OptionFieldValueList>("DeepBlueModel.FK_OptionFieldValueList_CustomField", "OptionFieldValueList", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CustomFieldValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomFieldValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomFieldValue object.
        /// </summary>
        /// <param name="customFieldValueID">Initial value of the CustomFieldValueID property.</param>
        /// <param name="customFieldID">Initial value of the CustomFieldID property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static CustomFieldValue CreateCustomFieldValue(global::System.Int32 customFieldValueID, global::System.Int32 customFieldID, global::System.Int32 key, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            CustomFieldValue customFieldValue = new CustomFieldValue();
            customFieldValue.CustomFieldValueID = customFieldValueID;
            customFieldValue.CustomFieldID = customFieldID;
            customFieldValue.Key = key;
            customFieldValue.CreatedDate = createdDate;
            customFieldValue.CreatedBy = createdBy;
            return customFieldValue;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomFieldValueID
        {
            get
            {
                return _CustomFieldValueID;
            }
            set
            {
                if (_CustomFieldValueID != value)
                {
                    OnCustomFieldValueIDChanging(value);
                    ReportPropertyChanging("CustomFieldValueID");
                    _CustomFieldValueID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CustomFieldValueID");
                    OnCustomFieldValueIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomFieldValueID;
        partial void OnCustomFieldValueIDChanging(global::System.Int32 value);
        partial void OnCustomFieldValueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomFieldID
        {
            get
            {
                return _CustomFieldID;
            }
            set
            {
                OnCustomFieldIDChanging(value);
                ReportPropertyChanging("CustomFieldID");
                _CustomFieldID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomFieldID");
                OnCustomFieldIDChanged();
            }
        }
        private global::System.Int32 _CustomFieldID;
        partial void OnCustomFieldIDChanging(global::System.Int32 value);
        partial void OnCustomFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.Int32 _Key;
        partial void OnKeyChanging(global::System.Int32 value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TextValue
        {
            get
            {
                return _TextValue;
            }
            set
            {
                OnTextValueChanging(value);
                ReportPropertyChanging("TextValue");
                _TextValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TextValue");
                OnTextValueChanged();
            }
        }
        private global::System.String _TextValue;
        partial void OnTextValueChanging(global::System.String value);
        partial void OnTextValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IntegerValue
        {
            get
            {
                return _IntegerValue;
            }
            set
            {
                OnIntegerValueChanging(value);
                ReportPropertyChanging("IntegerValue");
                _IntegerValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IntegerValue");
                OnIntegerValueChanged();
            }
        }
        private Nullable<global::System.Int32> _IntegerValue;
        partial void OnIntegerValueChanging(Nullable<global::System.Int32> value);
        partial void OnIntegerValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateValue
        {
            get
            {
                return _DateValue;
            }
            set
            {
                OnDateValueChanging(value);
                ReportPropertyChanging("DateValue");
                _DateValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateValue");
                OnDateValueChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateValue;
        partial void OnDateValueChanging(Nullable<global::System.DateTime> value);
        partial void OnDateValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CurrencyValue
        {
            get
            {
                return _CurrencyValue;
            }
            set
            {
                OnCurrencyValueChanging(value);
                ReportPropertyChanging("CurrencyValue");
                _CurrencyValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyValue");
                OnCurrencyValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _CurrencyValue;
        partial void OnCurrencyValueChanging(Nullable<global::System.Decimal> value);
        partial void OnCurrencyValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> BooleanValue
        {
            get
            {
                return _BooleanValue;
            }
            set
            {
                OnBooleanValueChanging(value);
                ReportPropertyChanging("BooleanValue");
                _BooleanValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BooleanValue");
                OnBooleanValueChanged();
            }
        }
        private Nullable<global::System.Boolean> _BooleanValue;
        partial void OnBooleanValueChanging(Nullable<global::System.Boolean> value);
        partial void OnBooleanValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OptionFieldID
        {
            get
            {
                return _OptionFieldID;
            }
            set
            {
                OnOptionFieldIDChanging(value);
                ReportPropertyChanging("OptionFieldID");
                _OptionFieldID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionFieldID");
                OnOptionFieldIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OptionFieldID;
        partial void OnOptionFieldIDChanging(Nullable<global::System.Int32> value);
        partial void OnOptionFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OptionFieldValueListID
        {
            get
            {
                return _OptionFieldValueListID;
            }
            set
            {
                OnOptionFieldValueListIDChanging(value);
                ReportPropertyChanging("OptionFieldValueListID");
                _OptionFieldValueListID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionFieldValueListID");
                OnOptionFieldValueListIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OptionFieldValueListID;
        partial void OnOptionFieldValueListIDChanging(Nullable<global::System.Int32> value);
        partial void OnOptionFieldValueListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CustomField_CustomFieldValue", "CustomField")]
        public CustomField CustomField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("DeepBlueModel.FK_CustomField_CustomFieldValue", "CustomField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("DeepBlueModel.FK_CustomField_CustomFieldValue", "CustomField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomField> CustomFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("DeepBlueModel.FK_CustomField_CustomFieldValue", "CustomField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomField>("DeepBlueModel.FK_CustomField_CustomFieldValue", "CustomField", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="DataType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DataType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataType object.
        /// </summary>
        /// <param name="dataTypeID">Initial value of the DataTypeID property.</param>
        public static DataType CreateDataType(global::System.Int32 dataTypeID)
        {
            DataType dataType = new DataType();
            dataType.DataTypeID = dataTypeID;
            return dataType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DataTypeID
        {
            get
            {
                return _DataTypeID;
            }
            set
            {
                if (_DataTypeID != value)
                {
                    OnDataTypeIDChanging(value);
                    ReportPropertyChanging("DataTypeID");
                    _DataTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DataTypeID");
                    OnDataTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _DataTypeID;
        partial void OnDataTypeIDChanging(global::System.Int32 value);
        partial void OnDataTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataTypeName
        {
            get
            {
                return _DataTypeName;
            }
            set
            {
                OnDataTypeNameChanging(value);
                ReportPropertyChanging("DataTypeName");
                _DataTypeName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataTypeName");
                OnDataTypeNameChanged();
            }
        }
        private global::System.String _DataTypeName;
        partial void OnDataTypeNameChanging(global::System.String value);
        partial void OnDataTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DataType_CustomField", "CustomField")]
        public EntityCollection<CustomField> CustomFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomField>("DeepBlueModel.FK_DataType_CustomField", "CustomField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomField>("DeepBlueModel.FK_DataType_CustomField", "CustomField", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Deal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Deal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Deal object.
        /// </summary>
        /// <param name="dealID">Initial value of the DealID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="dealNumber">Initial value of the DealNumber property.</param>
        /// <param name="isPartnered">Initial value of the IsPartnered property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Deal CreateDeal(global::System.Int32 dealID, global::System.Int32 fundID, global::System.Int32 entityID, global::System.Int32 dealNumber, global::System.Boolean isPartnered, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Deal deal = new Deal();
            deal.DealID = dealID;
            deal.FundID = fundID;
            deal.EntityID = entityID;
            deal.DealNumber = dealNumber;
            deal.IsPartnered = isPartnered;
            deal.CreatedDate = createdDate;
            deal.CreatedBy = createdBy;
            return deal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealID
        {
            get
            {
                return _DealID;
            }
            set
            {
                if (_DealID != value)
                {
                    OnDealIDChanging(value);
                    ReportPropertyChanging("DealID");
                    _DealID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealID");
                    OnDealIDChanged();
                }
            }
        }
        private global::System.Int32 _DealID;
        partial void OnDealIDChanging(global::System.Int32 value);
        partial void OnDealIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DealName
        {
            get
            {
                return _DealName;
            }
            set
            {
                OnDealNameChanging(value);
                ReportPropertyChanging("DealName");
                _DealName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DealName");
                OnDealNameChanged();
            }
        }
        private global::System.String _DealName;
        partial void OnDealNameChanging(global::System.String value);
        partial void OnDealNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealNumber
        {
            get
            {
                return _DealNumber;
            }
            set
            {
                OnDealNumberChanging(value);
                ReportPropertyChanging("DealNumber");
                _DealNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealNumber");
                OnDealNumberChanged();
            }
        }
        private global::System.Int32 _DealNumber;
        partial void OnDealNumberChanging(global::System.Int32 value);
        partial void OnDealNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Int32> value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SellerContactID
        {
            get
            {
                return _SellerContactID;
            }
            set
            {
                OnSellerContactIDChanging(value);
                ReportPropertyChanging("SellerContactID");
                _SellerContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SellerContactID");
                OnSellerContactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SellerContactID;
        partial void OnSellerContactIDChanging(Nullable<global::System.Int32> value);
        partial void OnSellerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PurchaseTypeID
        {
            get
            {
                return _PurchaseTypeID;
            }
            set
            {
                OnPurchaseTypeIDChanging(value);
                ReportPropertyChanging("PurchaseTypeID");
                _PurchaseTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchaseTypeID");
                OnPurchaseTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PurchaseTypeID;
        partial void OnPurchaseTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnPurchaseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPartnered
        {
            get
            {
                return _IsPartnered;
            }
            set
            {
                OnIsPartneredChanging(value);
                ReportPropertyChanging("IsPartnered");
                _IsPartnered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPartnered");
                OnIsPartneredChanged();
            }
        }
        private global::System.Boolean _IsPartnered;
        partial void OnIsPartneredChanging(global::System.Boolean value);
        partial void OnIsPartneredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PartnerID
        {
            get
            {
                return _PartnerID;
            }
            set
            {
                OnPartnerIDChanging(value);
                ReportPropertyChanging("PartnerID");
                _PartnerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PartnerID");
                OnPartnerIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PartnerID;
        partial void OnPartnerIDChanging(Nullable<global::System.Int32> value);
        partial void OnPartnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CashDistribution_Deal", "CashDistribution")]
        public EntityCollection<CashDistribution> CashDistributions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashDistribution>("DeepBlueModel.FK_CashDistribution_Deal", "CashDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashDistribution>("DeepBlueModel.FK_CashDistribution_Deal", "CashDistribution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_Deal_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_Deal_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_Deal_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DeepBlueModel.FK_Deal_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_SellerContact", "Contact")]
        public Contact Contact1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_Deal_SellerContact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_Deal_SellerContact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> Contact1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_Deal_SellerContact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DeepBlueModel.FK_Deal_SellerContact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_Deal", "Deal1")]
        public Deal Deal1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_Deal_Deal", "Deal1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_Deal_Deal", "Deal1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> Deal1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_Deal_Deal", "Deal1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("DeepBlueModel.FK_Deal_Deal", "Deal1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_Deal", "Deal")]
        public Deal Deal2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_Deal_Deal", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_Deal_Deal", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> Deal2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_Deal_Deal", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("DeepBlueModel.FK_Deal_Deal", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_Deal_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_Deal_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_Deal_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_Deal_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_Partner", "Partner")]
        public Partner Partner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("DeepBlueModel.FK_Deal_Partner", "Partner").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("DeepBlueModel.FK_Deal_Partner", "Partner").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Partner> PartnerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Partner>("DeepBlueModel.FK_Deal_Partner", "Partner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Partner>("DeepBlueModel.FK_Deal_Partner", "Partner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_PurchaseType", "PurchaseType")]
        public PurchaseType PurchaseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseType>("DeepBlueModel.FK_Deal_PurchaseType", "PurchaseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseType>("DeepBlueModel.FK_Deal_PurchaseType", "PurchaseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PurchaseType> PurchaseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PurchaseType>("DeepBlueModel.FK_Deal_PurchaseType", "PurchaseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PurchaseType>("DeepBlueModel.FK_Deal_PurchaseType", "PurchaseType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealClosing_Deal", "DealClosing")]
        public EntityCollection<DealClosing> DealClosings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealClosing>("DeepBlueModel.FK_DealClosing_Deal", "DealClosing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealClosing>("DeepBlueModel.FK_DealClosing_Deal", "DealClosing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealClosingCost_Deal", "DealClosingCost")]
        public EntityCollection<DealClosingCost> DealClosingCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealClosingCost>("DeepBlueModel.FK_DealClosingCost_Deal", "DealClosingCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealClosingCost>("DeepBlueModel.FK_DealClosingCost_Deal", "DealClosingCost", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingDirect_Deal", "DealUnderlyingDirect")]
        public EntityCollection<DealUnderlyingDirect> DealUnderlyingDirects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealUnderlyingDirect>("DeepBlueModel.FK_DealUnderlyingDirect_Deal", "DealUnderlyingDirect");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealUnderlyingDirect>("DeepBlueModel.FK_DealUnderlyingDirect_Deal", "DealUnderlyingDirect", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingFund_Deal", "DealUnderlyingFund")]
        public EntityCollection<DealUnderlyingFund> DealUnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealUnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFund_Deal", "DealUnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealUnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFund_Deal", "DealUnderlyingFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCallLineItem_Deal", "UnderlyingFundCapitalCallLineItem")]
        public EntityCollection<UnderlyingFundCapitalCallLineItem> UnderlyingFundCapitalCallLineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundCapitalCallLineItem>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_Deal", "UnderlyingFundCapitalCallLineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundCapitalCallLineItem>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_Deal", "UnderlyingFundCapitalCallLineItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="DealClosing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealClosing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealClosing object.
        /// </summary>
        /// <param name="dealClosingID">Initial value of the DealClosingID property.</param>
        /// <param name="dealID">Initial value of the DealID property.</param>
        /// <param name="closeDate">Initial value of the CloseDate property.</param>
        /// <param name="isFinalClose">Initial value of the IsFinalClose property.</param>
        public static DealClosing CreateDealClosing(global::System.Int32 dealClosingID, global::System.Int32 dealID, global::System.DateTime closeDate, global::System.Boolean isFinalClose)
        {
            DealClosing dealClosing = new DealClosing();
            dealClosing.DealClosingID = dealClosingID;
            dealClosing.DealID = dealID;
            dealClosing.CloseDate = closeDate;
            dealClosing.IsFinalClose = isFinalClose;
            return dealClosing;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealClosingID
        {
            get
            {
                return _DealClosingID;
            }
            set
            {
                if (_DealClosingID != value)
                {
                    OnDealClosingIDChanging(value);
                    ReportPropertyChanging("DealClosingID");
                    _DealClosingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealClosingID");
                    OnDealClosingIDChanged();
                }
            }
        }
        private global::System.Int32 _DealClosingID;
        partial void OnDealClosingIDChanging(global::System.Int32 value);
        partial void OnDealClosingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealID
        {
            get
            {
                return _DealID;
            }
            set
            {
                OnDealIDChanging(value);
                ReportPropertyChanging("DealID");
                _DealID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealID");
                OnDealIDChanged();
            }
        }
        private global::System.Int32 _DealID;
        partial void OnDealIDChanging(global::System.Int32 value);
        partial void OnDealIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CloseDate
        {
            get
            {
                return _CloseDate;
            }
            set
            {
                OnCloseDateChanging(value);
                ReportPropertyChanging("CloseDate");
                _CloseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CloseDate");
                OnCloseDateChanged();
            }
        }
        private global::System.DateTime _CloseDate;
        partial void OnCloseDateChanging(global::System.DateTime value);
        partial void OnCloseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DealNumber
        {
            get
            {
                return _DealNumber;
            }
            set
            {
                OnDealNumberChanging(value);
                ReportPropertyChanging("DealNumber");
                _DealNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealNumber");
                OnDealNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _DealNumber;
        partial void OnDealNumberChanging(Nullable<global::System.Int32> value);
        partial void OnDealNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFinalClose
        {
            get
            {
                return _IsFinalClose;
            }
            set
            {
                OnIsFinalCloseChanging(value);
                ReportPropertyChanging("IsFinalClose");
                _IsFinalClose = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFinalClose");
                OnIsFinalCloseChanged();
            }
        }
        private global::System.Boolean _IsFinalClose;
        partial void OnIsFinalCloseChanging(global::System.Boolean value);
        partial void OnIsFinalCloseChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealClosing_Deal", "Deal")]
        public Deal Deal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealClosing_Deal", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealClosing_Deal", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> DealReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealClosing_Deal", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("DeepBlueModel.FK_DealClosing_Deal", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingDirect_DealClosing", "DealUnderlyingDirect")]
        public EntityCollection<DealUnderlyingDirect> DealUnderlyingDirects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealUnderlyingDirect>("DeepBlueModel.FK_DealUnderlyingDirect_DealClosing", "DealUnderlyingDirect");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealUnderlyingDirect>("DeepBlueModel.FK_DealUnderlyingDirect_DealClosing", "DealUnderlyingDirect", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingFund_DealClosing", "DealUnderlyingFund")]
        public EntityCollection<DealUnderlyingFund> DealUnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealUnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFund_DealClosing", "DealUnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealUnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFund_DealClosing", "DealUnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="DealClosingCost")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealClosingCost : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealClosingCost object.
        /// </summary>
        /// <param name="dealClosingCostID">Initial value of the DealClosingCostID property.</param>
        /// <param name="dealClosingCostTypeID">Initial value of the DealClosingCostTypeID property.</param>
        /// <param name="dealID">Initial value of the DealID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static DealClosingCost CreateDealClosingCost(global::System.Int32 dealClosingCostID, global::System.Int32 dealClosingCostTypeID, global::System.Int32 dealID, global::System.Decimal amount)
        {
            DealClosingCost dealClosingCost = new DealClosingCost();
            dealClosingCost.DealClosingCostID = dealClosingCostID;
            dealClosingCost.DealClosingCostTypeID = dealClosingCostTypeID;
            dealClosingCost.DealID = dealID;
            dealClosingCost.Amount = amount;
            return dealClosingCost;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealClosingCostID
        {
            get
            {
                return _DealClosingCostID;
            }
            set
            {
                if (_DealClosingCostID != value)
                {
                    OnDealClosingCostIDChanging(value);
                    ReportPropertyChanging("DealClosingCostID");
                    _DealClosingCostID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealClosingCostID");
                    OnDealClosingCostIDChanged();
                }
            }
        }
        private global::System.Int32 _DealClosingCostID;
        partial void OnDealClosingCostIDChanging(global::System.Int32 value);
        partial void OnDealClosingCostIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealClosingCostTypeID
        {
            get
            {
                return _DealClosingCostTypeID;
            }
            set
            {
                OnDealClosingCostTypeIDChanging(value);
                ReportPropertyChanging("DealClosingCostTypeID");
                _DealClosingCostTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealClosingCostTypeID");
                OnDealClosingCostTypeIDChanged();
            }
        }
        private global::System.Int32 _DealClosingCostTypeID;
        partial void OnDealClosingCostTypeIDChanging(global::System.Int32 value);
        partial void OnDealClosingCostTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealID
        {
            get
            {
                return _DealID;
            }
            set
            {
                OnDealIDChanging(value);
                ReportPropertyChanging("DealID");
                _DealID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealID");
                OnDealIDChanged();
            }
        }
        private global::System.Int32 _DealID;
        partial void OnDealIDChanging(global::System.Int32 value);
        partial void OnDealIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealClosingCost_Deal", "Deal")]
        public Deal Deal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealClosingCost_Deal", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealClosingCost_Deal", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> DealReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealClosingCost_Deal", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("DeepBlueModel.FK_DealClosingCost_Deal", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealClosingCost_DealClosingCostType", "DealClosingCostType")]
        public DealClosingCostType DealClosingCostType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealClosingCostType>("DeepBlueModel.FK_DealClosingCost_DealClosingCostType", "DealClosingCostType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealClosingCostType>("DeepBlueModel.FK_DealClosingCost_DealClosingCostType", "DealClosingCostType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealClosingCostType> DealClosingCostTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealClosingCostType>("DeepBlueModel.FK_DealClosingCost_DealClosingCostType", "DealClosingCostType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealClosingCostType>("DeepBlueModel.FK_DealClosingCost_DealClosingCostType", "DealClosingCostType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="DealClosingCostType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealClosingCostType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealClosingCostType object.
        /// </summary>
        /// <param name="dealClosingCostTypeID">Initial value of the DealClosingCostTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        public static DealClosingCostType CreateDealClosingCostType(global::System.Int32 dealClosingCostTypeID, global::System.String name, global::System.Int32 entityID)
        {
            DealClosingCostType dealClosingCostType = new DealClosingCostType();
            dealClosingCostType.DealClosingCostTypeID = dealClosingCostTypeID;
            dealClosingCostType.Name = name;
            dealClosingCostType.EntityID = entityID;
            return dealClosingCostType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealClosingCostTypeID
        {
            get
            {
                return _DealClosingCostTypeID;
            }
            set
            {
                if (_DealClosingCostTypeID != value)
                {
                    OnDealClosingCostTypeIDChanging(value);
                    ReportPropertyChanging("DealClosingCostTypeID");
                    _DealClosingCostTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealClosingCostTypeID");
                    OnDealClosingCostTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _DealClosingCostTypeID;
        partial void OnDealClosingCostTypeIDChanging(global::System.Int32 value);
        partial void OnDealClosingCostTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealClosingCost_DealClosingCostType", "DealClosingCost")]
        public EntityCollection<DealClosingCost> DealClosingCosts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealClosingCost>("DeepBlueModel.FK_DealClosingCost_DealClosingCostType", "DealClosingCost");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealClosingCost>("DeepBlueModel.FK_DealClosingCost_DealClosingCostType", "DealClosingCost", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="DealUnderlyingDirect")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealUnderlyingDirect : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealUnderlyingDirect object.
        /// </summary>
        /// <param name="dealUnderlyingDirectID">Initial value of the DealUnderlyingDirectID property.</param>
        /// <param name="dealID">Initial value of the DealID property.</param>
        /// <param name="securityTypeID">Initial value of the SecurityTypeID property.</param>
        /// <param name="securityID">Initial value of the SecurityID property.</param>
        /// <param name="purchasePrice">Initial value of the PurchasePrice property.</param>
        public static DealUnderlyingDirect CreateDealUnderlyingDirect(global::System.Int32 dealUnderlyingDirectID, global::System.Int32 dealID, global::System.Int32 securityTypeID, global::System.Int32 securityID, global::System.Decimal purchasePrice)
        {
            DealUnderlyingDirect dealUnderlyingDirect = new DealUnderlyingDirect();
            dealUnderlyingDirect.DealUnderlyingDirectID = dealUnderlyingDirectID;
            dealUnderlyingDirect.DealID = dealID;
            dealUnderlyingDirect.SecurityTypeID = securityTypeID;
            dealUnderlyingDirect.SecurityID = securityID;
            dealUnderlyingDirect.PurchasePrice = purchasePrice;
            return dealUnderlyingDirect;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealUnderlyingDirectID
        {
            get
            {
                return _DealUnderlyingDirectID;
            }
            set
            {
                if (_DealUnderlyingDirectID != value)
                {
                    OnDealUnderlyingDirectIDChanging(value);
                    ReportPropertyChanging("DealUnderlyingDirectID");
                    _DealUnderlyingDirectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealUnderlyingDirectID");
                    OnDealUnderlyingDirectIDChanged();
                }
            }
        }
        private global::System.Int32 _DealUnderlyingDirectID;
        partial void OnDealUnderlyingDirectIDChanging(global::System.Int32 value);
        partial void OnDealUnderlyingDirectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealID
        {
            get
            {
                return _DealID;
            }
            set
            {
                OnDealIDChanging(value);
                ReportPropertyChanging("DealID");
                _DealID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealID");
                OnDealIDChanged();
            }
        }
        private global::System.Int32 _DealID;
        partial void OnDealIDChanging(global::System.Int32 value);
        partial void OnDealIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityTypeID
        {
            get
            {
                return _SecurityTypeID;
            }
            set
            {
                OnSecurityTypeIDChanging(value);
                ReportPropertyChanging("SecurityTypeID");
                _SecurityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityTypeID");
                OnSecurityTypeIDChanged();
            }
        }
        private global::System.Int32 _SecurityTypeID;
        partial void OnSecurityTypeIDChanging(global::System.Int32 value);
        partial void OnSecurityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityID
        {
            get
            {
                return _SecurityID;
            }
            set
            {
                OnSecurityIDChanging(value);
                ReportPropertyChanging("SecurityID");
                _SecurityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityID");
                OnSecurityIDChanged();
            }
        }
        private global::System.Int32 _SecurityID;
        partial void OnSecurityIDChanging(global::System.Int32 value);
        partial void OnSecurityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RecordDate
        {
            get
            {
                return _RecordDate;
            }
            set
            {
                OnRecordDateChanging(value);
                ReportPropertyChanging("RecordDate");
                _RecordDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordDate");
                OnRecordDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RecordDate;
        partial void OnRecordDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRecordDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumberOfShares
        {
            get
            {
                return _NumberOfShares;
            }
            set
            {
                OnNumberOfSharesChanging(value);
                ReportPropertyChanging("NumberOfShares");
                _NumberOfShares = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfShares");
                OnNumberOfSharesChanged();
            }
        }
        private Nullable<global::System.Int32> _NumberOfShares;
        partial void OnNumberOfSharesChanging(Nullable<global::System.Int32> value);
        partial void OnNumberOfSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Percent
        {
            get
            {
                return _Percent;
            }
            set
            {
                OnPercentChanging(value);
                ReportPropertyChanging("Percent");
                _Percent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percent");
                OnPercentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Percent;
        partial void OnPercentChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FMV
        {
            get
            {
                return _FMV;
            }
            set
            {
                OnFMVChanging(value);
                ReportPropertyChanging("FMV");
                _FMV = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FMV");
                OnFMVChanged();
            }
        }
        private Nullable<global::System.Decimal> _FMV;
        partial void OnFMVChanging(Nullable<global::System.Decimal> value);
        partial void OnFMVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DealClosingID
        {
            get
            {
                return _DealClosingID;
            }
            set
            {
                OnDealClosingIDChanging(value);
                ReportPropertyChanging("DealClosingID");
                _DealClosingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealClosingID");
                OnDealClosingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DealClosingID;
        partial void OnDealClosingIDChanging(Nullable<global::System.Int32> value);
        partial void OnDealClosingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PurchasePrice
        {
            get
            {
                return _PurchasePrice;
            }
            set
            {
                OnPurchasePriceChanging(value);
                ReportPropertyChanging("PurchasePrice");
                _PurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PurchasePrice");
                OnPurchasePriceChanged();
            }
        }
        private global::System.Decimal _PurchasePrice;
        partial void OnPurchasePriceChanging(global::System.Decimal value);
        partial void OnPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxCostBase
        {
            get
            {
                return _TaxCostBase;
            }
            set
            {
                OnTaxCostBaseChanging(value);
                ReportPropertyChanging("TaxCostBase");
                _TaxCostBase = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxCostBase");
                OnTaxCostBaseChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxCostBase;
        partial void OnTaxCostBaseChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxCostBaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TaxCostDate
        {
            get
            {
                return _TaxCostDate;
            }
            set
            {
                OnTaxCostDateChanging(value);
                ReportPropertyChanging("TaxCostDate");
                _TaxCostDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxCostDate");
                OnTaxCostDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TaxCostDate;
        partial void OnTaxCostDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTaxCostDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingDirect_Deal", "Deal")]
        public Deal Deal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealUnderlyingDirect_Deal", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealUnderlyingDirect_Deal", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> DealReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealUnderlyingDirect_Deal", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("DeepBlueModel.FK_DealUnderlyingDirect_Deal", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingDirect_DealClosing", "DealClosing")]
        public DealClosing DealClosing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealClosing>("DeepBlueModel.FK_DealUnderlyingDirect_DealClosing", "DealClosing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealClosing>("DeepBlueModel.FK_DealUnderlyingDirect_DealClosing", "DealClosing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealClosing> DealClosingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealClosing>("DeepBlueModel.FK_DealUnderlyingDirect_DealClosing", "DealClosing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealClosing>("DeepBlueModel.FK_DealUnderlyingDirect_DealClosing", "DealClosing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingDirect_SecurityType", "SecurityType")]
        public SecurityType SecurityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_DealUnderlyingDirect_SecurityType", "SecurityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_DealUnderlyingDirect_SecurityType", "SecurityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityType> SecurityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_DealUnderlyingDirect_SecurityType", "SecurityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityType>("DeepBlueModel.FK_DealUnderlyingDirect_SecurityType", "SecurityType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="DealUnderlyingFund")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealUnderlyingFund : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealUnderlyingFund object.
        /// </summary>
        /// <param name="dealUnderlyingtFundID">Initial value of the DealUnderlyingtFundID property.</param>
        /// <param name="dealID">Initial value of the DealID property.</param>
        /// <param name="underlyingFundID">Initial value of the UnderlyingFundID property.</param>
        public static DealUnderlyingFund CreateDealUnderlyingFund(global::System.Int32 dealUnderlyingtFundID, global::System.Int32 dealID, global::System.Int32 underlyingFundID)
        {
            DealUnderlyingFund dealUnderlyingFund = new DealUnderlyingFund();
            dealUnderlyingFund.DealUnderlyingtFundID = dealUnderlyingtFundID;
            dealUnderlyingFund.DealID = dealID;
            dealUnderlyingFund.UnderlyingFundID = underlyingFundID;
            return dealUnderlyingFund;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealUnderlyingtFundID
        {
            get
            {
                return _DealUnderlyingtFundID;
            }
            set
            {
                if (_DealUnderlyingtFundID != value)
                {
                    OnDealUnderlyingtFundIDChanging(value);
                    ReportPropertyChanging("DealUnderlyingtFundID");
                    _DealUnderlyingtFundID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealUnderlyingtFundID");
                    OnDealUnderlyingtFundIDChanged();
                }
            }
        }
        private global::System.Int32 _DealUnderlyingtFundID;
        partial void OnDealUnderlyingtFundIDChanging(global::System.Int32 value);
        partial void OnDealUnderlyingtFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealID
        {
            get
            {
                return _DealID;
            }
            set
            {
                OnDealIDChanging(value);
                ReportPropertyChanging("DealID");
                _DealID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealID");
                OnDealIDChanged();
            }
        }
        private global::System.Int32 _DealID;
        partial void OnDealIDChanging(global::System.Int32 value);
        partial void OnDealIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundID
        {
            get
            {
                return _UnderlyingFundID;
            }
            set
            {
                OnUnderlyingFundIDChanging(value);
                ReportPropertyChanging("UnderlyingFundID");
                _UnderlyingFundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderlyingFundID");
                OnUnderlyingFundIDChanged();
            }
        }
        private global::System.Int32 _UnderlyingFundID;
        partial void OnUnderlyingFundIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> RecordDate
        {
            get
            {
                return _RecordDate;
            }
            set
            {
                OnRecordDateChanging(value);
                ReportPropertyChanging("RecordDate");
                _RecordDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecordDate");
                OnRecordDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _RecordDate;
        partial void OnRecordDateChanging(Nullable<global::System.DateTime> value);
        partial void OnRecordDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Percent
        {
            get
            {
                return _Percent;
            }
            set
            {
                OnPercentChanging(value);
                ReportPropertyChanging("Percent");
                _Percent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percent");
                OnPercentChanged();
            }
        }
        private Nullable<global::System.Decimal> _Percent;
        partial void OnPercentChanging(Nullable<global::System.Decimal> value);
        partial void OnPercentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CommittedAmount
        {
            get
            {
                return _CommittedAmount;
            }
            set
            {
                OnCommittedAmountChanging(value);
                ReportPropertyChanging("CommittedAmount");
                _CommittedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommittedAmount");
                OnCommittedAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CommittedAmount;
        partial void OnCommittedAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCommittedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnfundedAmount
        {
            get
            {
                return _UnfundedAmount;
            }
            set
            {
                OnUnfundedAmountChanging(value);
                ReportPropertyChanging("UnfundedAmount");
                _UnfundedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnfundedAmount");
                OnUnfundedAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnfundedAmount;
        partial void OnUnfundedAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnUnfundedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> GrossPurchasePrice
        {
            get
            {
                return _GrossPurchasePrice;
            }
            set
            {
                OnGrossPurchasePriceChanging(value);
                ReportPropertyChanging("GrossPurchasePrice");
                _GrossPurchasePrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GrossPurchasePrice");
                OnGrossPurchasePriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _GrossPurchasePrice;
        partial void OnGrossPurchasePriceChanging(Nullable<global::System.Decimal> value);
        partial void OnGrossPurchasePriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DealClosingID
        {
            get
            {
                return _DealClosingID;
            }
            set
            {
                OnDealClosingIDChanging(value);
                ReportPropertyChanging("DealClosingID");
                _DealClosingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealClosingID");
                OnDealClosingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DealClosingID;
        partial void OnDealClosingIDChanging(Nullable<global::System.Int32> value);
        partial void OnDealClosingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ReassignedGPP
        {
            get
            {
                return _ReassignedGPP;
            }
            set
            {
                OnReassignedGPPChanging(value);
                ReportPropertyChanging("ReassignedGPP");
                _ReassignedGPP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReassignedGPP");
                OnReassignedGPPChanged();
            }
        }
        private Nullable<global::System.Decimal> _ReassignedGPP;
        partial void OnReassignedGPPChanging(Nullable<global::System.Decimal> value);
        partial void OnReassignedGPPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PostRecordDateCapitalCall
        {
            get
            {
                return _PostRecordDateCapitalCall;
            }
            set
            {
                OnPostRecordDateCapitalCallChanging(value);
                ReportPropertyChanging("PostRecordDateCapitalCall");
                _PostRecordDateCapitalCall = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostRecordDateCapitalCall");
                OnPostRecordDateCapitalCallChanged();
            }
        }
        private Nullable<global::System.Decimal> _PostRecordDateCapitalCall;
        partial void OnPostRecordDateCapitalCallChanging(Nullable<global::System.Decimal> value);
        partial void OnPostRecordDateCapitalCallChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> PostRecordDateDistribution
        {
            get
            {
                return _PostRecordDateDistribution;
            }
            set
            {
                OnPostRecordDateDistributionChanging(value);
                ReportPropertyChanging("PostRecordDateDistribution");
                _PostRecordDateDistribution = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PostRecordDateDistribution");
                OnPostRecordDateDistributionChanged();
            }
        }
        private Nullable<global::System.Decimal> _PostRecordDateDistribution;
        partial void OnPostRecordDateDistributionChanging(Nullable<global::System.Decimal> value);
        partial void OnPostRecordDateDistributionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingFund_Deal", "Deal")]
        public Deal Deal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealUnderlyingFund_Deal", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealUnderlyingFund_Deal", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> DealReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_DealUnderlyingFund_Deal", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("DeepBlueModel.FK_DealUnderlyingFund_Deal", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingFund_DealClosing", "DealClosing")]
        public DealClosing DealClosing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealClosing>("DeepBlueModel.FK_DealUnderlyingFund_DealClosing", "DealClosing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealClosing>("DeepBlueModel.FK_DealUnderlyingFund_DealClosing", "DealClosing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealClosing> DealClosingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealClosing>("DeepBlueModel.FK_DealUnderlyingFund_DealClosing", "DealClosing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealClosing>("DeepBlueModel.FK_DealUnderlyingFund_DealClosing", "DealClosing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingFund_UnderlyingFund", "UnderlyingFund")]
        public UnderlyingFund UnderlyingFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFund_UnderlyingFund", "UnderlyingFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFund_UnderlyingFund", "UnderlyingFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFund> UnderlyingFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFund_UnderlyingFund", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFund_UnderlyingFund", "UnderlyingFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingFundAdjustment_DealUnderlyingFund", "DealUnderlyingFundAdjustment")]
        public EntityCollection<DealUnderlyingFundAdjustment> DealUnderlyingFundAdjustments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealUnderlyingFundAdjustment>("DeepBlueModel.FK_DealUnderlyingFundAdjustment_DealUnderlyingFund", "DealUnderlyingFundAdjustment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealUnderlyingFundAdjustment>("DeepBlueModel.FK_DealUnderlyingFundAdjustment_DealUnderlyingFund", "DealUnderlyingFundAdjustment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="DealUnderlyingFundAdjustment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DealUnderlyingFundAdjustment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DealUnderlyingFundAdjustment object.
        /// </summary>
        /// <param name="dealUnderlyingFundAdjustmentID">Initial value of the DealUnderlyingFundAdjustmentID property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        public static DealUnderlyingFundAdjustment CreateDealUnderlyingFundAdjustment(global::System.Int32 dealUnderlyingFundAdjustmentID, global::System.Int32 createdBy, global::System.DateTime createdDate)
        {
            DealUnderlyingFundAdjustment dealUnderlyingFundAdjustment = new DealUnderlyingFundAdjustment();
            dealUnderlyingFundAdjustment.DealUnderlyingFundAdjustmentID = dealUnderlyingFundAdjustmentID;
            dealUnderlyingFundAdjustment.CreatedBy = createdBy;
            dealUnderlyingFundAdjustment.CreatedDate = createdDate;
            return dealUnderlyingFundAdjustment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealUnderlyingFundAdjustmentID
        {
            get
            {
                return _DealUnderlyingFundAdjustmentID;
            }
            set
            {
                if (_DealUnderlyingFundAdjustmentID != value)
                {
                    OnDealUnderlyingFundAdjustmentIDChanging(value);
                    ReportPropertyChanging("DealUnderlyingFundAdjustmentID");
                    _DealUnderlyingFundAdjustmentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DealUnderlyingFundAdjustmentID");
                    OnDealUnderlyingFundAdjustmentIDChanged();
                }
            }
        }
        private global::System.Int32 _DealUnderlyingFundAdjustmentID;
        partial void OnDealUnderlyingFundAdjustmentIDChanging(global::System.Int32 value);
        partial void OnDealUnderlyingFundAdjustmentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> DealUnderlyingFundID
        {
            get
            {
                return _DealUnderlyingFundID;
            }
            set
            {
                OnDealUnderlyingFundIDChanging(value);
                ReportPropertyChanging("DealUnderlyingFundID");
                _DealUnderlyingFundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealUnderlyingFundID");
                OnDealUnderlyingFundIDChanged();
            }
        }
        private Nullable<global::System.Int32> _DealUnderlyingFundID;
        partial void OnDealUnderlyingFundIDChanging(Nullable<global::System.Int32> value);
        partial void OnDealUnderlyingFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> CommitmentAmount
        {
            get
            {
                return _CommitmentAmount;
            }
            set
            {
                OnCommitmentAmountChanging(value);
                ReportPropertyChanging("CommitmentAmount");
                _CommitmentAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommitmentAmount");
                OnCommitmentAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _CommitmentAmount;
        partial void OnCommitmentAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnCommitmentAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnfundedAmount
        {
            get
            {
                return _UnfundedAmount;
            }
            set
            {
                OnUnfundedAmountChanging(value);
                ReportPropertyChanging("UnfundedAmount");
                _UnfundedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnfundedAmount");
                OnUnfundedAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnfundedAmount;
        partial void OnUnfundedAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnUnfundedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingFundAdjustment_DealUnderlyingFund", "DealUnderlyingFund")]
        public DealUnderlyingFund DealUnderlyingFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealUnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFundAdjustment_DealUnderlyingFund", "DealUnderlyingFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealUnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFundAdjustment_DealUnderlyingFund", "DealUnderlyingFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DealUnderlyingFund> DealUnderlyingFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DealUnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFundAdjustment_DealUnderlyingFund", "DealUnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DealUnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFundAdjustment_DealUnderlyingFund", "DealUnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="DocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentType object.
        /// </summary>
        /// <param name="documentTypeID">Initial value of the DocumentTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="documentTypeName">Initial value of the DocumentTypeName property.</param>
        public static DocumentType CreateDocumentType(global::System.Int32 documentTypeID, global::System.Int32 entityID, global::System.String documentTypeName)
        {
            DocumentType documentType = new DocumentType();
            documentType.DocumentTypeID = documentTypeID;
            documentType.EntityID = entityID;
            documentType.DocumentTypeName = documentTypeName;
            return documentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeID
        {
            get
            {
                return _DocumentTypeID;
            }
            set
            {
                if (_DocumentTypeID != value)
                {
                    OnDocumentTypeIDChanging(value);
                    ReportPropertyChanging("DocumentTypeID");
                    _DocumentTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DocumentTypeID");
                    OnDocumentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _DocumentTypeID;
        partial void OnDocumentTypeIDChanging(global::System.Int32 value);
        partial void OnDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentTypeName
        {
            get
            {
                return _DocumentTypeName;
            }
            set
            {
                OnDocumentTypeNameChanging(value);
                ReportPropertyChanging("DocumentTypeName");
                _DocumentTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DocumentTypeName");
                OnDocumentTypeNameChanged();
            }
        }
        private global::System.String _DocumentTypeName;
        partial void OnDocumentTypeNameChanging(global::System.String value);
        partial void OnDocumentTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_DocumentType", "InvestorFundDocument")]
        public EntityCollection<InvestorFundDocument> InvestorFundDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "InvestorFundDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "InvestorFundDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Equity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Equity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Equity object.
        /// </summary>
        /// <param name="equityID">Initial value of the EquityID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="issuerID">Initial value of the IssuerID property.</param>
        /// <param name="equityTypeID">Initial value of the EquityTypeID property.</param>
        /// <param name="public">Initial value of the Public property.</param>
        public static Equity CreateEquity(global::System.Int32 equityID, global::System.Int32 entityID, global::System.Int32 issuerID, global::System.Int32 equityTypeID, global::System.Boolean @public)
        {
            Equity equity = new Equity();
            equity.EquityID = equityID;
            equity.EntityID = entityID;
            equity.IssuerID = issuerID;
            equity.EquityTypeID = equityTypeID;
            equity.Public = @public;
            return equity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquityID
        {
            get
            {
                return _EquityID;
            }
            set
            {
                if (_EquityID != value)
                {
                    OnEquityIDChanging(value);
                    ReportPropertyChanging("EquityID");
                    _EquityID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquityID");
                    OnEquityIDChanged();
                }
            }
        }
        private global::System.Int32 _EquityID;
        partial void OnEquityIDChanging(global::System.Int32 value);
        partial void OnEquityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssuerID
        {
            get
            {
                return _IssuerID;
            }
            set
            {
                OnIssuerIDChanging(value);
                ReportPropertyChanging("IssuerID");
                _IssuerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuerID");
                OnIssuerIDChanged();
            }
        }
        private global::System.Int32 _IssuerID;
        partial void OnIssuerIDChanging(global::System.Int32 value);
        partial void OnIssuerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquityTypeID
        {
            get
            {
                return _EquityTypeID;
            }
            set
            {
                OnEquityTypeIDChanging(value);
                ReportPropertyChanging("EquityTypeID");
                _EquityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquityTypeID");
                OnEquityTypeIDChanged();
            }
        }
        private global::System.Int32 _EquityTypeID;
        partial void OnEquityTypeIDChanging(global::System.Int32 value);
        partial void OnEquityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Public
        {
            get
            {
                return _Public;
            }
            set
            {
                OnPublicChanging(value);
                ReportPropertyChanging("Public");
                _Public = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Public");
                OnPublicChanged();
            }
        }
        private global::System.Boolean _Public;
        partial void OnPublicChanging(global::System.Boolean value);
        partial void OnPublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShareClassTypeID
        {
            get
            {
                return _ShareClassTypeID;
            }
            set
            {
                OnShareClassTypeIDChanging(value);
                ReportPropertyChanging("ShareClassTypeID");
                _ShareClassTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShareClassTypeID");
                OnShareClassTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ShareClassTypeID;
        partial void OnShareClassTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnShareClassTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndustryID
        {
            get
            {
                return _IndustryID;
            }
            set
            {
                OnIndustryIDChanging(value);
                ReportPropertyChanging("IndustryID");
                _IndustryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryID");
                OnIndustryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IndustryID;
        partial void OnIndustryIDChanging(Nullable<global::System.Int32> value);
        partial void OnIndustryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyID;
        partial void OnCurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Equity_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DeepBlueModel.FK_Equity_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DeepBlueModel.FK_Equity_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DeepBlueModel.FK_Equity_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("DeepBlueModel.FK_Equity_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Equity_EquityType", "EquityType")]
        public EquityType EquityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquityType>("DeepBlueModel.FK_Equity_EquityType", "EquityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquityType>("DeepBlueModel.FK_Equity_EquityType", "EquityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EquityType> EquityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EquityType>("DeepBlueModel.FK_Equity_EquityType", "EquityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EquityType>("DeepBlueModel.FK_Equity_EquityType", "EquityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Equity_Industry", "Industry")]
        public Industry Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DeepBlueModel.FK_Equity_Industry", "Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DeepBlueModel.FK_Equity_Industry", "Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Industry> IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DeepBlueModel.FK_Equity_Industry", "Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Industry>("DeepBlueModel.FK_Equity_Industry", "Industry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Equity_Issuer", "Issuer")]
        public Issuer Issuer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer>("DeepBlueModel.FK_Equity_Issuer", "Issuer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer>("DeepBlueModel.FK_Equity_Issuer", "Issuer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issuer> IssuerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer>("DeepBlueModel.FK_Equity_Issuer", "Issuer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issuer>("DeepBlueModel.FK_Equity_Issuer", "Issuer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Equity_ShareClassType", "ShareClassType")]
        public ShareClassType ShareClassType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareClassType>("DeepBlueModel.FK_Equity_ShareClassType", "ShareClassType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareClassType>("DeepBlueModel.FK_Equity_ShareClassType", "ShareClassType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShareClassType> ShareClassTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareClassType>("DeepBlueModel.FK_Equity_ShareClassType", "ShareClassType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShareClassType>("DeepBlueModel.FK_Equity_ShareClassType", "ShareClassType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_EquitySplit_Equity", "EquitySplit")]
        public EntityCollection<EquitySplit> EquitySplits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EquitySplit>("DeepBlueModel.FK_EquitySplit_Equity", "EquitySplit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EquitySplit>("DeepBlueModel.FK_EquitySplit_Equity", "EquitySplit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="EquitySplit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquitySplit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquitySplit object.
        /// </summary>
        /// <param name="equiteSplitID">Initial value of the EquiteSplitID property.</param>
        /// <param name="equityID">Initial value of the EquityID property.</param>
        /// <param name="splitFactor">Initial value of the SplitFactor property.</param>
        /// <param name="splitDate">Initial value of the SplitDate property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static EquitySplit CreateEquitySplit(global::System.Int32 equiteSplitID, global::System.Int32 equityID, global::System.Int32 splitFactor, global::System.DateTime splitDate, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            EquitySplit equitySplit = new EquitySplit();
            equitySplit.EquiteSplitID = equiteSplitID;
            equitySplit.EquityID = equityID;
            equitySplit.SplitFactor = splitFactor;
            equitySplit.SplitDate = splitDate;
            equitySplit.CreatedDate = createdDate;
            equitySplit.CreatedBy = createdBy;
            return equitySplit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquiteSplitID
        {
            get
            {
                return _EquiteSplitID;
            }
            set
            {
                if (_EquiteSplitID != value)
                {
                    OnEquiteSplitIDChanging(value);
                    ReportPropertyChanging("EquiteSplitID");
                    _EquiteSplitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquiteSplitID");
                    OnEquiteSplitIDChanged();
                }
            }
        }
        private global::System.Int32 _EquiteSplitID;
        partial void OnEquiteSplitIDChanging(global::System.Int32 value);
        partial void OnEquiteSplitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquityID
        {
            get
            {
                return _EquityID;
            }
            set
            {
                OnEquityIDChanging(value);
                ReportPropertyChanging("EquityID");
                _EquityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EquityID");
                OnEquityIDChanged();
            }
        }
        private global::System.Int32 _EquityID;
        partial void OnEquityIDChanging(global::System.Int32 value);
        partial void OnEquityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SplitFactor
        {
            get
            {
                return _SplitFactor;
            }
            set
            {
                OnSplitFactorChanging(value);
                ReportPropertyChanging("SplitFactor");
                _SplitFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitFactor");
                OnSplitFactorChanged();
            }
        }
        private global::System.Int32 _SplitFactor;
        partial void OnSplitFactorChanging(global::System.Int32 value);
        partial void OnSplitFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SplitDate
        {
            get
            {
                return _SplitDate;
            }
            set
            {
                OnSplitDateChanging(value);
                ReportPropertyChanging("SplitDate");
                _SplitDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitDate");
                OnSplitDateChanged();
            }
        }
        private global::System.DateTime _SplitDate;
        partial void OnSplitDateChanging(global::System.DateTime value);
        partial void OnSplitDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_EquitySplit_Equity", "Equity")]
        public Equity Equity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equity>("DeepBlueModel.FK_EquitySplit_Equity", "Equity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equity>("DeepBlueModel.FK_EquitySplit_Equity", "Equity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Equity> EquityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Equity>("DeepBlueModel.FK_EquitySplit_Equity", "Equity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Equity>("DeepBlueModel.FK_EquitySplit_Equity", "Equity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="EquityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EquityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EquityType object.
        /// </summary>
        /// <param name="equityTypeID">Initial value of the EquityTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static EquityType CreateEquityType(global::System.Int32 equityTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            EquityType equityType = new EquityType();
            equityType.EquityTypeID = equityTypeID;
            equityType.EntityID = entityID;
            equityType.Enabled = enabled;
            equityType.CreatedDate = createdDate;
            equityType.CreatedBy = createdBy;
            return equityType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EquityTypeID
        {
            get
            {
                return _EquityTypeID;
            }
            set
            {
                if (_EquityTypeID != value)
                {
                    OnEquityTypeIDChanging(value);
                    ReportPropertyChanging("EquityTypeID");
                    _EquityTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EquityTypeID");
                    OnEquityTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _EquityTypeID;
        partial void OnEquityTypeIDChanging(global::System.Int32 value);
        partial void OnEquityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Equity
        {
            get
            {
                return _Equity;
            }
            set
            {
                OnEquityChanging(value);
                ReportPropertyChanging("Equity");
                _Equity = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Equity");
                OnEquityChanged();
            }
        }
        private global::System.String _Equity;
        partial void OnEquityChanging(global::System.String value);
        partial void OnEquityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Equity_EquityType", "Equity")]
        public EntityCollection<Equity> Equities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equity>("DeepBlueModel.FK_Equity_EquityType", "Equity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equity>("DeepBlueModel.FK_Equity_EquityType", "Equity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="fileID">Initial value of the FileID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="fileTypeID">Initial value of the FileTypeID property.</param>
        /// <param name="filePath">Initial value of the FilePath property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static File CreateFile(global::System.Int32 fileID, global::System.Int32 entityID, global::System.Int32 fileTypeID, global::System.String filePath, global::System.String fileName, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            File file = new File();
            file.FileID = fileID;
            file.EntityID = entityID;
            file.FileTypeID = fileTypeID;
            file.FilePath = filePath;
            file.FileName = fileName;
            file.CreatedDate = createdDate;
            file.CreatedBy = createdBy;
            return file;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                if (_FileID != value)
                {
                    OnFileIDChanging(value);
                    ReportPropertyChanging("FileID");
                    _FileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileID");
                    OnFileIDChanged();
                }
            }
        }
        private global::System.Int32 _FileID;
        partial void OnFileIDChanging(global::System.Int32 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileTypeID
        {
            get
            {
                return _FileTypeID;
            }
            set
            {
                OnFileTypeIDChanging(value);
                ReportPropertyChanging("FileTypeID");
                _FileTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileTypeID");
                OnFileTypeIDChanged();
            }
        }
        private global::System.Int32 _FileTypeID;
        partial void OnFileTypeIDChanging(global::System.Int32 value);
        partial void OnFileTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePath
        {
            get
            {
                return _FilePath;
            }
            set
            {
                OnFilePathChanging(value);
                ReportPropertyChanging("FilePath");
                _FilePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePath");
                OnFilePathChanged();
            }
        }
        private global::System.String _FilePath;
        partial void OnFilePathChanging(global::System.String value);
        partial void OnFilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Int64> _Size;
        partial void OnSizeChanging(Nullable<global::System.Int64> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_File_FileType", "FileType")]
        public FileType FileType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("DeepBlueModel.FK_File_FileType", "FileType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("DeepBlueModel.FK_File_FileType", "FileType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileType> FileTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("DeepBlueModel.FK_File_FileType", "FileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileType>("DeepBlueModel.FK_File_FileType", "FileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_File", "InvestorFundDocument")]
        public EntityCollection<InvestorFundDocument> InvestorFundDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_File", "InvestorFundDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_File", "InvestorFundDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FileType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileType object.
        /// </summary>
        /// <param name="fileTypeID">Initial value of the FileTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="fileTypeName">Initial value of the FileTypeName property.</param>
        public static FileType CreateFileType(global::System.Int32 fileTypeID, global::System.Int32 entityID, global::System.String fileTypeName)
        {
            FileType fileType = new FileType();
            fileType.FileTypeID = fileTypeID;
            fileType.EntityID = entityID;
            fileType.FileTypeName = fileTypeName;
            return fileType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileTypeID
        {
            get
            {
                return _FileTypeID;
            }
            set
            {
                if (_FileTypeID != value)
                {
                    OnFileTypeIDChanging(value);
                    ReportPropertyChanging("FileTypeID");
                    _FileTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileTypeID");
                    OnFileTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FileTypeID;
        partial void OnFileTypeIDChanging(global::System.Int32 value);
        partial void OnFileTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileTypeName
        {
            get
            {
                return _FileTypeName;
            }
            set
            {
                OnFileTypeNameChanging(value);
                ReportPropertyChanging("FileTypeName");
                _FileTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileTypeName");
                OnFileTypeNameChanged();
            }
        }
        private global::System.String _FileTypeName;
        partial void OnFileTypeNameChanging(global::System.String value);
        partial void OnFileTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileExtension
        {
            get
            {
                return _FileExtension;
            }
            set
            {
                OnFileExtensionChanging(value);
                ReportPropertyChanging("FileExtension");
                _FileExtension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileExtension");
                OnFileExtensionChanged();
            }
        }
        private global::System.String _FileExtension;
        partial void OnFileExtensionChanging(global::System.String value);
        partial void OnFileExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_File_FileType", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("DeepBlueModel.FK_File_FileType", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("DeepBlueModel.FK_File_FileType", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FixedIncome")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FixedIncome : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FixedIncome object.
        /// </summary>
        /// <param name="fixedIncomeID">Initial value of the FixedIncomeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="issuerID">Initial value of the IssuerID property.</param>
        /// <param name="fixedIncomeTypeID">Initial value of the FixedIncomeTypeID property.</param>
        public static FixedIncome CreateFixedIncome(global::System.Int32 fixedIncomeID, global::System.Int32 entityID, global::System.Int32 issuerID, global::System.Int32 fixedIncomeTypeID)
        {
            FixedIncome fixedIncome = new FixedIncome();
            fixedIncome.FixedIncomeID = fixedIncomeID;
            fixedIncome.EntityID = entityID;
            fixedIncome.IssuerID = issuerID;
            fixedIncome.FixedIncomeTypeID = fixedIncomeTypeID;
            return fixedIncome;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FixedIncomeID
        {
            get
            {
                return _FixedIncomeID;
            }
            set
            {
                if (_FixedIncomeID != value)
                {
                    OnFixedIncomeIDChanging(value);
                    ReportPropertyChanging("FixedIncomeID");
                    _FixedIncomeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FixedIncomeID");
                    OnFixedIncomeIDChanged();
                }
            }
        }
        private global::System.Int32 _FixedIncomeID;
        partial void OnFixedIncomeIDChanging(global::System.Int32 value);
        partial void OnFixedIncomeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssuerID
        {
            get
            {
                return _IssuerID;
            }
            set
            {
                OnIssuerIDChanging(value);
                ReportPropertyChanging("IssuerID");
                _IssuerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuerID");
                OnIssuerIDChanged();
            }
        }
        private global::System.Int32 _IssuerID;
        partial void OnIssuerIDChanging(global::System.Int32 value);
        partial void OnIssuerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FixedIncomeTypeID
        {
            get
            {
                return _FixedIncomeTypeID;
            }
            set
            {
                OnFixedIncomeTypeIDChanging(value);
                ReportPropertyChanging("FixedIncomeTypeID");
                _FixedIncomeTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FixedIncomeTypeID");
                OnFixedIncomeTypeIDChanged();
            }
        }
        private global::System.Int32 _FixedIncomeTypeID;
        partial void OnFixedIncomeTypeIDChanging(global::System.Int32 value);
        partial void OnFixedIncomeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Symbol
        {
            get
            {
                return _Symbol;
            }
            set
            {
                OnSymbolChanging(value);
                ReportPropertyChanging("Symbol");
                _Symbol = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Symbol");
                OnSymbolChanged();
            }
        }
        private global::System.String _Symbol;
        partial void OnSymbolChanging(global::System.String value);
        partial void OnSymbolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FaceValue
        {
            get
            {
                return _FaceValue;
            }
            set
            {
                OnFaceValueChanging(value);
                ReportPropertyChanging("FaceValue");
                _FaceValue = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FaceValue");
                OnFaceValueChanged();
            }
        }
        private Nullable<global::System.Decimal> _FaceValue;
        partial void OnFaceValueChanging(Nullable<global::System.Decimal> value);
        partial void OnFaceValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Maturity
        {
            get
            {
                return _Maturity;
            }
            set
            {
                OnMaturityChanging(value);
                ReportPropertyChanging("Maturity");
                _Maturity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Maturity");
                OnMaturityChanged();
            }
        }
        private Nullable<global::System.DateTime> _Maturity;
        partial void OnMaturityChanging(Nullable<global::System.DateTime> value);
        partial void OnMaturityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> IssuedDate
        {
            get
            {
                return _IssuedDate;
            }
            set
            {
                OnIssuedDateChanging(value);
                ReportPropertyChanging("IssuedDate");
                _IssuedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuedDate");
                OnIssuedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _IssuedDate;
        partial void OnIssuedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnIssuedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrencyID
        {
            get
            {
                return _CurrencyID;
            }
            set
            {
                OnCurrencyIDChanging(value);
                ReportPropertyChanging("CurrencyID");
                _CurrencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrencyID");
                OnCurrencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrencyID;
        partial void OnCurrencyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCurrencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Frequency
        {
            get
            {
                return _Frequency;
            }
            set
            {
                OnFrequencyChanging(value);
                ReportPropertyChanging("Frequency");
                _Frequency = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Frequency");
                OnFrequencyChanged();
            }
        }
        private Nullable<global::System.Int32> _Frequency;
        partial void OnFrequencyChanging(Nullable<global::System.Int32> value);
        partial void OnFrequencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FirstAccrualDate
        {
            get
            {
                return _FirstAccrualDate;
            }
            set
            {
                OnFirstAccrualDateChanging(value);
                ReportPropertyChanging("FirstAccrualDate");
                _FirstAccrualDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstAccrualDate");
                OnFirstAccrualDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FirstAccrualDate;
        partial void OnFirstAccrualDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFirstAccrualDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FirstCouponDate
        {
            get
            {
                return _FirstCouponDate;
            }
            set
            {
                OnFirstCouponDateChanging(value);
                ReportPropertyChanging("FirstCouponDate");
                _FirstCouponDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FirstCouponDate");
                OnFirstCouponDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FirstCouponDate;
        partial void OnFirstCouponDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFirstCouponDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndustryID
        {
            get
            {
                return _IndustryID;
            }
            set
            {
                OnIndustryIDChanging(value);
                ReportPropertyChanging("IndustryID");
                _IndustryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryID");
                OnIndustryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IndustryID;
        partial void OnIndustryIDChanging(Nullable<global::System.Int32> value);
        partial void OnIndustryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CouponInformation
        {
            get
            {
                return _CouponInformation;
            }
            set
            {
                OnCouponInformationChanging(value);
                ReportPropertyChanging("CouponInformation");
                _CouponInformation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CouponInformation");
                OnCouponInformationChanged();
            }
        }
        private global::System.String _CouponInformation;
        partial void OnCouponInformationChanging(global::System.String value);
        partial void OnCouponInformationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FixedIncome_Currency", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DeepBlueModel.FK_FixedIncome_Currency", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DeepBlueModel.FK_FixedIncome_Currency", "Currency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("DeepBlueModel.FK_FixedIncome_Currency", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("DeepBlueModel.FK_FixedIncome_Currency", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FixedIncome_FixedIncomeType", "FixedIncomeType")]
        public FixedIncomeType FixedIncomeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FixedIncomeType>("DeepBlueModel.FK_FixedIncome_FixedIncomeType", "FixedIncomeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FixedIncomeType>("DeepBlueModel.FK_FixedIncome_FixedIncomeType", "FixedIncomeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FixedIncomeType> FixedIncomeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FixedIncomeType>("DeepBlueModel.FK_FixedIncome_FixedIncomeType", "FixedIncomeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FixedIncomeType>("DeepBlueModel.FK_FixedIncome_FixedIncomeType", "FixedIncomeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FixedIncome_Industry", "Industry")]
        public Industry Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DeepBlueModel.FK_FixedIncome_Industry", "Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DeepBlueModel.FK_FixedIncome_Industry", "Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Industry> IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DeepBlueModel.FK_FixedIncome_Industry", "Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Industry>("DeepBlueModel.FK_FixedIncome_Industry", "Industry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FixedIncome_Issuer", "Issuer")]
        public Issuer Issuer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer>("DeepBlueModel.FK_FixedIncome_Issuer", "Issuer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer>("DeepBlueModel.FK_FixedIncome_Issuer", "Issuer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issuer> IssuerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer>("DeepBlueModel.FK_FixedIncome_Issuer", "Issuer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issuer>("DeepBlueModel.FK_FixedIncome_Issuer", "Issuer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FixedIncomeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FixedIncomeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FixedIncomeType object.
        /// </summary>
        /// <param name="fixedIncomeTypeID">Initial value of the FixedIncomeTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static FixedIncomeType CreateFixedIncomeType(global::System.Int32 fixedIncomeTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            FixedIncomeType fixedIncomeType = new FixedIncomeType();
            fixedIncomeType.FixedIncomeTypeID = fixedIncomeTypeID;
            fixedIncomeType.EntityID = entityID;
            fixedIncomeType.Enabled = enabled;
            fixedIncomeType.CreatedDate = createdDate;
            fixedIncomeType.CreatedBy = createdBy;
            return fixedIncomeType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FixedIncomeTypeID
        {
            get
            {
                return _FixedIncomeTypeID;
            }
            set
            {
                if (_FixedIncomeTypeID != value)
                {
                    OnFixedIncomeTypeIDChanging(value);
                    ReportPropertyChanging("FixedIncomeTypeID");
                    _FixedIncomeTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FixedIncomeTypeID");
                    OnFixedIncomeTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FixedIncomeTypeID;
        partial void OnFixedIncomeTypeIDChanging(global::System.Int32 value);
        partial void OnFixedIncomeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FixedIncomeType1
        {
            get
            {
                return _FixedIncomeType1;
            }
            set
            {
                OnFixedIncomeType1Changing(value);
                ReportPropertyChanging("FixedIncomeType1");
                _FixedIncomeType1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FixedIncomeType1");
                OnFixedIncomeType1Changed();
            }
        }
        private global::System.String _FixedIncomeType1;
        partial void OnFixedIncomeType1Changing(global::System.String value);
        partial void OnFixedIncomeType1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FixedIncome_FixedIncomeType", "FixedIncome")]
        public EntityCollection<FixedIncome> FixedIncomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FixedIncome>("DeepBlueModel.FK_FixedIncome_FixedIncomeType", "FixedIncome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FixedIncome>("DeepBlueModel.FK_FixedIncome_FixedIncomeType", "FixedIncome", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Fund")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fund : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fund object.
        /// </summary>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        public static Fund CreateFund(global::System.Int32 fundID, global::System.Int32 entityID)
        {
            Fund fund = new Fund();
            fund.FundID = fundID;
            fund.EntityID = entityID;
            return fund;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                if (_FundID != value)
                {
                    OnFundIDChanging(value);
                    ReportPropertyChanging("FundID");
                    _FundID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundID");
                    OnFundIDChanged();
                }
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FundName
        {
            get
            {
                return _FundName;
            }
            set
            {
                OnFundNameChanging(value);
                ReportPropertyChanging("FundName");
                _FundName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FundName");
                OnFundNameChanged();
            }
        }
        private global::System.String _FundName;
        partial void OnFundNameChanging(global::System.String value);
        partial void OnFundNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxID
        {
            get
            {
                return _TaxID;
            }
            set
            {
                OnTaxIDChanging(value);
                ReportPropertyChanging("TaxID");
                _TaxID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxID");
                OnTaxIDChanged();
            }
        }
        private global::System.String _TaxID;
        partial void OnTaxIDChanging(global::System.String value);
        partial void OnTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InceptionDate
        {
            get
            {
                return _InceptionDate;
            }
            set
            {
                OnInceptionDateChanging(value);
                ReportPropertyChanging("InceptionDate");
                _InceptionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InceptionDate");
                OnInceptionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InceptionDate;
        partial void OnInceptionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInceptionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ScheduleTerminationDate
        {
            get
            {
                return _ScheduleTerminationDate;
            }
            set
            {
                OnScheduleTerminationDateChanging(value);
                ReportPropertyChanging("ScheduleTerminationDate");
                _ScheduleTerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleTerminationDate");
                OnScheduleTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ScheduleTerminationDate;
        partial void OnScheduleTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnScheduleTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinalTerminationDate
        {
            get
            {
                return _FinalTerminationDate;
            }
            set
            {
                OnFinalTerminationDateChanging(value);
                ReportPropertyChanging("FinalTerminationDate");
                _FinalTerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinalTerminationDate");
                OnFinalTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinalTerminationDate;
        partial void OnFinalTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFinalTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumofAutoExtensions
        {
            get
            {
                return _NumofAutoExtensions;
            }
            set
            {
                OnNumofAutoExtensionsChanging(value);
                ReportPropertyChanging("NumofAutoExtensions");
                _NumofAutoExtensions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumofAutoExtensions");
                OnNumofAutoExtensionsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumofAutoExtensions;
        partial void OnNumofAutoExtensionsChanging(Nullable<global::System.Int32> value);
        partial void OnNumofAutoExtensionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateClawbackTriggered
        {
            get
            {
                return _DateClawbackTriggered;
            }
            set
            {
                OnDateClawbackTriggeredChanging(value);
                ReportPropertyChanging("DateClawbackTriggered");
                _DateClawbackTriggered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateClawbackTriggered");
                OnDateClawbackTriggeredChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateClawbackTriggered;
        partial void OnDateClawbackTriggeredChanging(Nullable<global::System.DateTime> value);
        partial void OnDateClawbackTriggeredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RecycleProvision
        {
            get
            {
                return _RecycleProvision;
            }
            set
            {
                OnRecycleProvisionChanging(value);
                ReportPropertyChanging("RecycleProvision");
                _RecycleProvision = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecycleProvision");
                OnRecycleProvisionChanged();
            }
        }
        private Nullable<global::System.Int32> _RecycleProvision;
        partial void OnRecycleProvisionChanging(Nullable<global::System.Int32> value);
        partial void OnRecycleProvisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MgmtFeesCatchUpDate
        {
            get
            {
                return _MgmtFeesCatchUpDate;
            }
            set
            {
                OnMgmtFeesCatchUpDateChanging(value);
                ReportPropertyChanging("MgmtFeesCatchUpDate");
                _MgmtFeesCatchUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MgmtFeesCatchUpDate");
                OnMgmtFeesCatchUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MgmtFeesCatchUpDate;
        partial void OnMgmtFeesCatchUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMgmtFeesCatchUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Carry
        {
            get
            {
                return _Carry;
            }
            set
            {
                OnCarryChanging(value);
                ReportPropertyChanging("Carry");
                _Carry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Carry");
                OnCarryChanged();
            }
        }
        private Nullable<global::System.Int32> _Carry;
        partial void OnCarryChanging(Nullable<global::System.Int32> value);
        partial void OnCarryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalCall_Fund", "CapitalCall")]
        public EntityCollection<CapitalCall> CapitalCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapitalCall>("DeepBlueModel.FK_CapitalCall_Fund", "CapitalCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapitalCall>("DeepBlueModel.FK_CapitalCall_Fund", "CapitalCall", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalDistribution_Fund", "CapitalDistribution")]
        public EntityCollection<CapitalDistribution> CapitalDistributions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapitalDistribution>("DeepBlueModel.FK_CapitalDistribution_Fund", "CapitalDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapitalDistribution>("DeepBlueModel.FK_CapitalDistribution_Fund", "CapitalDistribution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_Fund", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("DeepBlueModel.FK_Deal_Fund", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("DeepBlueModel.FK_Deal_Fund", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundAccount_Fund", "FundAccount")]
        public EntityCollection<FundAccount> FundAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundAccount>("DeepBlueModel.FK_FundAccount_Fund", "FundAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundAccount>("DeepBlueModel.FK_FundAccount_Fund", "FundAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundActivityHistory_Fund", "FundActivityHistory")]
        public EntityCollection<FundActivityHistory> FundActivityHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundActivityHistory>("DeepBlueModel.FK_FundActivityHistory_Fund", "FundActivityHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundActivityHistory>("DeepBlueModel.FK_FundActivityHistory_Fund", "FundActivityHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundClosing_Fund", "FundClosing")]
        public EntityCollection<FundClosing> FundClosings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundClosing>("DeepBlueModel.FK_FundClosing_Fund", "FundClosing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundClosing>("DeepBlueModel.FK_FundClosing_Fund", "FundClosing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundExpense_Fund", "FundExpense")]
        public EntityCollection<FundExpense> FundExpenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundExpense>("DeepBlueModel.FK_FundExpense_Fund", "FundExpense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundExpense>("DeepBlueModel.FK_FundExpense_Fund", "FundExpense", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundRateSchedule_Fund", "FundRateSchedule")]
        public EntityCollection<FundRateSchedule> FundRateSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundRateSchedule>("DeepBlueModel.FK_FundRateSchedule_Fund", "FundRateSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundRateSchedule>("DeepBlueModel.FK_FundRateSchedule_Fund", "FundRateSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_Fund", "InvestorFund")]
        public EntityCollection<InvestorFund> InvestorFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_Fund", "InvestorFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_Fund", "InvestorFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_Fund", "InvestorFundDocument")]
        public EntityCollection<InvestorFundDocument> InvestorFundDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_Fund", "InvestorFundDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_Fund", "InvestorFundDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingDirectLastPrice_Fund", "UnderlyingDirectLastPrice")]
        public EntityCollection<UnderlyingDirectLastPrice> UnderlyingDirectLastPrices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingDirectLastPrice>("DeepBlueModel.FK_UnderlyingDirectLastPrice_Fund", "UnderlyingDirectLastPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingDirectLastPrice>("DeepBlueModel.FK_UnderlyingDirectLastPrice_Fund", "UnderlyingDirectLastPrice", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCall_Fund", "UnderlyingFundCapitalCall")]
        public EntityCollection<UnderlyingFundCapitalCall> UnderlyingFundCapitalCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundCapitalCall>("DeepBlueModel.FK_UnderlyingFundCapitalCall_Fund", "UnderlyingFundCapitalCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundCapitalCall>("DeepBlueModel.FK_UnderlyingFundCapitalCall_Fund", "UnderlyingFundCapitalCall", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCashDistribution_Fund", "UnderlyingFundCashDistribution")]
        public EntityCollection<UnderlyingFundCashDistribution> UnderlyingFundCashDistributions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundCashDistribution>("DeepBlueModel.FK_UnderlyingFundCashDistribution_Fund", "UnderlyingFundCashDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundCashDistribution>("DeepBlueModel.FK_UnderlyingFundCashDistribution_Fund", "UnderlyingFundCashDistribution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundNAV_Fund", "UnderlyingFundNAV")]
        public EntityCollection<UnderlyingFundNAV> UnderlyingFundNAVs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundNAV>("DeepBlueModel.FK_UnderlyingFundNAV_Fund", "UnderlyingFundNAV");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundNAV>("DeepBlueModel.FK_UnderlyingFundNAV_Fund", "UnderlyingFundNAV", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FundAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundAccount object.
        /// </summary>
        /// <param name="fundAccountID">Initial value of the FundAccountID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="accountNumberCash">Initial value of the AccountNumberCash property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static FundAccount CreateFundAccount(global::System.Int32 fundAccountID, global::System.Int32 fundID, global::System.Int32 entityID, global::System.String account, global::System.String accountNumberCash, global::System.Boolean isPrimary, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            FundAccount fundAccount = new FundAccount();
            fundAccount.FundAccountID = fundAccountID;
            fundAccount.FundID = fundID;
            fundAccount.EntityID = entityID;
            fundAccount.Account = account;
            fundAccount.AccountNumberCash = accountNumberCash;
            fundAccount.IsPrimary = isPrimary;
            fundAccount.CreatedDate = createdDate;
            fundAccount.CreatedBy = createdBy;
            return fundAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundAccountID
        {
            get
            {
                return _FundAccountID;
            }
            set
            {
                if (_FundAccountID != value)
                {
                    OnFundAccountIDChanging(value);
                    ReportPropertyChanging("FundAccountID");
                    _FundAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundAccountID");
                    OnFundAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _FundAccountID;
        partial void OnFundAccountIDChanging(global::System.Int32 value);
        partial void OnFundAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Routing
        {
            get
            {
                return _Routing;
            }
            set
            {
                OnRoutingChanging(value);
                ReportPropertyChanging("Routing");
                _Routing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Routing");
                OnRoutingChanged();
            }
        }
        private Nullable<global::System.Int32> _Routing;
        partial void OnRoutingChanging(Nullable<global::System.Int32> value);
        partial void OnRoutingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumberCash
        {
            get
            {
                return _AccountNumberCash;
            }
            set
            {
                OnAccountNumberCashChanging(value);
                ReportPropertyChanging("AccountNumberCash");
                _AccountNumberCash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNumberCash");
                OnAccountNumberCashChanged();
            }
        }
        private global::System.String _AccountNumberCash;
        partial void OnAccountNumberCashChanging(global::System.String value);
        partial void OnAccountNumberCashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SWIFT
        {
            get
            {
                return _SWIFT;
            }
            set
            {
                OnSWIFTChanging(value);
                ReportPropertyChanging("SWIFT");
                _SWIFT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SWIFT");
                OnSWIFTChanged();
            }
        }
        private global::System.String _SWIFT;
        partial void OnSWIFTChanging(global::System.String value);
        partial void OnSWIFTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountOf
        {
            get
            {
                return _AccountOf;
            }
            set
            {
                OnAccountOfChanging(value);
                ReportPropertyChanging("AccountOf");
                _AccountOf = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountOf");
                OnAccountOfChanged();
            }
        }
        private global::System.String _AccountOf;
        partial void OnAccountOfChanging(global::System.String value);
        partial void OnAccountOfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FFCNumber
        {
            get
            {
                return _FFCNumber;
            }
            set
            {
                OnFFCNumberChanging(value);
                ReportPropertyChanging("FFCNumber");
                _FFCNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FFCNumber");
                OnFFCNumberChanged();
            }
        }
        private global::System.String _FFCNumber;
        partial void OnFFCNumberChanging(global::System.String value);
        partial void OnFFCNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IBAN
        {
            get
            {
                return _IBAN;
            }
            set
            {
                OnIBANChanging(value);
                ReportPropertyChanging("IBAN");
                _IBAN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IBAN");
                OnIBANChanged();
            }
        }
        private global::System.String _IBAN;
        partial void OnIBANChanging(global::System.String value);
        partial void OnIBANChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attention
        {
            get
            {
                return _Attention;
            }
            set
            {
                OnAttentionChanging(value);
                ReportPropertyChanging("Attention");
                _Attention = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attention");
                OnAttentionChanged();
            }
        }
        private global::System.String _Attention;
        partial void OnAttentionChanging(global::System.String value);
        partial void OnAttentionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundAccount_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundAccount_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundAccount_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundAccount_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_FundAccount_Fund", "Fund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FundActivityHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundActivityHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundActivityHistory object.
        /// </summary>
        /// <param name="fundActivityHistoryID">Initial value of the FundActivityHistoryID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="oldNumberOfShares">Initial value of the OldNumberOfShares property.</param>
        /// <param name="newNumberOfShares">Initial value of the NewNumberOfShares property.</param>
        /// <param name="activityID">Initial value of the ActivityID property.</param>
        /// <param name="activityTypeID">Initial value of the ActivityTypeID property.</param>
        public static FundActivityHistory CreateFundActivityHistory(global::System.Int32 fundActivityHistoryID, global::System.Int32 fundID, global::System.Int32 oldNumberOfShares, global::System.Int32 newNumberOfShares, global::System.Int32 activityID, global::System.Int32 activityTypeID)
        {
            FundActivityHistory fundActivityHistory = new FundActivityHistory();
            fundActivityHistory.FundActivityHistoryID = fundActivityHistoryID;
            fundActivityHistory.FundID = fundID;
            fundActivityHistory.OldNumberOfShares = oldNumberOfShares;
            fundActivityHistory.NewNumberOfShares = newNumberOfShares;
            fundActivityHistory.ActivityID = activityID;
            fundActivityHistory.ActivityTypeID = activityTypeID;
            return fundActivityHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundActivityHistoryID
        {
            get
            {
                return _FundActivityHistoryID;
            }
            set
            {
                if (_FundActivityHistoryID != value)
                {
                    OnFundActivityHistoryIDChanging(value);
                    ReportPropertyChanging("FundActivityHistoryID");
                    _FundActivityHistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundActivityHistoryID");
                    OnFundActivityHistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _FundActivityHistoryID;
        partial void OnFundActivityHistoryIDChanging(global::System.Int32 value);
        partial void OnFundActivityHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldNumberOfShares
        {
            get
            {
                return _OldNumberOfShares;
            }
            set
            {
                OnOldNumberOfSharesChanging(value);
                ReportPropertyChanging("OldNumberOfShares");
                _OldNumberOfShares = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldNumberOfShares");
                OnOldNumberOfSharesChanged();
            }
        }
        private global::System.Int32 _OldNumberOfShares;
        partial void OnOldNumberOfSharesChanging(global::System.Int32 value);
        partial void OnOldNumberOfSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewNumberOfShares
        {
            get
            {
                return _NewNumberOfShares;
            }
            set
            {
                OnNewNumberOfSharesChanging(value);
                ReportPropertyChanging("NewNumberOfShares");
                _NewNumberOfShares = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewNumberOfShares");
                OnNewNumberOfSharesChanged();
            }
        }
        private global::System.Int32 _NewNumberOfShares;
        partial void OnNewNumberOfSharesChanging(global::System.Int32 value);
        partial void OnNewNumberOfSharesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityID
        {
            get
            {
                return _ActivityID;
            }
            set
            {
                OnActivityIDChanging(value);
                ReportPropertyChanging("ActivityID");
                _ActivityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityID");
                OnActivityIDChanged();
            }
        }
        private global::System.Int32 _ActivityID;
        partial void OnActivityIDChanging(global::System.Int32 value);
        partial void OnActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityTypeID
        {
            get
            {
                return _ActivityTypeID;
            }
            set
            {
                OnActivityTypeIDChanging(value);
                ReportPropertyChanging("ActivityTypeID");
                _ActivityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ActivityTypeID");
                OnActivityTypeIDChanged();
            }
        }
        private global::System.Int32 _ActivityTypeID;
        partial void OnActivityTypeIDChanging(global::System.Int32 value);
        partial void OnActivityTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundActivityHistory_ActivityType", "ActivityType")]
        public ActivityType ActivityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityType>("DeepBlueModel.FK_FundActivityHistory_ActivityType", "ActivityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityType>("DeepBlueModel.FK_FundActivityHistory_ActivityType", "ActivityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ActivityType> ActivityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ActivityType>("DeepBlueModel.FK_FundActivityHistory_ActivityType", "ActivityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ActivityType>("DeepBlueModel.FK_FundActivityHistory_ActivityType", "ActivityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundActivityHistory_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundActivityHistory_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundActivityHistory_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundActivityHistory_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_FundActivityHistory_Fund", "Fund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FundClosing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundClosing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundClosing object.
        /// </summary>
        /// <param name="fundClosingID">Initial value of the FundClosingID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="isFirstClosing">Initial value of the IsFirstClosing property.</param>
        public static FundClosing CreateFundClosing(global::System.Int32 fundClosingID, global::System.Int32 fundID, global::System.Boolean isFirstClosing)
        {
            FundClosing fundClosing = new FundClosing();
            fundClosing.FundClosingID = fundClosingID;
            fundClosing.FundID = fundID;
            fundClosing.IsFirstClosing = isFirstClosing;
            return fundClosing;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundClosingID
        {
            get
            {
                return _FundClosingID;
            }
            set
            {
                if (_FundClosingID != value)
                {
                    OnFundClosingIDChanging(value);
                    ReportPropertyChanging("FundClosingID");
                    _FundClosingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundClosingID");
                    OnFundClosingIDChanged();
                }
            }
        }
        private global::System.Int32 _FundClosingID;
        partial void OnFundClosingIDChanging(global::System.Int32 value);
        partial void OnFundClosingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FundClosingDate
        {
            get
            {
                return _FundClosingDate;
            }
            set
            {
                OnFundClosingDateChanging(value);
                ReportPropertyChanging("FundClosingDate");
                _FundClosingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundClosingDate");
                OnFundClosingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FundClosingDate;
        partial void OnFundClosingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFundClosingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFirstClosing
        {
            get
            {
                return _IsFirstClosing;
            }
            set
            {
                OnIsFirstClosingChanging(value);
                ReportPropertyChanging("IsFirstClosing");
                _IsFirstClosing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFirstClosing");
                OnIsFirstClosingChanged();
            }
        }
        private global::System.Boolean _IsFirstClosing;
        partial void OnIsFirstClosingChanging(global::System.Boolean value);
        partial void OnIsFirstClosingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundClosing_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundClosing_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundClosing_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundClosing_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_FundClosing_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_FundClosing", "InvestorFundTransaction")]
        public EntityCollection<InvestorFundTransaction> InvestorFundTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "InvestorFundTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "InvestorFundTransaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FundExpense")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundExpense : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundExpense object.
        /// </summary>
        /// <param name="fundExpenseID">Initial value of the FundExpenseID property.</param>
        /// <param name="fundExpenseTypeID">Initial value of the FundExpenseTypeID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static FundExpense CreateFundExpense(global::System.Int32 fundExpenseID, global::System.Int32 fundExpenseTypeID, global::System.Int32 fundID, global::System.Decimal amount)
        {
            FundExpense fundExpense = new FundExpense();
            fundExpense.FundExpenseID = fundExpenseID;
            fundExpense.FundExpenseTypeID = fundExpenseTypeID;
            fundExpense.FundID = fundID;
            fundExpense.Amount = amount;
            return fundExpense;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundExpenseID
        {
            get
            {
                return _FundExpenseID;
            }
            set
            {
                if (_FundExpenseID != value)
                {
                    OnFundExpenseIDChanging(value);
                    ReportPropertyChanging("FundExpenseID");
                    _FundExpenseID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundExpenseID");
                    OnFundExpenseIDChanged();
                }
            }
        }
        private global::System.Int32 _FundExpenseID;
        partial void OnFundExpenseIDChanging(global::System.Int32 value);
        partial void OnFundExpenseIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundExpenseTypeID
        {
            get
            {
                return _FundExpenseTypeID;
            }
            set
            {
                OnFundExpenseTypeIDChanging(value);
                ReportPropertyChanging("FundExpenseTypeID");
                _FundExpenseTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundExpenseTypeID");
                OnFundExpenseTypeIDChanged();
            }
        }
        private global::System.Int32 _FundExpenseTypeID;
        partial void OnFundExpenseTypeIDChanging(global::System.Int32 value);
        partial void OnFundExpenseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundExpense_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundExpense_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundExpense_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundExpense_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_FundExpense_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundExpense_FundExpenseType", "FundExpenseType")]
        public FundExpenseType FundExpenseType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundExpenseType>("DeepBlueModel.FK_FundExpense_FundExpenseType", "FundExpenseType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundExpenseType>("DeepBlueModel.FK_FundExpense_FundExpenseType", "FundExpenseType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundExpenseType> FundExpenseTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundExpenseType>("DeepBlueModel.FK_FundExpense_FundExpenseType", "FundExpenseType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundExpenseType>("DeepBlueModel.FK_FundExpense_FundExpenseType", "FundExpenseType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FundExpenseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundExpenseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundExpenseType object.
        /// </summary>
        /// <param name="fundExpenseTypeID">Initial value of the FundExpenseTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        public static FundExpenseType CreateFundExpenseType(global::System.Int32 fundExpenseTypeID, global::System.String name, global::System.Int32 entityID)
        {
            FundExpenseType fundExpenseType = new FundExpenseType();
            fundExpenseType.FundExpenseTypeID = fundExpenseTypeID;
            fundExpenseType.Name = name;
            fundExpenseType.EntityID = entityID;
            return fundExpenseType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundExpenseTypeID
        {
            get
            {
                return _FundExpenseTypeID;
            }
            set
            {
                if (_FundExpenseTypeID != value)
                {
                    OnFundExpenseTypeIDChanging(value);
                    ReportPropertyChanging("FundExpenseTypeID");
                    _FundExpenseTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundExpenseTypeID");
                    OnFundExpenseTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FundExpenseTypeID;
        partial void OnFundExpenseTypeIDChanging(global::System.Int32 value);
        partial void OnFundExpenseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundExpense_FundExpenseType", "FundExpense")]
        public EntityCollection<FundExpense> FundExpenses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundExpense>("DeepBlueModel.FK_FundExpense_FundExpenseType", "FundExpense");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundExpense>("DeepBlueModel.FK_FundExpense_FundExpenseType", "FundExpense", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FundRateSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundRateSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundRateSchedule object.
        /// </summary>
        /// <param name="fundRateScheduleID">Initial value of the FundRateScheduleID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="investorTypeID">Initial value of the InvestorTypeID property.</param>
        /// <param name="rateScheduleID">Initial value of the RateScheduleID property.</param>
        /// <param name="rateScheduleTypeID">Initial value of the RateScheduleTypeID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static FundRateSchedule CreateFundRateSchedule(global::System.Int32 fundRateScheduleID, global::System.Int32 fundID, global::System.Int32 investorTypeID, global::System.Int32 rateScheduleID, global::System.Int32 rateScheduleTypeID, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            FundRateSchedule fundRateSchedule = new FundRateSchedule();
            fundRateSchedule.FundRateScheduleID = fundRateScheduleID;
            fundRateSchedule.FundID = fundID;
            fundRateSchedule.InvestorTypeID = investorTypeID;
            fundRateSchedule.RateScheduleID = rateScheduleID;
            fundRateSchedule.RateScheduleTypeID = rateScheduleTypeID;
            fundRateSchedule.CreatedDate = createdDate;
            fundRateSchedule.CreatedBy = createdBy;
            return fundRateSchedule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundRateScheduleID
        {
            get
            {
                return _FundRateScheduleID;
            }
            set
            {
                if (_FundRateScheduleID != value)
                {
                    OnFundRateScheduleIDChanging(value);
                    ReportPropertyChanging("FundRateScheduleID");
                    _FundRateScheduleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundRateScheduleID");
                    OnFundRateScheduleIDChanged();
                }
            }
        }
        private global::System.Int32 _FundRateScheduleID;
        partial void OnFundRateScheduleIDChanging(global::System.Int32 value);
        partial void OnFundRateScheduleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorTypeID
        {
            get
            {
                return _InvestorTypeID;
            }
            set
            {
                OnInvestorTypeIDChanging(value);
                ReportPropertyChanging("InvestorTypeID");
                _InvestorTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorTypeID");
                OnInvestorTypeIDChanged();
            }
        }
        private global::System.Int32 _InvestorTypeID;
        partial void OnInvestorTypeIDChanging(global::System.Int32 value);
        partial void OnInvestorTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RateScheduleID
        {
            get
            {
                return _RateScheduleID;
            }
            set
            {
                OnRateScheduleIDChanging(value);
                ReportPropertyChanging("RateScheduleID");
                _RateScheduleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateScheduleID");
                OnRateScheduleIDChanged();
            }
        }
        private global::System.Int32 _RateScheduleID;
        partial void OnRateScheduleIDChanging(global::System.Int32 value);
        partial void OnRateScheduleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RateScheduleTypeID
        {
            get
            {
                return _RateScheduleTypeID;
            }
            set
            {
                OnRateScheduleTypeIDChanging(value);
                ReportPropertyChanging("RateScheduleTypeID");
                _RateScheduleTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateScheduleTypeID");
                OnRateScheduleTypeIDChanged();
            }
        }
        private global::System.Int32 _RateScheduleTypeID;
        partial void OnRateScheduleTypeIDChanging(global::System.Int32 value);
        partial void OnRateScheduleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundRateSchedule_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundRateSchedule_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundRateSchedule_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundRateSchedule_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_FundRateSchedule_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundRateSchedule_InvestorType", "InvestorType")]
        public InvestorType InvestorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_FundRateSchedule_InvestorType", "InvestorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_FundRateSchedule_InvestorType", "InvestorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvestorType> InvestorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_FundRateSchedule_InvestorType", "InvestorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvestorType>("DeepBlueModel.FK_FundRateSchedule_InvestorType", "InvestorType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Geography")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Geography : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Geography object.
        /// </summary>
        /// <param name="geographyID">Initial value of the GeographyID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Geography CreateGeography(global::System.Int32 geographyID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Geography geography = new Geography();
            geography.GeographyID = geographyID;
            geography.EntityID = entityID;
            geography.Enabled = enabled;
            geography.CreatedDate = createdDate;
            geography.CreatedBy = createdBy;
            return geography;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeographyID
        {
            get
            {
                return _GeographyID;
            }
            set
            {
                if (_GeographyID != value)
                {
                    OnGeographyIDChanging(value);
                    ReportPropertyChanging("GeographyID");
                    _GeographyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GeographyID");
                    OnGeographyIDChanged();
                }
            }
        }
        private global::System.Int32 _GeographyID;
        partial void OnGeographyIDChanging(global::System.Int32 value);
        partial void OnGeographyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Geography1
        {
            get
            {
                return _Geography1;
            }
            set
            {
                OnGeography1Changing(value);
                ReportPropertyChanging("Geography1");
                _Geography1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Geography1");
                OnGeography1Changed();
            }
        }
        private global::System.String _Geography1;
        partial void OnGeography1Changing(global::System.String value);
        partial void OnGeography1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_Geography", "UnderlyingFund")]
        public EntityCollection<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_Geography", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_Geography", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Industry")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Industry : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Industry object.
        /// </summary>
        /// <param name="industryID">Initial value of the IndustryID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Industry CreateIndustry(global::System.Int32 industryID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Industry industry = new Industry();
            industry.IndustryID = industryID;
            industry.EntityID = entityID;
            industry.Enabled = enabled;
            industry.CreatedDate = createdDate;
            industry.CreatedBy = createdBy;
            return industry;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IndustryID
        {
            get
            {
                return _IndustryID;
            }
            set
            {
                if (_IndustryID != value)
                {
                    OnIndustryIDChanging(value);
                    ReportPropertyChanging("IndustryID");
                    _IndustryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IndustryID");
                    OnIndustryIDChanged();
                }
            }
        }
        private global::System.Int32 _IndustryID;
        partial void OnIndustryIDChanging(global::System.Int32 value);
        partial void OnIndustryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Industry1
        {
            get
            {
                return _Industry1;
            }
            set
            {
                OnIndustry1Changing(value);
                ReportPropertyChanging("Industry1");
                _Industry1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Industry1");
                OnIndustry1Changed();
            }
        }
        private global::System.String _Industry1;
        partial void OnIndustry1Changing(global::System.String value);
        partial void OnIndustry1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Equity_Industry", "Equity")]
        public EntityCollection<Equity> Equities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equity>("DeepBlueModel.FK_Equity_Industry", "Equity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equity>("DeepBlueModel.FK_Equity_Industry", "Equity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FixedIncome_Industry", "FixedIncome")]
        public EntityCollection<FixedIncome> FixedIncomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FixedIncome>("DeepBlueModel.FK_FixedIncome_Industry", "FixedIncome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FixedIncome>("DeepBlueModel.FK_FixedIncome_Industry", "FixedIncome", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_Industry", "UnderlyingFund")]
        public EntityCollection<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_Industry", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_Industry", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestmentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestmentType object.
        /// </summary>
        /// <param name="investmentTypeID">Initial value of the InvestmentTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InvestmentType CreateInvestmentType(global::System.Int32 investmentTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            InvestmentType investmentType = new InvestmentType();
            investmentType.InvestmentTypeID = investmentTypeID;
            investmentType.EntityID = entityID;
            investmentType.Enabled = enabled;
            investmentType.CreatedDate = createdDate;
            investmentType.CreatedBy = createdBy;
            return investmentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestmentTypeID
        {
            get
            {
                return _InvestmentTypeID;
            }
            set
            {
                if (_InvestmentTypeID != value)
                {
                    OnInvestmentTypeIDChanging(value);
                    ReportPropertyChanging("InvestmentTypeID");
                    _InvestmentTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestmentTypeID");
                    OnInvestmentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestmentTypeID;
        partial void OnInvestmentTypeIDChanging(global::System.Int32 value);
        partial void OnInvestmentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Investment
        {
            get
            {
                return _Investment;
            }
            set
            {
                OnInvestmentChanging(value);
                ReportPropertyChanging("Investment");
                _Investment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Investment");
                OnInvestmentChanged();
            }
        }
        private global::System.String _Investment;
        partial void OnInvestmentChanging(global::System.String value);
        partial void OnInvestmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_InvestmentType", "UnderlyingFund")]
        public EntityCollection<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_InvestmentType", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_InvestmentType", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Investor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Investor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Investor object.
        /// </summary>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="investorEntityTypeID">Initial value of the InvestorEntityTypeID property.</param>
        /// <param name="social">Initial value of the Social property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="isDomestic">Initial value of the IsDomestic property.</param>
        /// <param name="taxExempt">Initial value of the TaxExempt property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Investor CreateInvestor(global::System.Int32 investorID, global::System.Int32 entityID, global::System.Int32 investorEntityTypeID, global::System.String social, global::System.String lastName, global::System.Boolean isDomestic, global::System.Boolean taxExempt, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Investor investor = new Investor();
            investor.InvestorID = investorID;
            investor.EntityID = entityID;
            investor.InvestorEntityTypeID = investorEntityTypeID;
            investor.Social = social;
            investor.LastName = lastName;
            investor.IsDomestic = isDomestic;
            investor.TaxExempt = taxExempt;
            investor.CreatedDate = createdDate;
            investor.CreatedBy = createdBy;
            return investor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                if (_InvestorID != value)
                {
                    OnInvestorIDChanging(value);
                    ReportPropertyChanging("InvestorID");
                    _InvestorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorID");
                    OnInvestorIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvestorName
        {
            get
            {
                return _InvestorName;
            }
            set
            {
                OnInvestorNameChanging(value);
                ReportPropertyChanging("InvestorName");
                _InvestorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvestorName");
                OnInvestorNameChanged();
            }
        }
        private global::System.String _InvestorName;
        partial void OnInvestorNameChanging(global::System.String value);
        partial void OnInvestorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorEntityTypeID
        {
            get
            {
                return _InvestorEntityTypeID;
            }
            set
            {
                OnInvestorEntityTypeIDChanging(value);
                ReportPropertyChanging("InvestorEntityTypeID");
                _InvestorEntityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorEntityTypeID");
                OnInvestorEntityTypeIDChanged();
            }
        }
        private global::System.Int32 _InvestorEntityTypeID;
        partial void OnInvestorEntityTypeIDChanging(global::System.Int32 value);
        partial void OnInvestorEntityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Social
        {
            get
            {
                return _Social;
            }
            set
            {
                OnSocialChanging(value);
                ReportPropertyChanging("Social");
                _Social = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Social");
                OnSocialChanged();
            }
        }
        private global::System.String _Social;
        partial void OnSocialChanging(global::System.String value);
        partial void OnSocialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxID
        {
            get
            {
                return _TaxID;
            }
            set
            {
                OnTaxIDChanging(value);
                ReportPropertyChanging("TaxID");
                _TaxID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxID");
                OnTaxIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxID;
        partial void OnTaxIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.String _Alias;
        partial void OnAliasChanging(global::System.String value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevInvestorID
        {
            get
            {
                return _PrevInvestorID;
            }
            set
            {
                OnPrevInvestorIDChanging(value);
                ReportPropertyChanging("PrevInvestorID");
                _PrevInvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevInvestorID");
                OnPrevInvestorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevInvestorID;
        partial void OnPrevInvestorIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrevInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManagerName
        {
            get
            {
                return _ManagerName;
            }
            set
            {
                OnManagerNameChanging(value);
                ReportPropertyChanging("ManagerName");
                _ManagerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManagerName");
                OnManagerNameChanged();
            }
        }
        private global::System.String _ManagerName;
        partial void OnManagerNameChanging(global::System.String value);
        partial void OnManagerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDomestic
        {
            get
            {
                return _IsDomestic;
            }
            set
            {
                OnIsDomesticChanging(value);
                ReportPropertyChanging("IsDomestic");
                _IsDomestic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDomestic");
                OnIsDomesticChanged();
            }
        }
        private global::System.Boolean _IsDomestic;
        partial void OnIsDomesticChanging(global::System.Boolean value);
        partial void OnIsDomesticChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TaxExempt
        {
            get
            {
                return _TaxExempt;
            }
            set
            {
                OnTaxExemptChanging(value);
                ReportPropertyChanging("TaxExempt");
                _TaxExempt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxExempt");
                OnTaxExemptChanged();
            }
        }
        private global::System.Boolean _TaxExempt;
        partial void OnTaxExemptChanging(global::System.Boolean value);
        partial void OnTaxExemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResidencyState
        {
            get
            {
                return _ResidencyState;
            }
            set
            {
                OnResidencyStateChanging(value);
                ReportPropertyChanging("ResidencyState");
                _ResidencyState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidencyState");
                OnResidencyStateChanged();
            }
        }
        private Nullable<global::System.Int32> _ResidencyState;
        partial void OnResidencyStateChanging(Nullable<global::System.Int32> value);
        partial void OnResidencyStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalCallLineItem_Investor", "CapitalCallLineItem")]
        public EntityCollection<CapitalCallLineItem> CapitalCallLineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapitalCallLineItem>("DeepBlueModel.FK_CapitalCallLineItem_Investor", "CapitalCallLineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapitalCallLineItem>("DeepBlueModel.FK_CapitalCallLineItem_Investor", "CapitalCallLineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalDistributionLineItem_Investor", "CapitalDistributionLineItem")]
        public EntityCollection<CapitalDistributionLineItem> CapitalDistributionLineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapitalDistributionLineItem>("DeepBlueModel.FK_CapitalDistributionLineItem_Investor", "CapitalDistributionLineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapitalDistributionLineItem>("DeepBlueModel.FK_CapitalDistributionLineItem_Investor", "CapitalDistributionLineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Investor_InvestorEntityType", "InvestorEntityType")]
        public InvestorEntityType InvestorEntityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorEntityType>("DeepBlueModel.FK_Investor_InvestorEntityType", "InvestorEntityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorEntityType>("DeepBlueModel.FK_Investor_InvestorEntityType", "InvestorEntityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvestorEntityType> InvestorEntityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorEntityType>("DeepBlueModel.FK_Investor_InvestorEntityType", "InvestorEntityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvestorEntityType>("DeepBlueModel.FK_Investor_InvestorEntityType", "InvestorEntityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Investor_ResidencyState", "STATE")]
        public STATE STATE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Investor_ResidencyState", "STATE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Investor_ResidencyState", "STATE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STATE> STATEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Investor_ResidencyState", "STATE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STATE>("DeepBlueModel.FK_Investor_ResidencyState", "STATE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAccount_Investor", "InvestorAccount")]
        public EntityCollection<InvestorAccount> InvestorAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorAccount>("DeepBlueModel.FK_InvestorAccount_Investor", "InvestorAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorAccount>("DeepBlueModel.FK_InvestorAccount_Investor", "InvestorAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAddress_Investor", "InvestorAddress")]
        public EntityCollection<InvestorAddress> InvestorAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorAddress>("DeepBlueModel.FK_InvestorAddress_Investor", "InvestorAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorAddress>("DeepBlueModel.FK_InvestorAddress_Investor", "InvestorAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorCommunication_Investor", "InvestorCommunication")]
        public EntityCollection<InvestorCommunication> InvestorCommunications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorCommunication>("DeepBlueModel.FK_InvestorCommunication_Investor", "InvestorCommunication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorCommunication>("DeepBlueModel.FK_InvestorCommunication_Investor", "InvestorCommunication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorContact_Investor", "InvestorContact")]
        public EntityCollection<InvestorContact> InvestorContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorContact>("DeepBlueModel.FK_InvestorContact_Investor", "InvestorContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorContact>("DeepBlueModel.FK_InvestorContact_Investor", "InvestorContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_Investor", "InvestorFund")]
        public EntityCollection<InvestorFund> InvestorFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_Investor", "InvestorFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_Investor", "InvestorFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_Investor", "InvestorFundDocument")]
        public EntityCollection<InvestorFundDocument> InvestorFundDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_Investor", "InvestorFundDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_Investor", "InvestorFundDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorAccount object.
        /// </summary>
        /// <param name="investorAccountID">Initial value of the InvestorAccountID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InvestorAccount CreateInvestorAccount(global::System.Int32 investorAccountID, global::System.Int32 investorID, global::System.Int32 entityID, global::System.String account, global::System.Boolean isPrimary, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            InvestorAccount investorAccount = new InvestorAccount();
            investorAccount.InvestorAccountID = investorAccountID;
            investorAccount.InvestorID = investorID;
            investorAccount.EntityID = entityID;
            investorAccount.Account = account;
            investorAccount.IsPrimary = isPrimary;
            investorAccount.CreatedDate = createdDate;
            investorAccount.CreatedBy = createdBy;
            return investorAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorAccountID
        {
            get
            {
                return _InvestorAccountID;
            }
            set
            {
                if (_InvestorAccountID != value)
                {
                    OnInvestorAccountIDChanging(value);
                    ReportPropertyChanging("InvestorAccountID");
                    _InvestorAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorAccountID");
                    OnInvestorAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorAccountID;
        partial void OnInvestorAccountIDChanging(global::System.Int32 value);
        partial void OnInvestorAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Routing
        {
            get
            {
                return _Routing;
            }
            set
            {
                OnRoutingChanging(value);
                ReportPropertyChanging("Routing");
                _Routing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Routing");
                OnRoutingChanged();
            }
        }
        private Nullable<global::System.Int32> _Routing;
        partial void OnRoutingChanging(Nullable<global::System.Int32> value);
        partial void OnRoutingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SWIFT
        {
            get
            {
                return _SWIFT;
            }
            set
            {
                OnSWIFTChanging(value);
                ReportPropertyChanging("SWIFT");
                _SWIFT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SWIFT");
                OnSWIFTChanged();
            }
        }
        private global::System.String _SWIFT;
        partial void OnSWIFTChanging(global::System.String value);
        partial void OnSWIFTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountOf
        {
            get
            {
                return _AccountOf;
            }
            set
            {
                OnAccountOfChanging(value);
                ReportPropertyChanging("AccountOf");
                _AccountOf = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountOf");
                OnAccountOfChanged();
            }
        }
        private global::System.String _AccountOf;
        partial void OnAccountOfChanging(global::System.String value);
        partial void OnAccountOfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FFC
        {
            get
            {
                return _FFC;
            }
            set
            {
                OnFFCChanging(value);
                ReportPropertyChanging("FFC");
                _FFC = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FFC");
                OnFFCChanged();
            }
        }
        private global::System.String _FFC;
        partial void OnFFCChanging(global::System.String value);
        partial void OnFFCChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FFCNumber
        {
            get
            {
                return _FFCNumber;
            }
            set
            {
                OnFFCNumberChanging(value);
                ReportPropertyChanging("FFCNumber");
                _FFCNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FFCNumber");
                OnFFCNumberChanged();
            }
        }
        private global::System.String _FFCNumber;
        partial void OnFFCNumberChanging(global::System.String value);
        partial void OnFFCNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IBAN
        {
            get
            {
                return _IBAN;
            }
            set
            {
                OnIBANChanging(value);
                ReportPropertyChanging("IBAN");
                _IBAN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IBAN");
                OnIBANChanged();
            }
        }
        private global::System.String _IBAN;
        partial void OnIBANChanging(global::System.String value);
        partial void OnIBANChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ByOrderOf
        {
            get
            {
                return _ByOrderOf;
            }
            set
            {
                OnByOrderOfChanging(value);
                ReportPropertyChanging("ByOrderOf");
                _ByOrderOf = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ByOrderOf");
                OnByOrderOfChanged();
            }
        }
        private global::System.String _ByOrderOf;
        partial void OnByOrderOfChanging(global::System.String value);
        partial void OnByOrderOfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attention
        {
            get
            {
                return _Attention;
            }
            set
            {
                OnAttentionChanging(value);
                ReportPropertyChanging("Attention");
                _Attention = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attention");
                OnAttentionChanged();
            }
        }
        private global::System.String _Attention;
        partial void OnAttentionChanging(global::System.String value);
        partial void OnAttentionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAccount_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAccount_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAccount_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAccount_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorAccount_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorAddress object.
        /// </summary>
        /// <param name="investorAddressID">Initial value of the InvestorAddressID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        public static InvestorAddress CreateInvestorAddress(global::System.Int32 investorAddressID, global::System.Int32 investorID, global::System.Int32 entityID, global::System.Int32 addressID)
        {
            InvestorAddress investorAddress = new InvestorAddress();
            investorAddress.InvestorAddressID = investorAddressID;
            investorAddress.InvestorID = investorID;
            investorAddress.EntityID = entityID;
            investorAddress.AddressID = addressID;
            return investorAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorAddressID
        {
            get
            {
                return _InvestorAddressID;
            }
            set
            {
                if (_InvestorAddressID != value)
                {
                    OnInvestorAddressIDChanging(value);
                    ReportPropertyChanging("InvestorAddressID");
                    _InvestorAddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorAddressID");
                    OnInvestorAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorAddressID;
        partial void OnInvestorAddressIDChanging(global::System.Int32 value);
        partial void OnInvestorAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAddress_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_InvestorAddress_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_InvestorAddress_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_InvestorAddress_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("DeepBlueModel.FK_InvestorAddress_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAddress_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAddress_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAddress_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAddress_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorAddress_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorCommunication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorCommunication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorCommunication object.
        /// </summary>
        /// <param name="investorCommunicationID">Initial value of the InvestorCommunicationID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="communicationID">Initial value of the CommunicationID property.</param>
        public static InvestorCommunication CreateInvestorCommunication(global::System.Int32 investorCommunicationID, global::System.Int32 investorID, global::System.Int32 entityID, global::System.Int32 communicationID)
        {
            InvestorCommunication investorCommunication = new InvestorCommunication();
            investorCommunication.InvestorCommunicationID = investorCommunicationID;
            investorCommunication.InvestorID = investorID;
            investorCommunication.EntityID = entityID;
            investorCommunication.CommunicationID = communicationID;
            return investorCommunication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorCommunicationID
        {
            get
            {
                return _InvestorCommunicationID;
            }
            set
            {
                if (_InvestorCommunicationID != value)
                {
                    OnInvestorCommunicationIDChanging(value);
                    ReportPropertyChanging("InvestorCommunicationID");
                    _InvestorCommunicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorCommunicationID");
                    OnInvestorCommunicationIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorCommunicationID;
        partial void OnInvestorCommunicationIDChanging(global::System.Int32 value);
        partial void OnInvestorCommunicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationID
        {
            get
            {
                return _CommunicationID;
            }
            set
            {
                OnCommunicationIDChanging(value);
                ReportPropertyChanging("CommunicationID");
                _CommunicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommunicationID");
                OnCommunicationIDChanged();
            }
        }
        private global::System.Int32 _CommunicationID;
        partial void OnCommunicationIDChanging(global::System.Int32 value);
        partial void OnCommunicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorCommunication_Communication", "Communication")]
        public Communication Communication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_InvestorCommunication_Communication", "Communication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_InvestorCommunication_Communication", "Communication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Communication> CommunicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_InvestorCommunication_Communication", "Communication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Communication>("DeepBlueModel.FK_InvestorCommunication_Communication", "Communication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorCommunication_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorCommunication_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorCommunication_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorCommunication_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorCommunication_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorContact object.
        /// </summary>
        /// <param name="investorContactID">Initial value of the InvestorContactID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static InvestorContact CreateInvestorContact(global::System.Int32 investorContactID, global::System.Int32 investorID, global::System.Int32 entityID, global::System.Int32 contactID)
        {
            InvestorContact investorContact = new InvestorContact();
            investorContact.InvestorContactID = investorContactID;
            investorContact.InvestorID = investorID;
            investorContact.EntityID = entityID;
            investorContact.ContactID = contactID;
            return investorContact;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorContactID
        {
            get
            {
                return _InvestorContactID;
            }
            set
            {
                if (_InvestorContactID != value)
                {
                    OnInvestorContactIDChanging(value);
                    ReportPropertyChanging("InvestorContactID");
                    _InvestorContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorContactID");
                    OnInvestorContactIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorContactID;
        partial void OnInvestorContactIDChanging(global::System.Int32 value);
        partial void OnInvestorContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorContact_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_InvestorContact_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_InvestorContact_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_InvestorContact_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DeepBlueModel.FK_InvestorContact_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorContact_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorContact_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorContact_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorContact_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorContact_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorEntityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorEntityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorEntityType object.
        /// </summary>
        /// <param name="investorEntityTypeID">Initial value of the InvestorEntityTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="investorEntityTypeName">Initial value of the InvestorEntityTypeName property.</param>
        public static InvestorEntityType CreateInvestorEntityType(global::System.Int32 investorEntityTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.String investorEntityTypeName)
        {
            InvestorEntityType investorEntityType = new InvestorEntityType();
            investorEntityType.InvestorEntityTypeID = investorEntityTypeID;
            investorEntityType.EntityID = entityID;
            investorEntityType.Enabled = enabled;
            investorEntityType.InvestorEntityTypeName = investorEntityTypeName;
            return investorEntityType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorEntityTypeID
        {
            get
            {
                return _InvestorEntityTypeID;
            }
            set
            {
                if (_InvestorEntityTypeID != value)
                {
                    OnInvestorEntityTypeIDChanging(value);
                    ReportPropertyChanging("InvestorEntityTypeID");
                    _InvestorEntityTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorEntityTypeID");
                    OnInvestorEntityTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorEntityTypeID;
        partial void OnInvestorEntityTypeIDChanging(global::System.Int32 value);
        partial void OnInvestorEntityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvestorEntityTypeName
        {
            get
            {
                return _InvestorEntityTypeName;
            }
            set
            {
                OnInvestorEntityTypeNameChanging(value);
                ReportPropertyChanging("InvestorEntityTypeName");
                _InvestorEntityTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvestorEntityTypeName");
                OnInvestorEntityTypeNameChanged();
            }
        }
        private global::System.String _InvestorEntityTypeName;
        partial void OnInvestorEntityTypeNameChanging(global::System.String value);
        partial void OnInvestorEntityTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Investor_InvestorEntityType", "Investor")]
        public EntityCollection<Investor> Investors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Investor>("DeepBlueModel.FK_Investor_InvestorEntityType", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Investor>("DeepBlueModel.FK_Investor_InvestorEntityType", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorFund")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorFund : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorFund object.
        /// </summary>
        /// <param name="investorFundID">Initial value of the InvestorFundID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="totalCommitment">Initial value of the TotalCommitment property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InvestorFund CreateInvestorFund(global::System.Int32 investorFundID, global::System.Int32 investorID, global::System.Int32 fundID, global::System.Decimal totalCommitment, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            InvestorFund investorFund = new InvestorFund();
            investorFund.InvestorFundID = investorFundID;
            investorFund.InvestorID = investorID;
            investorFund.FundID = fundID;
            investorFund.TotalCommitment = totalCommitment;
            investorFund.CreatedDate = createdDate;
            investorFund.CreatedBy = createdBy;
            return investorFund;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorFundID
        {
            get
            {
                return _InvestorFundID;
            }
            set
            {
                if (_InvestorFundID != value)
                {
                    OnInvestorFundIDChanging(value);
                    ReportPropertyChanging("InvestorFundID");
                    _InvestorFundID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorFundID");
                    OnInvestorFundIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorFundID;
        partial void OnInvestorFundIDChanging(global::System.Int32 value);
        partial void OnInvestorFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalCommitment
        {
            get
            {
                return _TotalCommitment;
            }
            set
            {
                OnTotalCommitmentChanging(value);
                ReportPropertyChanging("TotalCommitment");
                _TotalCommitment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCommitment");
                OnTotalCommitmentChanged();
            }
        }
        private global::System.Decimal _TotalCommitment;
        partial void OnTotalCommitmentChanging(global::System.Decimal value);
        partial void OnTotalCommitmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnfundedAmount
        {
            get
            {
                return _UnfundedAmount;
            }
            set
            {
                OnUnfundedAmountChanging(value);
                ReportPropertyChanging("UnfundedAmount");
                _UnfundedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnfundedAmount");
                OnUnfundedAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnfundedAmount;
        partial void OnUnfundedAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnUnfundedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvestorTypeId
        {
            get
            {
                return _InvestorTypeId;
            }
            set
            {
                OnInvestorTypeIdChanging(value);
                ReportPropertyChanging("InvestorTypeId");
                _InvestorTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorTypeId");
                OnInvestorTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _InvestorTypeId;
        partial void OnInvestorTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnInvestorTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFund_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFund_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFund_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_InvestorFund_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFund_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFund_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFund_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorFund_Investor", "Investor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_InvestorType", "InvestorType")]
        public InvestorType InvestorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvestorType> InvestorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvestorType>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_InvestorFund", "InvestorFundTransaction")]
        public EntityCollection<InvestorFundTransaction> InvestorFundTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFundTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFundTransaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorFundDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorFundDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorFundDocument object.
        /// </summary>
        /// <param name="investorFundDocumentID">Initial value of the InvestorFundDocumentID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="fileID">Initial value of the FileID property.</param>
        /// <param name="documentTypeID">Initial value of the DocumentTypeID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InvestorFundDocument CreateInvestorFundDocument(global::System.Int32 investorFundDocumentID, global::System.Int32 entityID, global::System.Int32 fileID, global::System.Int32 documentTypeID, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            InvestorFundDocument investorFundDocument = new InvestorFundDocument();
            investorFundDocument.InvestorFundDocumentID = investorFundDocumentID;
            investorFundDocument.EntityID = entityID;
            investorFundDocument.FileID = fileID;
            investorFundDocument.DocumentTypeID = documentTypeID;
            investorFundDocument.CreatedDate = createdDate;
            investorFundDocument.CreatedBy = createdBy;
            return investorFundDocument;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorFundDocumentID
        {
            get
            {
                return _InvestorFundDocumentID;
            }
            set
            {
                if (_InvestorFundDocumentID != value)
                {
                    OnInvestorFundDocumentIDChanging(value);
                    ReportPropertyChanging("InvestorFundDocumentID");
                    _InvestorFundDocumentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorFundDocumentID");
                    OnInvestorFundDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorFundDocumentID;
        partial void OnInvestorFundDocumentIDChanging(global::System.Int32 value);
        partial void OnInvestorFundDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvestorID;
        partial void OnInvestorIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FundID;
        partial void OnFundIDChanging(Nullable<global::System.Int32> value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.Int32 _FileID;
        partial void OnFileIDChanging(global::System.Int32 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeID
        {
            get
            {
                return _DocumentTypeID;
            }
            set
            {
                OnDocumentTypeIDChanging(value);
                ReportPropertyChanging("DocumentTypeID");
                _DocumentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentTypeID");
                OnDocumentTypeIDChanged();
            }
        }
        private global::System.Int32 _DocumentTypeID;
        partial void OnDocumentTypeIDChanging(global::System.Int32 value);
        partial void OnDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DocumentDate
        {
            get
            {
                return _DocumentDate;
            }
            set
            {
                OnDocumentDateChanging(value);
                ReportPropertyChanging("DocumentDate");
                _DocumentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentDate");
                OnDocumentDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DocumentDate;
        partial void OnDocumentDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDocumentDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_DocumentType", "DocumentType")]
        public DocumentType DocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "DocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "DocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentType> DocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentType>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "DocumentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_File", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DeepBlueModel.FK_InvestorFundDocument_File", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DeepBlueModel.FK_InvestorFundDocument_File", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DeepBlueModel.FK_InvestorFundDocument_File", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("DeepBlueModel.FK_InvestorFundDocument_File", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFundDocument_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFundDocument_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFundDocument_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_InvestorFundDocument_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFundDocument_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFundDocument_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFundDocument_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorFundDocument_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorFundTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorFundTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorFundTransaction object.
        /// </summary>
        /// <param name="investorFundTransactionID">Initial value of the InvestorFundTransactionID property.</param>
        /// <param name="investorFundID">Initial value of the InvestorFundID property.</param>
        /// <param name="transactionTypeID">Initial value of the TransactionTypeID property.</param>
        /// <param name="isAgreementSigned">Initial value of the IsAgreementSigned property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InvestorFundTransaction CreateInvestorFundTransaction(global::System.Int32 investorFundTransactionID, global::System.Int32 investorFundID, global::System.Int32 transactionTypeID, global::System.Boolean isAgreementSigned, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            InvestorFundTransaction investorFundTransaction = new InvestorFundTransaction();
            investorFundTransaction.InvestorFundTransactionID = investorFundTransactionID;
            investorFundTransaction.InvestorFundID = investorFundID;
            investorFundTransaction.TransactionTypeID = transactionTypeID;
            investorFundTransaction.IsAgreementSigned = isAgreementSigned;
            investorFundTransaction.CreatedDate = createdDate;
            investorFundTransaction.CreatedBy = createdBy;
            return investorFundTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorFundTransactionID
        {
            get
            {
                return _InvestorFundTransactionID;
            }
            set
            {
                if (_InvestorFundTransactionID != value)
                {
                    OnInvestorFundTransactionIDChanging(value);
                    ReportPropertyChanging("InvestorFundTransactionID");
                    _InvestorFundTransactionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorFundTransactionID");
                    OnInvestorFundTransactionIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorFundTransactionID;
        partial void OnInvestorFundTransactionIDChanging(global::System.Int32 value);
        partial void OnInvestorFundTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorFundID
        {
            get
            {
                return _InvestorFundID;
            }
            set
            {
                OnInvestorFundIDChanging(value);
                ReportPropertyChanging("InvestorFundID");
                _InvestorFundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorFundID");
                OnInvestorFundIDChanged();
            }
        }
        private global::System.Int32 _InvestorFundID;
        partial void OnInvestorFundIDChanging(global::System.Int32 value);
        partial void OnInvestorFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionTypeID
        {
            get
            {
                return _TransactionTypeID;
            }
            set
            {
                OnTransactionTypeIDChanging(value);
                ReportPropertyChanging("TransactionTypeID");
                _TransactionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionTypeID");
                OnTransactionTypeIDChanged();
            }
        }
        private global::System.Int32 _TransactionTypeID;
        partial void OnTransactionTypeIDChanging(global::System.Int32 value);
        partial void OnTransactionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAgreementSigned
        {
            get
            {
                return _IsAgreementSigned;
            }
            set
            {
                OnIsAgreementSignedChanging(value);
                ReportPropertyChanging("IsAgreementSigned");
                _IsAgreementSigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAgreementSigned");
                OnIsAgreementSignedChanged();
            }
        }
        private global::System.Boolean _IsAgreementSigned;
        partial void OnIsAgreementSignedChanging(global::System.Boolean value);
        partial void OnIsAgreementSignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FundClosingID
        {
            get
            {
                return _FundClosingID;
            }
            set
            {
                OnFundClosingIDChanging(value);
                ReportPropertyChanging("FundClosingID");
                _FundClosingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundClosingID");
                OnFundClosingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FundClosingID;
        partial void OnFundClosingIDChanging(Nullable<global::System.Int32> value);
        partial void OnFundClosingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OtherInvestorID
        {
            get
            {
                return _OtherInvestorID;
            }
            set
            {
                OnOtherInvestorIDChanging(value);
                ReportPropertyChanging("OtherInvestorID");
                _OtherInvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OtherInvestorID");
                OnOtherInvestorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OtherInvestorID;
        partial void OnOtherInvestorIDChanging(Nullable<global::System.Int32> value);
        partial void OnOtherInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CommittedDate
        {
            get
            {
                return _CommittedDate;
            }
            set
            {
                OnCommittedDateChanging(value);
                ReportPropertyChanging("CommittedDate");
                _CommittedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommittedDate");
                OnCommittedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CommittedDate;
        partial void OnCommittedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCommittedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_FundClosing", "FundClosing")]
        public FundClosing FundClosing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundClosing>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "FundClosing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundClosing>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "FundClosing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundClosing> FundClosingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundClosing>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "FundClosing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundClosing>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "FundClosing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_InvestorFund", "InvestorFund")]
        public InvestorFund InvestorFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorFund>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorFund>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvestorFund> InvestorFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorFund>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvestorFund>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_TransactionType", "TransactionType")]
        public TransactionType TransactionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "TransactionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "TransactionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionType> TransactionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "TransactionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionType>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "TransactionType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorType object.
        /// </summary>
        /// <param name="investorTypeID">Initial value of the InvestorTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="investorTypeName">Initial value of the InvestorTypeName property.</param>
        public static InvestorType CreateInvestorType(global::System.Int32 investorTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.String investorTypeName)
        {
            InvestorType investorType = new InvestorType();
            investorType.InvestorTypeID = investorTypeID;
            investorType.EntityID = entityID;
            investorType.Enabled = enabled;
            investorType.InvestorTypeName = investorTypeName;
            return investorType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorTypeID
        {
            get
            {
                return _InvestorTypeID;
            }
            set
            {
                if (_InvestorTypeID != value)
                {
                    OnInvestorTypeIDChanging(value);
                    ReportPropertyChanging("InvestorTypeID");
                    _InvestorTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorTypeID");
                    OnInvestorTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorTypeID;
        partial void OnInvestorTypeIDChanging(global::System.Int32 value);
        partial void OnInvestorTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvestorTypeName
        {
            get
            {
                return _InvestorTypeName;
            }
            set
            {
                OnInvestorTypeNameChanging(value);
                ReportPropertyChanging("InvestorTypeName");
                _InvestorTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvestorTypeName");
                OnInvestorTypeNameChanged();
            }
        }
        private global::System.String _InvestorTypeName;
        partial void OnInvestorTypeNameChanging(global::System.String value);
        partial void OnInvestorTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CapitalDistributionProfit_InvestorType", "CapitalDistributionProfit")]
        public EntityCollection<CapitalDistributionProfit> CapitalDistributionProfits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CapitalDistributionProfit>("DeepBlueModel.FK_CapitalDistributionProfit_InvestorType", "CapitalDistributionProfit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CapitalDistributionProfit>("DeepBlueModel.FK_CapitalDistributionProfit_InvestorType", "CapitalDistributionProfit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundRateSchedule_InvestorType", "FundRateSchedule")]
        public EntityCollection<FundRateSchedule> FundRateSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundRateSchedule>("DeepBlueModel.FK_FundRateSchedule_InvestorType", "FundRateSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundRateSchedule>("DeepBlueModel.FK_FundRateSchedule_InvestorType", "FundRateSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_InvestorType", "InvestorFund")]
        public EntityCollection<InvestorFund> InvestorFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Issuer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Issuer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Issuer object.
        /// </summary>
        /// <param name="issuerID">Initial value of the IssuerID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Issuer CreateIssuer(global::System.Int32 issuerID, global::System.Int32 entityID, global::System.String name)
        {
            Issuer issuer = new Issuer();
            issuer.IssuerID = issuerID;
            issuer.EntityID = entityID;
            issuer.Name = name;
            return issuer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssuerID
        {
            get
            {
                return _IssuerID;
            }
            set
            {
                if (_IssuerID != value)
                {
                    OnIssuerIDChanging(value);
                    ReportPropertyChanging("IssuerID");
                    _IssuerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IssuerID");
                    OnIssuerIDChanged();
                }
            }
        }
        private global::System.Int32 _IssuerID;
        partial void OnIssuerIDChanging(global::System.Int32 value);
        partial void OnIssuerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ParentName
        {
            get
            {
                return _ParentName;
            }
            set
            {
                OnParentNameChanging(value);
                ReportPropertyChanging("ParentName");
                _ParentName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ParentName");
                OnParentNameChanged();
            }
        }
        private global::System.String _ParentName;
        partial void OnParentNameChanging(global::System.String value);
        partial void OnParentNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                OnCountryIDChanging(value);
                ReportPropertyChanging("CountryID");
                _CountryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CountryID");
                OnCountryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CountryID;
        partial void OnCountryIDChanging(Nullable<global::System.Int32> value);
        partial void OnCountryIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Equity_Issuer", "Equity")]
        public EntityCollection<Equity> Equities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equity>("DeepBlueModel.FK_Equity_Issuer", "Equity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equity>("DeepBlueModel.FK_Equity_Issuer", "Equity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FixedIncome_Issuer", "FixedIncome")]
        public EntityCollection<FixedIncome> FixedIncomes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FixedIncome>("DeepBlueModel.FK_FixedIncome_Issuer", "FixedIncome");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FixedIncome>("DeepBlueModel.FK_FixedIncome_Issuer", "FixedIncome", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_Issuer", "UnderlyingFund")]
        public EntityCollection<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_Issuer", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_Issuer", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="ManagementFeeRateSchedule")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagementFeeRateSchedule : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagementFeeRateSchedule object.
        /// </summary>
        /// <param name="managementFeeRateScheduleID">Initial value of the ManagementFeeRateScheduleID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="rateScheduleTypeID">Initial value of the RateScheduleTypeID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static ManagementFeeRateSchedule CreateManagementFeeRateSchedule(global::System.Int32 managementFeeRateScheduleID, global::System.Int32 entityID, global::System.Int32 rateScheduleTypeID, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            ManagementFeeRateSchedule managementFeeRateSchedule = new ManagementFeeRateSchedule();
            managementFeeRateSchedule.ManagementFeeRateScheduleID = managementFeeRateScheduleID;
            managementFeeRateSchedule.EntityID = entityID;
            managementFeeRateSchedule.RateScheduleTypeID = rateScheduleTypeID;
            managementFeeRateSchedule.CreatedDate = createdDate;
            managementFeeRateSchedule.CreatedBy = createdBy;
            return managementFeeRateSchedule;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementFeeRateScheduleID
        {
            get
            {
                return _ManagementFeeRateScheduleID;
            }
            set
            {
                if (_ManagementFeeRateScheduleID != value)
                {
                    OnManagementFeeRateScheduleIDChanging(value);
                    ReportPropertyChanging("ManagementFeeRateScheduleID");
                    _ManagementFeeRateScheduleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ManagementFeeRateScheduleID");
                    OnManagementFeeRateScheduleIDChanged();
                }
            }
        }
        private global::System.Int32 _ManagementFeeRateScheduleID;
        partial void OnManagementFeeRateScheduleIDChanging(global::System.Int32 value);
        partial void OnManagementFeeRateScheduleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RateScheduleTypeID
        {
            get
            {
                return _RateScheduleTypeID;
            }
            set
            {
                OnRateScheduleTypeIDChanging(value);
                ReportPropertyChanging("RateScheduleTypeID");
                _RateScheduleTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RateScheduleTypeID");
                OnRateScheduleTypeIDChanged();
            }
        }
        private global::System.Int32 _RateScheduleTypeID;
        partial void OnRateScheduleTypeIDChanging(global::System.Int32 value);
        partial void OnRateScheduleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CalculationFormatString
        {
            get
            {
                return _CalculationFormatString;
            }
            set
            {
                OnCalculationFormatStringChanging(value);
                ReportPropertyChanging("CalculationFormatString");
                _CalculationFormatString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CalculationFormatString");
                OnCalculationFormatStringChanged();
            }
        }
        private global::System.String _CalculationFormatString;
        partial void OnCalculationFormatStringChanging(global::System.String value);
        partial void OnCalculationFormatStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ManagementFeeRateSchedule_RateScheduleType", "RateScheduleType")]
        public RateScheduleType RateScheduleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RateScheduleType>("DeepBlueModel.FK_ManagementFeeRateSchedule_RateScheduleType", "RateScheduleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RateScheduleType>("DeepBlueModel.FK_ManagementFeeRateSchedule_RateScheduleType", "RateScheduleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RateScheduleType> RateScheduleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RateScheduleType>("DeepBlueModel.FK_ManagementFeeRateSchedule_RateScheduleType", "RateScheduleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RateScheduleType>("DeepBlueModel.FK_ManagementFeeRateSchedule_RateScheduleType", "RateScheduleType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ManagementFeeRateScheduleTier_ManagementFeeRateSchedule", "ManagementFeeRateScheduleTier")]
        public EntityCollection<ManagementFeeRateScheduleTier> ManagementFeeRateScheduleTiers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementFeeRateScheduleTier>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_ManagementFeeRateSchedule", "ManagementFeeRateScheduleTier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementFeeRateScheduleTier>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_ManagementFeeRateSchedule", "ManagementFeeRateScheduleTier", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="ManagementFeeRateScheduleTier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ManagementFeeRateScheduleTier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ManagementFeeRateScheduleTier object.
        /// </summary>
        /// <param name="managementFeeRateScheduleTierID">Initial value of the ManagementFeeRateScheduleTierID property.</param>
        /// <param name="managementFeeRateScheduleID">Initial value of the ManagementFeeRateScheduleID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="multiplier">Initial value of the Multiplier property.</param>
        /// <param name="multiplierTypeID">Initial value of the MultiplierTypeID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static ManagementFeeRateScheduleTier CreateManagementFeeRateScheduleTier(global::System.Int32 managementFeeRateScheduleTierID, global::System.Int32 managementFeeRateScheduleID, global::System.DateTime startDate, global::System.DateTime endDate, global::System.Decimal multiplier, global::System.Int32 multiplierTypeID, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            ManagementFeeRateScheduleTier managementFeeRateScheduleTier = new ManagementFeeRateScheduleTier();
            managementFeeRateScheduleTier.ManagementFeeRateScheduleTierID = managementFeeRateScheduleTierID;
            managementFeeRateScheduleTier.ManagementFeeRateScheduleID = managementFeeRateScheduleID;
            managementFeeRateScheduleTier.StartDate = startDate;
            managementFeeRateScheduleTier.EndDate = endDate;
            managementFeeRateScheduleTier.Multiplier = multiplier;
            managementFeeRateScheduleTier.MultiplierTypeID = multiplierTypeID;
            managementFeeRateScheduleTier.CreatedDate = createdDate;
            managementFeeRateScheduleTier.CreatedBy = createdBy;
            return managementFeeRateScheduleTier;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementFeeRateScheduleTierID
        {
            get
            {
                return _ManagementFeeRateScheduleTierID;
            }
            set
            {
                if (_ManagementFeeRateScheduleTierID != value)
                {
                    OnManagementFeeRateScheduleTierIDChanging(value);
                    ReportPropertyChanging("ManagementFeeRateScheduleTierID");
                    _ManagementFeeRateScheduleTierID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ManagementFeeRateScheduleTierID");
                    OnManagementFeeRateScheduleTierIDChanged();
                }
            }
        }
        private global::System.Int32 _ManagementFeeRateScheduleTierID;
        partial void OnManagementFeeRateScheduleTierIDChanging(global::System.Int32 value);
        partial void OnManagementFeeRateScheduleTierIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ManagementFeeRateScheduleID
        {
            get
            {
                return _ManagementFeeRateScheduleID;
            }
            set
            {
                OnManagementFeeRateScheduleIDChanging(value);
                ReportPropertyChanging("ManagementFeeRateScheduleID");
                _ManagementFeeRateScheduleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagementFeeRateScheduleID");
                OnManagementFeeRateScheduleIDChanged();
            }
        }
        private global::System.Int32 _ManagementFeeRateScheduleID;
        partial void OnManagementFeeRateScheduleIDChanging(global::System.Int32 value);
        partial void OnManagementFeeRateScheduleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Multiplier
        {
            get
            {
                return _Multiplier;
            }
            set
            {
                OnMultiplierChanging(value);
                ReportPropertyChanging("Multiplier");
                _Multiplier = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Multiplier");
                OnMultiplierChanged();
            }
        }
        private global::System.Decimal _Multiplier;
        partial void OnMultiplierChanging(global::System.Decimal value);
        partial void OnMultiplierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MultiplierTypeID
        {
            get
            {
                return _MultiplierTypeID;
            }
            set
            {
                OnMultiplierTypeIDChanging(value);
                ReportPropertyChanging("MultiplierTypeID");
                _MultiplierTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MultiplierTypeID");
                OnMultiplierTypeIDChanged();
            }
        }
        private global::System.Int32 _MultiplierTypeID;
        partial void OnMultiplierTypeIDChanging(global::System.Int32 value);
        partial void OnMultiplierTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ManagementFeeRateScheduleTier_ManagementFeeRateSchedule", "ManagementFeeRateSchedule")]
        public ManagementFeeRateSchedule ManagementFeeRateSchedule
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementFeeRateSchedule>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_ManagementFeeRateSchedule", "ManagementFeeRateSchedule").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementFeeRateSchedule>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_ManagementFeeRateSchedule", "ManagementFeeRateSchedule").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ManagementFeeRateSchedule> ManagementFeeRateScheduleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ManagementFeeRateSchedule>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_ManagementFeeRateSchedule", "ManagementFeeRateSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ManagementFeeRateSchedule>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_ManagementFeeRateSchedule", "ManagementFeeRateSchedule", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ManagementFeeRateScheduleTier_MultiplierType", "MultiplierType")]
        public MultiplierType MultiplierType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MultiplierType>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_MultiplierType", "MultiplierType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MultiplierType>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_MultiplierType", "MultiplierType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MultiplierType> MultiplierTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MultiplierType>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_MultiplierType", "MultiplierType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MultiplierType>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_MultiplierType", "MultiplierType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="MODULE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MODULE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MODULE object.
        /// </summary>
        /// <param name="moduleID">Initial value of the ModuleID property.</param>
        /// <param name="moduleName">Initial value of the ModuleName property.</param>
        public static MODULE CreateMODULE(global::System.Int32 moduleID, global::System.String moduleName)
        {
            MODULE mODULE = new MODULE();
            mODULE.ModuleID = moduleID;
            mODULE.ModuleName = moduleName;
            return mODULE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ModuleID
        {
            get
            {
                return _ModuleID;
            }
            set
            {
                if (_ModuleID != value)
                {
                    OnModuleIDChanging(value);
                    ReportPropertyChanging("ModuleID");
                    _ModuleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ModuleID");
                    OnModuleIDChanged();
                }
            }
        }
        private global::System.Int32 _ModuleID;
        partial void OnModuleIDChanging(global::System.Int32 value);
        partial void OnModuleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleName
        {
            get
            {
                return _ModuleName;
            }
            set
            {
                OnModuleNameChanging(value);
                ReportPropertyChanging("ModuleName");
                _ModuleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModuleName");
                OnModuleNameChanged();
            }
        }
        private global::System.String _ModuleName;
        partial void OnModuleNameChanging(global::System.String value);
        partial void OnModuleNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Module_CustomField", "CustomField")]
        public EntityCollection<CustomField> CustomFields
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomField>("DeepBlueModel.FK_Module_CustomField", "CustomField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomField>("DeepBlueModel.FK_Module_CustomField", "CustomField", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="MultiplierType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MultiplierType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MultiplierType object.
        /// </summary>
        /// <param name="multiplierTypeID">Initial value of the MultiplierTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static MultiplierType CreateMultiplierType(global::System.Int32 multiplierTypeID, global::System.String name)
        {
            MultiplierType multiplierType = new MultiplierType();
            multiplierType.MultiplierTypeID = multiplierTypeID;
            multiplierType.Name = name;
            return multiplierType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MultiplierTypeID
        {
            get
            {
                return _MultiplierTypeID;
            }
            set
            {
                if (_MultiplierTypeID != value)
                {
                    OnMultiplierTypeIDChanging(value);
                    ReportPropertyChanging("MultiplierTypeID");
                    _MultiplierTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("MultiplierTypeID");
                    OnMultiplierTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MultiplierTypeID;
        partial void OnMultiplierTypeIDChanging(global::System.Int32 value);
        partial void OnMultiplierTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ManagementFeeRateScheduleTier_MultiplierType", "ManagementFeeRateScheduleTier")]
        public EntityCollection<ManagementFeeRateScheduleTier> ManagementFeeRateScheduleTiers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementFeeRateScheduleTier>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_MultiplierType", "ManagementFeeRateScheduleTier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementFeeRateScheduleTier>("DeepBlueModel.FK_ManagementFeeRateScheduleTier_MultiplierType", "ManagementFeeRateScheduleTier", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="OptionField")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OptionField : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OptionField object.
        /// </summary>
        /// <param name="optionFieldID">Initial value of the OptionFieldID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="customFieldID">Initial value of the CustomFieldID property.</param>
        /// <param name="optionText">Initial value of the OptionText property.</param>
        /// <param name="isDefault">Initial value of the IsDefault property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static OptionField CreateOptionField(global::System.Int32 optionFieldID, global::System.Int32 entityID, global::System.Int32 customFieldID, global::System.String optionText, global::System.Boolean isDefault, global::System.Int32 sortOrder)
        {
            OptionField optionField = new OptionField();
            optionField.OptionFieldID = optionFieldID;
            optionField.EntityID = entityID;
            optionField.CustomFieldID = customFieldID;
            optionField.OptionText = optionText;
            optionField.IsDefault = isDefault;
            optionField.SortOrder = sortOrder;
            return optionField;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionFieldID
        {
            get
            {
                return _OptionFieldID;
            }
            set
            {
                if (_OptionFieldID != value)
                {
                    OnOptionFieldIDChanging(value);
                    ReportPropertyChanging("OptionFieldID");
                    _OptionFieldID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OptionFieldID");
                    OnOptionFieldIDChanged();
                }
            }
        }
        private global::System.Int32 _OptionFieldID;
        partial void OnOptionFieldIDChanging(global::System.Int32 value);
        partial void OnOptionFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomFieldID
        {
            get
            {
                return _CustomFieldID;
            }
            set
            {
                OnCustomFieldIDChanging(value);
                ReportPropertyChanging("CustomFieldID");
                _CustomFieldID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomFieldID");
                OnCustomFieldIDChanged();
            }
        }
        private global::System.Int32 _CustomFieldID;
        partial void OnCustomFieldIDChanging(global::System.Int32 value);
        partial void OnCustomFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OptionText
        {
            get
            {
                return _OptionText;
            }
            set
            {
                OnOptionTextChanging(value);
                ReportPropertyChanging("OptionText");
                _OptionText = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OptionText");
                OnOptionTextChanged();
            }
        }
        private global::System.String _OptionText;
        partial void OnOptionTextChanging(global::System.String value);
        partial void OnOptionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefault
        {
            get
            {
                return _IsDefault;
            }
            set
            {
                OnIsDefaultChanging(value);
                ReportPropertyChanging("IsDefault");
                _IsDefault = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDefault");
                OnIsDefaultChanged();
            }
        }
        private global::System.Boolean _IsDefault;
        partial void OnIsDefaultChanging(global::System.Boolean value);
        partial void OnIsDefaultChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CustomField_OptionField", "CustomField")]
        public CustomField CustomField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("DeepBlueModel.FK_CustomField_OptionField", "CustomField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("DeepBlueModel.FK_CustomField_OptionField", "CustomField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomField> CustomFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("DeepBlueModel.FK_CustomField_OptionField", "CustomField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomField>("DeepBlueModel.FK_CustomField_OptionField", "CustomField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_OptionFieldValueList_OptionField", "OptionFieldValueList")]
        public EntityCollection<OptionFieldValueList> OptionFieldValueLists
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OptionFieldValueList>("DeepBlueModel.FK_OptionFieldValueList_OptionField", "OptionFieldValueList");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OptionFieldValueList>("DeepBlueModel.FK_OptionFieldValueList_OptionField", "OptionFieldValueList", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="OptionFieldValueList")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OptionFieldValueList : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OptionFieldValueList object.
        /// </summary>
        /// <param name="optionFieldValueListID">Initial value of the OptionFieldValueListID property.</param>
        /// <param name="optionFieldID">Initial value of the OptionFieldID property.</param>
        /// <param name="customFieldID">Initial value of the CustomFieldID property.</param>
        public static OptionFieldValueList CreateOptionFieldValueList(global::System.Int32 optionFieldValueListID, global::System.Int32 optionFieldID, global::System.Int32 customFieldID)
        {
            OptionFieldValueList optionFieldValueList = new OptionFieldValueList();
            optionFieldValueList.OptionFieldValueListID = optionFieldValueListID;
            optionFieldValueList.OptionFieldID = optionFieldID;
            optionFieldValueList.CustomFieldID = customFieldID;
            return optionFieldValueList;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionFieldValueListID
        {
            get
            {
                return _OptionFieldValueListID;
            }
            set
            {
                if (_OptionFieldValueListID != value)
                {
                    OnOptionFieldValueListIDChanging(value);
                    ReportPropertyChanging("OptionFieldValueListID");
                    _OptionFieldValueListID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OptionFieldValueListID");
                    OnOptionFieldValueListIDChanged();
                }
            }
        }
        private global::System.Int32 _OptionFieldValueListID;
        partial void OnOptionFieldValueListIDChanging(global::System.Int32 value);
        partial void OnOptionFieldValueListIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OptionFieldID
        {
            get
            {
                return _OptionFieldID;
            }
            set
            {
                OnOptionFieldIDChanging(value);
                ReportPropertyChanging("OptionFieldID");
                _OptionFieldID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionFieldID");
                OnOptionFieldIDChanged();
            }
        }
        private global::System.Int32 _OptionFieldID;
        partial void OnOptionFieldIDChanging(global::System.Int32 value);
        partial void OnOptionFieldIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomFieldID
        {
            get
            {
                return _CustomFieldID;
            }
            set
            {
                OnCustomFieldIDChanging(value);
                ReportPropertyChanging("CustomFieldID");
                _CustomFieldID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomFieldID");
                OnCustomFieldIDChanged();
            }
        }
        private global::System.Int32 _CustomFieldID;
        partial void OnCustomFieldIDChanging(global::System.Int32 value);
        partial void OnCustomFieldIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_OptionFieldValueList_CustomField", "CustomField")]
        public CustomField CustomField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("DeepBlueModel.FK_OptionFieldValueList_CustomField", "CustomField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("DeepBlueModel.FK_OptionFieldValueList_CustomField", "CustomField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomField> CustomFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomField>("DeepBlueModel.FK_OptionFieldValueList_CustomField", "CustomField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomField>("DeepBlueModel.FK_OptionFieldValueList_CustomField", "CustomField", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_OptionFieldValueList_OptionField", "OptionField")]
        public OptionField OptionField
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionField>("DeepBlueModel.FK_OptionFieldValueList_OptionField", "OptionField").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionField>("DeepBlueModel.FK_OptionFieldValueList_OptionField", "OptionField").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OptionField> OptionFieldReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OptionField>("DeepBlueModel.FK_OptionFieldValueList_OptionField", "OptionField");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OptionField>("DeepBlueModel.FK_OptionFieldValueList_OptionField", "OptionField", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Partner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Partner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Partner object.
        /// </summary>
        /// <param name="partnerID">Initial value of the PartnerID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Partner CreatePartner(global::System.Int32 partnerID, global::System.Int32 entityID, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Partner partner = new Partner();
            partner.PartnerID = partnerID;
            partner.EntityID = entityID;
            partner.CreatedDate = createdDate;
            partner.CreatedBy = createdBy;
            return partner;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PartnerID
        {
            get
            {
                return _PartnerID;
            }
            set
            {
                if (_PartnerID != value)
                {
                    OnPartnerIDChanging(value);
                    ReportPropertyChanging("PartnerID");
                    _PartnerID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PartnerID");
                    OnPartnerIDChanged();
                }
            }
        }
        private global::System.Int32 _PartnerID;
        partial void OnPartnerIDChanging(global::System.Int32 value);
        partial void OnPartnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PartnerName
        {
            get
            {
                return _PartnerName;
            }
            set
            {
                OnPartnerNameChanging(value);
                ReportPropertyChanging("PartnerName");
                _PartnerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PartnerName");
                OnPartnerNameChanged();
            }
        }
        private global::System.String _PartnerName;
        partial void OnPartnerNameChanging(global::System.String value);
        partial void OnPartnerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_Partner", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("DeepBlueModel.FK_Deal_Partner", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("DeepBlueModel.FK_Deal_Partner", "Deal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="PurchaseType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PurchaseType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PurchaseType object.
        /// </summary>
        /// <param name="purchaseTypeID">Initial value of the PurchaseTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        public static PurchaseType CreatePurchaseType(global::System.Int32 purchaseTypeID, global::System.String name, global::System.Int32 entityID)
        {
            PurchaseType purchaseType = new PurchaseType();
            purchaseType.PurchaseTypeID = purchaseTypeID;
            purchaseType.Name = name;
            purchaseType.EntityID = entityID;
            return purchaseType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PurchaseTypeID
        {
            get
            {
                return _PurchaseTypeID;
            }
            set
            {
                if (_PurchaseTypeID != value)
                {
                    OnPurchaseTypeIDChanging(value);
                    ReportPropertyChanging("PurchaseTypeID");
                    _PurchaseTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PurchaseTypeID");
                    OnPurchaseTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PurchaseTypeID;
        partial void OnPurchaseTypeIDChanging(global::System.Int32 value);
        partial void OnPurchaseTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Deal_PurchaseType", "Deal")]
        public EntityCollection<Deal> Deals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("DeepBlueModel.FK_Deal_PurchaseType", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("DeepBlueModel.FK_Deal_PurchaseType", "Deal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="RateScheduleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RateScheduleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RateScheduleType object.
        /// </summary>
        /// <param name="rateScheduleTypeID">Initial value of the RateScheduleTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static RateScheduleType CreateRateScheduleType(global::System.Int32 rateScheduleTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            RateScheduleType rateScheduleType = new RateScheduleType();
            rateScheduleType.RateScheduleTypeID = rateScheduleTypeID;
            rateScheduleType.EntityID = entityID;
            rateScheduleType.Enabled = enabled;
            rateScheduleType.CreatedDate = createdDate;
            rateScheduleType.CreatedBy = createdBy;
            return rateScheduleType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RateScheduleTypeID
        {
            get
            {
                return _RateScheduleTypeID;
            }
            set
            {
                if (_RateScheduleTypeID != value)
                {
                    OnRateScheduleTypeIDChanging(value);
                    ReportPropertyChanging("RateScheduleTypeID");
                    _RateScheduleTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RateScheduleTypeID");
                    OnRateScheduleTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _RateScheduleTypeID;
        partial void OnRateScheduleTypeIDChanging(global::System.Int32 value);
        partial void OnRateScheduleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RateScheduleName
        {
            get
            {
                return _RateScheduleName;
            }
            set
            {
                OnRateScheduleNameChanging(value);
                ReportPropertyChanging("RateScheduleName");
                _RateScheduleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RateScheduleName");
                OnRateScheduleNameChanged();
            }
        }
        private global::System.String _RateScheduleName;
        partial void OnRateScheduleNameChanging(global::System.String value);
        partial void OnRateScheduleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CalculationFormatString
        {
            get
            {
                return _CalculationFormatString;
            }
            set
            {
                OnCalculationFormatStringChanging(value);
                ReportPropertyChanging("CalculationFormatString");
                _CalculationFormatString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CalculationFormatString");
                OnCalculationFormatStringChanged();
            }
        }
        private global::System.String _CalculationFormatString;
        partial void OnCalculationFormatStringChanging(global::System.String value);
        partial void OnCalculationFormatStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ManagementFeeRateSchedule_RateScheduleType", "ManagementFeeRateSchedule")]
        public EntityCollection<ManagementFeeRateSchedule> ManagementFeeRateSchedules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ManagementFeeRateSchedule>("DeepBlueModel.FK_ManagementFeeRateSchedule_RateScheduleType", "ManagementFeeRateSchedule");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ManagementFeeRateSchedule>("DeepBlueModel.FK_ManagementFeeRateSchedule_RateScheduleType", "ManagementFeeRateSchedule", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="ReportingFrequency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportingFrequency : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportingFrequency object.
        /// </summary>
        /// <param name="reportingFrequencyID">Initial value of the ReportingFrequencyID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static ReportingFrequency CreateReportingFrequency(global::System.Int32 reportingFrequencyID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            ReportingFrequency reportingFrequency = new ReportingFrequency();
            reportingFrequency.ReportingFrequencyID = reportingFrequencyID;
            reportingFrequency.EntityID = entityID;
            reportingFrequency.Enabled = enabled;
            reportingFrequency.CreatedDate = createdDate;
            reportingFrequency.CreatedBy = createdBy;
            return reportingFrequency;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportingFrequencyID
        {
            get
            {
                return _ReportingFrequencyID;
            }
            set
            {
                if (_ReportingFrequencyID != value)
                {
                    OnReportingFrequencyIDChanging(value);
                    ReportPropertyChanging("ReportingFrequencyID");
                    _ReportingFrequencyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportingFrequencyID");
                    OnReportingFrequencyIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportingFrequencyID;
        partial void OnReportingFrequencyIDChanging(global::System.Int32 value);
        partial void OnReportingFrequencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReportingFrequency1
        {
            get
            {
                return _ReportingFrequency1;
            }
            set
            {
                OnReportingFrequency1Changing(value);
                ReportPropertyChanging("ReportingFrequency1");
                _ReportingFrequency1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReportingFrequency1");
                OnReportingFrequency1Changed();
            }
        }
        private global::System.String _ReportingFrequency1;
        partial void OnReportingFrequency1Changing(global::System.String value);
        partial void OnReportingFrequency1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_ReportingFrequency", "UnderlyingFund")]
        public EntityCollection<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_ReportingFrequency", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_ReportingFrequency", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="ReportingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ReportingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ReportingType object.
        /// </summary>
        /// <param name="reportingTypeID">Initial value of the ReportingTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static ReportingType CreateReportingType(global::System.Int32 reportingTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            ReportingType reportingType = new ReportingType();
            reportingType.ReportingTypeID = reportingTypeID;
            reportingType.EntityID = entityID;
            reportingType.Enabled = enabled;
            reportingType.CreatedDate = createdDate;
            reportingType.CreatedBy = createdBy;
            return reportingType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ReportingTypeID
        {
            get
            {
                return _ReportingTypeID;
            }
            set
            {
                if (_ReportingTypeID != value)
                {
                    OnReportingTypeIDChanging(value);
                    ReportPropertyChanging("ReportingTypeID");
                    _ReportingTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ReportingTypeID");
                    OnReportingTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ReportingTypeID;
        partial void OnReportingTypeIDChanging(global::System.Int32 value);
        partial void OnReportingTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reporting
        {
            get
            {
                return _Reporting;
            }
            set
            {
                OnReportingChanging(value);
                ReportPropertyChanging("Reporting");
                _Reporting = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reporting");
                OnReportingChanged();
            }
        }
        private global::System.String _Reporting;
        partial void OnReportingChanging(global::System.String value);
        partial void OnReportingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_ReportingType", "UnderlyingFund")]
        public EntityCollection<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_ReportingType", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_ReportingType", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="SecurityConversion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityConversion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityConversion object.
        /// </summary>
        /// <param name="securityConversionID">Initial value of the SecurityConversionID property.</param>
        /// <param name="oldSecurityTypeID">Initial value of the OldSecurityTypeID property.</param>
        /// <param name="oldSecurityID">Initial value of the OldSecurityID property.</param>
        /// <param name="newSecurityTypeID">Initial value of the NewSecurityTypeID property.</param>
        /// <param name="newSecurityID">Initial value of the NewSecurityID property.</param>
        /// <param name="splitFactor">Initial value of the SplitFactor property.</param>
        /// <param name="conversionDate">Initial value of the ConversionDate property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static SecurityConversion CreateSecurityConversion(global::System.Int32 securityConversionID, global::System.Int32 oldSecurityTypeID, global::System.Int32 oldSecurityID, global::System.Int32 newSecurityTypeID, global::System.Int32 newSecurityID, global::System.Int32 splitFactor, global::System.DateTime conversionDate, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            SecurityConversion securityConversion = new SecurityConversion();
            securityConversion.SecurityConversionID = securityConversionID;
            securityConversion.OldSecurityTypeID = oldSecurityTypeID;
            securityConversion.OldSecurityID = oldSecurityID;
            securityConversion.NewSecurityTypeID = newSecurityTypeID;
            securityConversion.NewSecurityID = newSecurityID;
            securityConversion.SplitFactor = splitFactor;
            securityConversion.ConversionDate = conversionDate;
            securityConversion.CreatedDate = createdDate;
            securityConversion.CreatedBy = createdBy;
            return securityConversion;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityConversionID
        {
            get
            {
                return _SecurityConversionID;
            }
            set
            {
                if (_SecurityConversionID != value)
                {
                    OnSecurityConversionIDChanging(value);
                    ReportPropertyChanging("SecurityConversionID");
                    _SecurityConversionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecurityConversionID");
                    OnSecurityConversionIDChanged();
                }
            }
        }
        private global::System.Int32 _SecurityConversionID;
        partial void OnSecurityConversionIDChanging(global::System.Int32 value);
        partial void OnSecurityConversionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldSecurityTypeID
        {
            get
            {
                return _OldSecurityTypeID;
            }
            set
            {
                OnOldSecurityTypeIDChanging(value);
                ReportPropertyChanging("OldSecurityTypeID");
                _OldSecurityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldSecurityTypeID");
                OnOldSecurityTypeIDChanged();
            }
        }
        private global::System.Int32 _OldSecurityTypeID;
        partial void OnOldSecurityTypeIDChanging(global::System.Int32 value);
        partial void OnOldSecurityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OldSecurityID
        {
            get
            {
                return _OldSecurityID;
            }
            set
            {
                OnOldSecurityIDChanging(value);
                ReportPropertyChanging("OldSecurityID");
                _OldSecurityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OldSecurityID");
                OnOldSecurityIDChanged();
            }
        }
        private global::System.Int32 _OldSecurityID;
        partial void OnOldSecurityIDChanging(global::System.Int32 value);
        partial void OnOldSecurityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewSecurityTypeID
        {
            get
            {
                return _NewSecurityTypeID;
            }
            set
            {
                OnNewSecurityTypeIDChanging(value);
                ReportPropertyChanging("NewSecurityTypeID");
                _NewSecurityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewSecurityTypeID");
                OnNewSecurityTypeIDChanged();
            }
        }
        private global::System.Int32 _NewSecurityTypeID;
        partial void OnNewSecurityTypeIDChanging(global::System.Int32 value);
        partial void OnNewSecurityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NewSecurityID
        {
            get
            {
                return _NewSecurityID;
            }
            set
            {
                OnNewSecurityIDChanging(value);
                ReportPropertyChanging("NewSecurityID");
                _NewSecurityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NewSecurityID");
                OnNewSecurityIDChanged();
            }
        }
        private global::System.Int32 _NewSecurityID;
        partial void OnNewSecurityIDChanging(global::System.Int32 value);
        partial void OnNewSecurityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SplitFactor
        {
            get
            {
                return _SplitFactor;
            }
            set
            {
                OnSplitFactorChanging(value);
                ReportPropertyChanging("SplitFactor");
                _SplitFactor = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SplitFactor");
                OnSplitFactorChanged();
            }
        }
        private global::System.Int32 _SplitFactor;
        partial void OnSplitFactorChanging(global::System.Int32 value);
        partial void OnSplitFactorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ConversionDate
        {
            get
            {
                return _ConversionDate;
            }
            set
            {
                OnConversionDateChanging(value);
                ReportPropertyChanging("ConversionDate");
                _ConversionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ConversionDate");
                OnConversionDateChanged();
            }
        }
        private global::System.DateTime _ConversionDate;
        partial void OnConversionDateChanging(global::System.DateTime value);
        partial void OnConversionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_SecurityConversion_SecurityType", "SecurityType")]
        public SecurityType SecurityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_SecurityConversion_SecurityType", "SecurityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_SecurityConversion_SecurityType", "SecurityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityType> SecurityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_SecurityConversion_SecurityType", "SecurityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityType>("DeepBlueModel.FK_SecurityConversion_SecurityType", "SecurityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_SecurityConversion_SecurityTypeOld", "SecurityType")]
        public SecurityType SecurityType1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_SecurityConversion_SecurityTypeOld", "SecurityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_SecurityConversion_SecurityTypeOld", "SecurityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityType> SecurityType1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_SecurityConversion_SecurityTypeOld", "SecurityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityType>("DeepBlueModel.FK_SecurityConversion_SecurityTypeOld", "SecurityType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="SecurityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SecurityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SecurityType object.
        /// </summary>
        /// <param name="securityTypeID">Initial value of the SecurityTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        public static SecurityType CreateSecurityType(global::System.Int32 securityTypeID, global::System.String name, global::System.Boolean enabled)
        {
            SecurityType securityType = new SecurityType();
            securityType.SecurityTypeID = securityTypeID;
            securityType.Name = name;
            securityType.Enabled = enabled;
            return securityType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityTypeID
        {
            get
            {
                return _SecurityTypeID;
            }
            set
            {
                if (_SecurityTypeID != value)
                {
                    OnSecurityTypeIDChanging(value);
                    ReportPropertyChanging("SecurityTypeID");
                    _SecurityTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SecurityTypeID");
                    OnSecurityTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _SecurityTypeID;
        partial void OnSecurityTypeIDChanging(global::System.Int32 value);
        partial void OnSecurityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingDirect_SecurityType", "DealUnderlyingDirect")]
        public EntityCollection<DealUnderlyingDirect> DealUnderlyingDirects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealUnderlyingDirect>("DeepBlueModel.FK_DealUnderlyingDirect_SecurityType", "DealUnderlyingDirect");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealUnderlyingDirect>("DeepBlueModel.FK_DealUnderlyingDirect_SecurityType", "DealUnderlyingDirect", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_SecurityConversion_SecurityType", "SecurityConversion")]
        public EntityCollection<SecurityConversion> SecurityConversions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityConversion>("DeepBlueModel.FK_SecurityConversion_SecurityType", "SecurityConversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityConversion>("DeepBlueModel.FK_SecurityConversion_SecurityType", "SecurityConversion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_SecurityConversion_SecurityTypeOld", "SecurityConversion")]
        public EntityCollection<SecurityConversion> SecurityConversions1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SecurityConversion>("DeepBlueModel.FK_SecurityConversion_SecurityTypeOld", "SecurityConversion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SecurityConversion>("DeepBlueModel.FK_SecurityConversion_SecurityTypeOld", "SecurityConversion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingDirectLastPrice_SecurityType", "UnderlyingDirectLastPrice")]
        public EntityCollection<UnderlyingDirectLastPrice> UnderlyingDirectLastPrices
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingDirectLastPrice>("DeepBlueModel.FK_UnderlyingDirectLastPrice_SecurityType", "UnderlyingDirectLastPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingDirectLastPrice>("DeepBlueModel.FK_UnderlyingDirectLastPrice_SecurityType", "UnderlyingDirectLastPrice", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="ShareClassType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ShareClassType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ShareClassType object.
        /// </summary>
        /// <param name="shareClassTypeID">Initial value of the ShareClassTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static ShareClassType CreateShareClassType(global::System.Int32 shareClassTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            ShareClassType shareClassType = new ShareClassType();
            shareClassType.ShareClassTypeID = shareClassTypeID;
            shareClassType.EntityID = entityID;
            shareClassType.Enabled = enabled;
            shareClassType.CreatedDate = createdDate;
            shareClassType.CreatedBy = createdBy;
            return shareClassType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ShareClassTypeID
        {
            get
            {
                return _ShareClassTypeID;
            }
            set
            {
                if (_ShareClassTypeID != value)
                {
                    OnShareClassTypeIDChanging(value);
                    ReportPropertyChanging("ShareClassTypeID");
                    _ShareClassTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ShareClassTypeID");
                    OnShareClassTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ShareClassTypeID;
        partial void OnShareClassTypeIDChanging(global::System.Int32 value);
        partial void OnShareClassTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ShareClass
        {
            get
            {
                return _ShareClass;
            }
            set
            {
                OnShareClassChanging(value);
                ReportPropertyChanging("ShareClass");
                _ShareClass = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ShareClass");
                OnShareClassChanged();
            }
        }
        private global::System.String _ShareClass;
        partial void OnShareClassChanging(global::System.String value);
        partial void OnShareClassChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Equity_ShareClassType", "Equity")]
        public EntityCollection<Equity> Equities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Equity>("DeepBlueModel.FK_Equity_ShareClassType", "Equity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Equity>("DeepBlueModel.FK_Equity_ShareClassType", "Equity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_ShareClassType", "UnderlyingFund")]
        public EntityCollection<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_ShareClassType", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_ShareClassType", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="STATE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STATE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STATE object.
        /// </summary>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="abbr">Initial value of the Abbr property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static STATE CreateSTATE(global::System.Int32 stateID, global::System.String abbr, global::System.String name)
        {
            STATE sTATE = new STATE();
            sTATE.StateID = stateID;
            sTATE.Abbr = abbr;
            sTATE.Name = name;
            return sTATE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                if (_StateID != value)
                {
                    OnStateIDChanging(value);
                    ReportPropertyChanging("StateID");
                    _StateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateID");
                    OnStateIDChanged();
                }
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbr
        {
            get
            {
                return _Abbr;
            }
            set
            {
                OnAbbrChanging(value);
                ReportPropertyChanging("Abbr");
                _Abbr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbr");
                OnAbbrChanged();
            }
        }
        private global::System.String _Abbr;
        partial void OnAbbrChanging(global::System.String value);
        partial void OnAbbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_State", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("DeepBlueModel.FK_Address_State", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("DeepBlueModel.FK_Address_State", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Investor_ResidencyState", "Investor")]
        public EntityCollection<Investor> Investors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Investor>("DeepBlueModel.FK_Investor_ResidencyState", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Investor>("DeepBlueModel.FK_Investor_ResidencyState", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="TransactionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionType object.
        /// </summary>
        /// <param name="transactionTypeID">Initial value of the TransactionTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="transactionTypeName">Initial value of the TransactionTypeName property.</param>
        public static TransactionType CreateTransactionType(global::System.Int32 transactionTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.String transactionTypeName)
        {
            TransactionType transactionType = new TransactionType();
            transactionType.TransactionTypeID = transactionTypeID;
            transactionType.EntityID = entityID;
            transactionType.Enabled = enabled;
            transactionType.TransactionTypeName = transactionTypeName;
            return transactionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionTypeID
        {
            get
            {
                return _TransactionTypeID;
            }
            set
            {
                if (_TransactionTypeID != value)
                {
                    OnTransactionTypeIDChanging(value);
                    ReportPropertyChanging("TransactionTypeID");
                    _TransactionTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionTypeID");
                    OnTransactionTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TransactionTypeID;
        partial void OnTransactionTypeIDChanging(global::System.Int32 value);
        partial void OnTransactionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionTypeName
        {
            get
            {
                return _TransactionTypeName;
            }
            set
            {
                OnTransactionTypeNameChanging(value);
                ReportPropertyChanging("TransactionTypeName");
                _TransactionTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransactionTypeName");
                OnTransactionTypeNameChanged();
            }
        }
        private global::System.String _TransactionTypeName;
        partial void OnTransactionTypeNameChanging(global::System.String value);
        partial void OnTransactionTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_TransactionType", "InvestorFundTransaction")]
        public EntityCollection<InvestorFundTransaction> InvestorFundTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "InvestorFundTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "InvestorFundTransaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="UnderlyingDirectLastPrice")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnderlyingDirectLastPrice : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnderlyingDirectLastPrice object.
        /// </summary>
        /// <param name="underlyingDirectLastPriceID">Initial value of the UnderlyingDirectLastPriceID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="securityTypeID">Initial value of the SecurityTypeID property.</param>
        /// <param name="securityID">Initial value of the SecurityID property.</param>
        /// <param name="lastPriceDate">Initial value of the LastPriceDate property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static UnderlyingDirectLastPrice CreateUnderlyingDirectLastPrice(global::System.Int32 underlyingDirectLastPriceID, global::System.Int32 fundID, global::System.Int32 securityTypeID, global::System.Int32 securityID, global::System.DateTime lastPriceDate, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            UnderlyingDirectLastPrice underlyingDirectLastPrice = new UnderlyingDirectLastPrice();
            underlyingDirectLastPrice.UnderlyingDirectLastPriceID = underlyingDirectLastPriceID;
            underlyingDirectLastPrice.FundID = fundID;
            underlyingDirectLastPrice.SecurityTypeID = securityTypeID;
            underlyingDirectLastPrice.SecurityID = securityID;
            underlyingDirectLastPrice.LastPriceDate = lastPriceDate;
            underlyingDirectLastPrice.CreatedDate = createdDate;
            underlyingDirectLastPrice.CreatedBy = createdBy;
            return underlyingDirectLastPrice;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingDirectLastPriceID
        {
            get
            {
                return _UnderlyingDirectLastPriceID;
            }
            set
            {
                if (_UnderlyingDirectLastPriceID != value)
                {
                    OnUnderlyingDirectLastPriceIDChanging(value);
                    ReportPropertyChanging("UnderlyingDirectLastPriceID");
                    _UnderlyingDirectLastPriceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnderlyingDirectLastPriceID");
                    OnUnderlyingDirectLastPriceIDChanged();
                }
            }
        }
        private global::System.Int32 _UnderlyingDirectLastPriceID;
        partial void OnUnderlyingDirectLastPriceIDChanging(global::System.Int32 value);
        partial void OnUnderlyingDirectLastPriceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityTypeID
        {
            get
            {
                return _SecurityTypeID;
            }
            set
            {
                OnSecurityTypeIDChanging(value);
                ReportPropertyChanging("SecurityTypeID");
                _SecurityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityTypeID");
                OnSecurityTypeIDChanged();
            }
        }
        private global::System.Int32 _SecurityTypeID;
        partial void OnSecurityTypeIDChanging(global::System.Int32 value);
        partial void OnSecurityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SecurityID
        {
            get
            {
                return _SecurityID;
            }
            set
            {
                OnSecurityIDChanging(value);
                ReportPropertyChanging("SecurityID");
                _SecurityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SecurityID");
                OnSecurityIDChanged();
            }
        }
        private global::System.Int32 _SecurityID;
        partial void OnSecurityIDChanging(global::System.Int32 value);
        partial void OnSecurityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LastPrice
        {
            get
            {
                return _LastPrice;
            }
            set
            {
                OnLastPriceChanging(value);
                ReportPropertyChanging("LastPrice");
                _LastPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPrice");
                OnLastPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _LastPrice;
        partial void OnLastPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnLastPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPriceDate
        {
            get
            {
                return _LastPriceDate;
            }
            set
            {
                OnLastPriceDateChanging(value);
                ReportPropertyChanging("LastPriceDate");
                _LastPriceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPriceDate");
                OnLastPriceDateChanged();
            }
        }
        private global::System.DateTime _LastPriceDate;
        partial void OnLastPriceDateChanging(global::System.DateTime value);
        partial void OnLastPriceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingDirectLastPrice_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingDirectLastPrice_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingDirectLastPrice_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingDirectLastPrice_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingDirectLastPrice_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingDirectLastPrice_SecurityType", "SecurityType")]
        public SecurityType SecurityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_UnderlyingDirectLastPrice_SecurityType", "SecurityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_UnderlyingDirectLastPrice_SecurityType", "SecurityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SecurityType> SecurityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SecurityType>("DeepBlueModel.FK_UnderlyingDirectLastPrice_SecurityType", "SecurityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SecurityType>("DeepBlueModel.FK_UnderlyingDirectLastPrice_SecurityType", "SecurityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingDirectLastPriceHistory_UnderlyingDirectLastPrice", "UnderlyingDirectLastPriceHistory")]
        public EntityCollection<UnderlyingDirectLastPriceHistory> UnderlyingDirectLastPriceHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingDirectLastPriceHistory>("DeepBlueModel.FK_UnderlyingDirectLastPriceHistory_UnderlyingDirectLastPrice", "UnderlyingDirectLastPriceHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingDirectLastPriceHistory>("DeepBlueModel.FK_UnderlyingDirectLastPriceHistory_UnderlyingDirectLastPrice", "UnderlyingDirectLastPriceHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="UnderlyingDirectLastPriceHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnderlyingDirectLastPriceHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnderlyingDirectLastPriceHistory object.
        /// </summary>
        /// <param name="underlyingDirectLastPriceHistoryID">Initial value of the UnderlyingDirectLastPriceHistoryID property.</param>
        /// <param name="lastPriceDate">Initial value of the LastPriceDate property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static UnderlyingDirectLastPriceHistory CreateUnderlyingDirectLastPriceHistory(global::System.Int32 underlyingDirectLastPriceHistoryID, global::System.DateTime lastPriceDate, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            UnderlyingDirectLastPriceHistory underlyingDirectLastPriceHistory = new UnderlyingDirectLastPriceHistory();
            underlyingDirectLastPriceHistory.UnderlyingDirectLastPriceHistoryID = underlyingDirectLastPriceHistoryID;
            underlyingDirectLastPriceHistory.LastPriceDate = lastPriceDate;
            underlyingDirectLastPriceHistory.CreatedDate = createdDate;
            underlyingDirectLastPriceHistory.CreatedBy = createdBy;
            return underlyingDirectLastPriceHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingDirectLastPriceHistoryID
        {
            get
            {
                return _UnderlyingDirectLastPriceHistoryID;
            }
            set
            {
                if (_UnderlyingDirectLastPriceHistoryID != value)
                {
                    OnUnderlyingDirectLastPriceHistoryIDChanging(value);
                    ReportPropertyChanging("UnderlyingDirectLastPriceHistoryID");
                    _UnderlyingDirectLastPriceHistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnderlyingDirectLastPriceHistoryID");
                    OnUnderlyingDirectLastPriceHistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _UnderlyingDirectLastPriceHistoryID;
        partial void OnUnderlyingDirectLastPriceHistoryIDChanging(global::System.Int32 value);
        partial void OnUnderlyingDirectLastPriceHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnderlyingDirectLastPriceID
        {
            get
            {
                return _UnderlyingDirectLastPriceID;
            }
            set
            {
                OnUnderlyingDirectLastPriceIDChanging(value);
                ReportPropertyChanging("UnderlyingDirectLastPriceID");
                _UnderlyingDirectLastPriceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderlyingDirectLastPriceID");
                OnUnderlyingDirectLastPriceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UnderlyingDirectLastPriceID;
        partial void OnUnderlyingDirectLastPriceIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnderlyingDirectLastPriceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> LastPrice
        {
            get
            {
                return _LastPrice;
            }
            set
            {
                OnLastPriceChanging(value);
                ReportPropertyChanging("LastPrice");
                _LastPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPrice");
                OnLastPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _LastPrice;
        partial void OnLastPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnLastPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastPriceDate
        {
            get
            {
                return _LastPriceDate;
            }
            set
            {
                OnLastPriceDateChanging(value);
                ReportPropertyChanging("LastPriceDate");
                _LastPriceDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastPriceDate");
                OnLastPriceDateChanged();
            }
        }
        private global::System.DateTime _LastPriceDate;
        partial void OnLastPriceDateChanging(global::System.DateTime value);
        partial void OnLastPriceDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAudited
        {
            get
            {
                return _IsAudited;
            }
            set
            {
                OnIsAuditedChanging(value);
                ReportPropertyChanging("IsAudited");
                _IsAudited = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAudited");
                OnIsAuditedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAudited;
        partial void OnIsAuditedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAuditedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingDirectLastPriceHistory_UnderlyingDirectLastPrice", "UnderlyingDirectLastPrice")]
        public UnderlyingDirectLastPrice UnderlyingDirectLastPrice
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingDirectLastPrice>("DeepBlueModel.FK_UnderlyingDirectLastPriceHistory_UnderlyingDirectLastPrice", "UnderlyingDirectLastPrice").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingDirectLastPrice>("DeepBlueModel.FK_UnderlyingDirectLastPriceHistory_UnderlyingDirectLastPrice", "UnderlyingDirectLastPrice").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingDirectLastPrice> UnderlyingDirectLastPriceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingDirectLastPrice>("DeepBlueModel.FK_UnderlyingDirectLastPriceHistory_UnderlyingDirectLastPrice", "UnderlyingDirectLastPrice");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingDirectLastPrice>("DeepBlueModel.FK_UnderlyingDirectLastPriceHistory_UnderlyingDirectLastPrice", "UnderlyingDirectLastPrice", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="UnderlyingFund")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnderlyingFund : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnderlyingFund object.
        /// </summary>
        /// <param name="underlyingtFundID">Initial value of the UnderlyingtFundID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="issuerID">Initial value of the IssuerID property.</param>
        /// <param name="fundName">Initial value of the FundName property.</param>
        /// <param name="fundTypeID">Initial value of the FundTypeID property.</param>
        /// <param name="isFeesIncluded">Initial value of the IsFeesIncluded property.</param>
        /// <param name="isDomestic">Initial value of the IsDomestic property.</param>
        /// <param name="taxable">Initial value of the Taxable property.</param>
        /// <param name="exempt">Initial value of the Exempt property.</param>
        public static UnderlyingFund CreateUnderlyingFund(global::System.Int32 underlyingtFundID, global::System.Int32 entityID, global::System.Int32 issuerID, global::System.String fundName, global::System.Int32 fundTypeID, global::System.Boolean isFeesIncluded, global::System.Boolean isDomestic, global::System.Boolean taxable, global::System.Boolean exempt)
        {
            UnderlyingFund underlyingFund = new UnderlyingFund();
            underlyingFund.UnderlyingtFundID = underlyingtFundID;
            underlyingFund.EntityID = entityID;
            underlyingFund.IssuerID = issuerID;
            underlyingFund.FundName = fundName;
            underlyingFund.FundTypeID = fundTypeID;
            underlyingFund.IsFeesIncluded = isFeesIncluded;
            underlyingFund.IsDomestic = isDomestic;
            underlyingFund.Taxable = taxable;
            underlyingFund.Exempt = exempt;
            return underlyingFund;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingtFundID
        {
            get
            {
                return _UnderlyingtFundID;
            }
            set
            {
                if (_UnderlyingtFundID != value)
                {
                    OnUnderlyingtFundIDChanging(value);
                    ReportPropertyChanging("UnderlyingtFundID");
                    _UnderlyingtFundID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnderlyingtFundID");
                    OnUnderlyingtFundIDChanged();
                }
            }
        }
        private global::System.Int32 _UnderlyingtFundID;
        partial void OnUnderlyingtFundIDChanging(global::System.Int32 value);
        partial void OnUnderlyingtFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IssuerID
        {
            get
            {
                return _IssuerID;
            }
            set
            {
                OnIssuerIDChanging(value);
                ReportPropertyChanging("IssuerID");
                _IssuerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IssuerID");
                OnIssuerIDChanged();
            }
        }
        private global::System.Int32 _IssuerID;
        partial void OnIssuerIDChanging(global::System.Int32 value);
        partial void OnIssuerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundName
        {
            get
            {
                return _FundName;
            }
            set
            {
                OnFundNameChanging(value);
                ReportPropertyChanging("FundName");
                _FundName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FundName");
                OnFundNameChanged();
            }
        }
        private global::System.String _FundName;
        partial void OnFundNameChanging(global::System.String value);
        partial void OnFundNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundTypeID
        {
            get
            {
                return _FundTypeID;
            }
            set
            {
                OnFundTypeIDChanging(value);
                ReportPropertyChanging("FundTypeID");
                _FundTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundTypeID");
                OnFundTypeIDChanged();
            }
        }
        private global::System.Int32 _FundTypeID;
        partial void OnFundTypeIDChanging(global::System.Int32 value);
        partial void OnFundTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFeesIncluded
        {
            get
            {
                return _IsFeesIncluded;
            }
            set
            {
                OnIsFeesIncludedChanging(value);
                ReportPropertyChanging("IsFeesIncluded");
                _IsFeesIncluded = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFeesIncluded");
                OnIsFeesIncludedChanged();
            }
        }
        private global::System.Boolean _IsFeesIncluded;
        partial void OnIsFeesIncludedChanging(global::System.Boolean value);
        partial void OnIsFeesIncludedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> VintageYear
        {
            get
            {
                return _VintageYear;
            }
            set
            {
                OnVintageYearChanging(value);
                ReportPropertyChanging("VintageYear");
                _VintageYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VintageYear");
                OnVintageYearChanged();
            }
        }
        private Nullable<global::System.Int16> _VintageYear;
        partial void OnVintageYearChanging(Nullable<global::System.Int16> value);
        partial void OnVintageYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TotalSize
        {
            get
            {
                return _TotalSize;
            }
            set
            {
                OnTotalSizeChanging(value);
                ReportPropertyChanging("TotalSize");
                _TotalSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalSize");
                OnTotalSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _TotalSize;
        partial void OnTotalSizeChanging(Nullable<global::System.Int32> value);
        partial void OnTotalSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> TerminationYear
        {
            get
            {
                return _TerminationYear;
            }
            set
            {
                OnTerminationYearChanging(value);
                ReportPropertyChanging("TerminationYear");
                _TerminationYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TerminationYear");
                OnTerminationYearChanged();
            }
        }
        private Nullable<global::System.Int16> _TerminationYear;
        partial void OnTerminationYearChanging(Nullable<global::System.Int16> value);
        partial void OnTerminationYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> IndustryID
        {
            get
            {
                return _IndustryID;
            }
            set
            {
                OnIndustryIDChanging(value);
                ReportPropertyChanging("IndustryID");
                _IndustryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IndustryID");
                OnIndustryIDChanged();
            }
        }
        private Nullable<global::System.Int32> _IndustryID;
        partial void OnIndustryIDChanging(Nullable<global::System.Int32> value);
        partial void OnIndustryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GeographyID
        {
            get
            {
                return _GeographyID;
            }
            set
            {
                OnGeographyIDChanging(value);
                ReportPropertyChanging("GeographyID");
                _GeographyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GeographyID");
                OnGeographyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GeographyID;
        partial void OnGeographyIDChanging(Nullable<global::System.Int32> value);
        partial void OnGeographyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReportingFrequencyID
        {
            get
            {
                return _ReportingFrequencyID;
            }
            set
            {
                OnReportingFrequencyIDChanging(value);
                ReportPropertyChanging("ReportingFrequencyID");
                _ReportingFrequencyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportingFrequencyID");
                OnReportingFrequencyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReportingFrequencyID;
        partial void OnReportingFrequencyIDChanging(Nullable<global::System.Int32> value);
        partial void OnReportingFrequencyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReportingTypeID
        {
            get
            {
                return _ReportingTypeID;
            }
            set
            {
                OnReportingTypeIDChanging(value);
                ReportPropertyChanging("ReportingTypeID");
                _ReportingTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReportingTypeID");
                OnReportingTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReportingTypeID;
        partial void OnReportingTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnReportingTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ContactID;
        partial void OnContactIDChanging(Nullable<global::System.Int32> value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AccountID;
        partial void OnAccountIDChanging(Nullable<global::System.Int32> value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegalFundName
        {
            get
            {
                return _LegalFundName;
            }
            set
            {
                OnLegalFundNameChanging(value);
                ReportPropertyChanging("LegalFundName");
                _LegalFundName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LegalFundName");
                OnLegalFundNameChanged();
            }
        }
        private global::System.String _LegalFundName;
        partial void OnLegalFundNameChanging(global::System.String value);
        partial void OnLegalFundNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FiscalYearEnd
        {
            get
            {
                return _FiscalYearEnd;
            }
            set
            {
                OnFiscalYearEndChanging(value);
                ReportPropertyChanging("FiscalYearEnd");
                _FiscalYearEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FiscalYearEnd");
                OnFiscalYearEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _FiscalYearEnd;
        partial void OnFiscalYearEndChanging(Nullable<global::System.DateTime> value);
        partial void OnFiscalYearEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDomestic
        {
            get
            {
                return _IsDomestic;
            }
            set
            {
                OnIsDomesticChanging(value);
                ReportPropertyChanging("IsDomestic");
                _IsDomestic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDomestic");
                OnIsDomesticChanged();
            }
        }
        private global::System.Boolean _IsDomestic;
        partial void OnIsDomesticChanging(global::System.Boolean value);
        partial void OnIsDomesticChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FundStructureID
        {
            get
            {
                return _FundStructureID;
            }
            set
            {
                OnFundStructureIDChanging(value);
                ReportPropertyChanging("FundStructureID");
                _FundStructureID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundStructureID");
                OnFundStructureIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FundStructureID;
        partial void OnFundStructureIDChanging(Nullable<global::System.Int32> value);
        partial void OnFundStructureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Taxable
        {
            get
            {
                return _Taxable;
            }
            set
            {
                OnTaxableChanging(value);
                ReportPropertyChanging("Taxable");
                _Taxable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Taxable");
                OnTaxableChanged();
            }
        }
        private global::System.Boolean _Taxable;
        partial void OnTaxableChanging(global::System.Boolean value);
        partial void OnTaxableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Exempt
        {
            get
            {
                return _Exempt;
            }
            set
            {
                OnExemptChanging(value);
                ReportPropertyChanging("Exempt");
                _Exempt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Exempt");
                OnExemptChanged();
            }
        }
        private global::System.Boolean _Exempt;
        partial void OnExemptChanging(global::System.Boolean value);
        partial void OnExemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FundRegisteredOfficeID
        {
            get
            {
                return _FundRegisteredOfficeID;
            }
            set
            {
                OnFundRegisteredOfficeIDChanging(value);
                ReportPropertyChanging("FundRegisteredOfficeID");
                _FundRegisteredOfficeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundRegisteredOfficeID");
                OnFundRegisteredOfficeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FundRegisteredOfficeID;
        partial void OnFundRegisteredOfficeIDChanging(Nullable<global::System.Int32> value);
        partial void OnFundRegisteredOfficeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AddressID;
        partial void OnAddressIDChanging(Nullable<global::System.Int32> value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> ManagementFee
        {
            get
            {
                return _ManagementFee;
            }
            set
            {
                OnManagementFeeChanging(value);
                ReportPropertyChanging("ManagementFee");
                _ManagementFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagementFee");
                OnManagementFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _ManagementFee;
        partial void OnManagementFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnManagementFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> IncentiveFee
        {
            get
            {
                return _IncentiveFee;
            }
            set
            {
                OnIncentiveFeeChanging(value);
                ReportPropertyChanging("IncentiveFee");
                _IncentiveFee = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IncentiveFee");
                OnIncentiveFeeChanged();
            }
        }
        private Nullable<global::System.Decimal> _IncentiveFee;
        partial void OnIncentiveFeeChanging(Nullable<global::System.Decimal> value);
        partial void OnIncentiveFeeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> TaxRate
        {
            get
            {
                return _TaxRate;
            }
            set
            {
                OnTaxRateChanging(value);
                ReportPropertyChanging("TaxRate");
                _TaxRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxRate");
                OnTaxRateChanged();
            }
        }
        private Nullable<global::System.Decimal> _TaxRate;
        partial void OnTaxRateChanging(Nullable<global::System.Decimal> value);
        partial void OnTaxRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuditorName
        {
            get
            {
                return _AuditorName;
            }
            set
            {
                OnAuditorNameChanging(value);
                ReportPropertyChanging("AuditorName");
                _AuditorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AuditorName");
                OnAuditorNameChanged();
            }
        }
        private global::System.String _AuditorName;
        partial void OnAuditorNameChanging(global::System.String value);
        partial void OnAuditorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ManagerContactID
        {
            get
            {
                return _ManagerContactID;
            }
            set
            {
                OnManagerContactIDChanging(value);
                ReportPropertyChanging("ManagerContactID");
                _ManagerContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ManagerContactID");
                OnManagerContactIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ManagerContactID;
        partial void OnManagerContactIDChanging(Nullable<global::System.Int32> value);
        partial void OnManagerContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ShareClassTypeID
        {
            get
            {
                return _ShareClassTypeID;
            }
            set
            {
                OnShareClassTypeIDChanging(value);
                ReportPropertyChanging("ShareClassTypeID");
                _ShareClassTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ShareClassTypeID");
                OnShareClassTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ShareClassTypeID;
        partial void OnShareClassTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnShareClassTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvestmentTypeID
        {
            get
            {
                return _InvestmentTypeID;
            }
            set
            {
                OnInvestmentTypeIDChanging(value);
                ReportPropertyChanging("InvestmentTypeID");
                _InvestmentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestmentTypeID");
                OnInvestmentTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvestmentTypeID;
        partial void OnInvestmentTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvestmentTypeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DeepBlueModel.FK_UnderlyingFund_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DeepBlueModel.FK_UnderlyingFund_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("DeepBlueModel.FK_UnderlyingFund_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("DeepBlueModel.FK_UnderlyingFund_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CashDistribution_UnderlyingFund", "CashDistribution")]
        public EntityCollection<CashDistribution> CashDistributions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashDistribution>("DeepBlueModel.FK_CashDistribution_UnderlyingFund", "CashDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashDistribution>("DeepBlueModel.FK_CashDistribution_UnderlyingFund", "CashDistribution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_UnderlyingFund_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_UnderlyingFund_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_UnderlyingFund_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DeepBlueModel.FK_UnderlyingFund_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_DealUnderlyingFund_UnderlyingFund", "DealUnderlyingFund")]
        public EntityCollection<DealUnderlyingFund> DealUnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DealUnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFund_UnderlyingFund", "DealUnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DealUnderlyingFund>("DeepBlueModel.FK_DealUnderlyingFund_UnderlyingFund", "DealUnderlyingFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_Geography", "Geography")]
        public Geography Geography
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Geography>("DeepBlueModel.FK_UnderlyingFund_Geography", "Geography").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Geography>("DeepBlueModel.FK_UnderlyingFund_Geography", "Geography").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Geography> GeographyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Geography>("DeepBlueModel.FK_UnderlyingFund_Geography", "Geography");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Geography>("DeepBlueModel.FK_UnderlyingFund_Geography", "Geography", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_Industry", "Industry")]
        public Industry Industry
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DeepBlueModel.FK_UnderlyingFund_Industry", "Industry").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DeepBlueModel.FK_UnderlyingFund_Industry", "Industry").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Industry> IndustryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Industry>("DeepBlueModel.FK_UnderlyingFund_Industry", "Industry");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Industry>("DeepBlueModel.FK_UnderlyingFund_Industry", "Industry", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_InvestmentType", "InvestmentType")]
        public InvestmentType InvestmentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestmentType>("DeepBlueModel.FK_UnderlyingFund_InvestmentType", "InvestmentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestmentType>("DeepBlueModel.FK_UnderlyingFund_InvestmentType", "InvestmentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvestmentType> InvestmentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestmentType>("DeepBlueModel.FK_UnderlyingFund_InvestmentType", "InvestmentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvestmentType>("DeepBlueModel.FK_UnderlyingFund_InvestmentType", "InvestmentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_Issuer", "Issuer")]
        public Issuer Issuer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer>("DeepBlueModel.FK_UnderlyingFund_Issuer", "Issuer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer>("DeepBlueModel.FK_UnderlyingFund_Issuer", "Issuer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Issuer> IssuerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Issuer>("DeepBlueModel.FK_UnderlyingFund_Issuer", "Issuer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Issuer>("DeepBlueModel.FK_UnderlyingFund_Issuer", "Issuer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_ReportingFrequency", "ReportingFrequency")]
        public ReportingFrequency ReportingFrequency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportingFrequency>("DeepBlueModel.FK_UnderlyingFund_ReportingFrequency", "ReportingFrequency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportingFrequency>("DeepBlueModel.FK_UnderlyingFund_ReportingFrequency", "ReportingFrequency").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReportingFrequency> ReportingFrequencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportingFrequency>("DeepBlueModel.FK_UnderlyingFund_ReportingFrequency", "ReportingFrequency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReportingFrequency>("DeepBlueModel.FK_UnderlyingFund_ReportingFrequency", "ReportingFrequency", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_ReportingType", "ReportingType")]
        public ReportingType ReportingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportingType>("DeepBlueModel.FK_UnderlyingFund_ReportingType", "ReportingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportingType>("DeepBlueModel.FK_UnderlyingFund_ReportingType", "ReportingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ReportingType> ReportingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ReportingType>("DeepBlueModel.FK_UnderlyingFund_ReportingType", "ReportingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ReportingType>("DeepBlueModel.FK_UnderlyingFund_ReportingType", "ReportingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_ShareClassType", "ShareClassType")]
        public ShareClassType ShareClassType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareClassType>("DeepBlueModel.FK_UnderlyingFund_ShareClassType", "ShareClassType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareClassType>("DeepBlueModel.FK_UnderlyingFund_ShareClassType", "ShareClassType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ShareClassType> ShareClassTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ShareClassType>("DeepBlueModel.FK_UnderlyingFund_ShareClassType", "ShareClassType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ShareClassType>("DeepBlueModel.FK_UnderlyingFund_ShareClassType", "ShareClassType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund1")]
        public UnderlyingFund UnderlyingFund1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund1").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund1").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFund> UnderlyingFund1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund")]
        public UnderlyingFund UnderlyingFund2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFund> UnderlyingFund2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFund", "UnderlyingFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_UnderlyingFundType", "UnderlyingFundType")]
        public UnderlyingFundType UnderlyingFundType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundType>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFundType", "UnderlyingFundType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundType>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFundType", "UnderlyingFundType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFundType> UnderlyingFundTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundType>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFundType", "UnderlyingFundType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFundType>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFundType", "UnderlyingFundType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCall_UnderlyingFund", "UnderlyingFundCapitalCall")]
        public EntityCollection<UnderlyingFundCapitalCall> UnderlyingFundCapitalCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundCapitalCall>("DeepBlueModel.FK_UnderlyingFundCapitalCall_UnderlyingFund", "UnderlyingFundCapitalCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundCapitalCall>("DeepBlueModel.FK_UnderlyingFundCapitalCall_UnderlyingFund", "UnderlyingFundCapitalCall", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCallLineItem_UnderlyingFund", "UnderlyingFundCapitalCallLineItem")]
        public EntityCollection<UnderlyingFundCapitalCallLineItem> UnderlyingFundCapitalCallLineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundCapitalCallLineItem>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFund", "UnderlyingFundCapitalCallLineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundCapitalCallLineItem>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFund", "UnderlyingFundCapitalCallLineItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCashDistribution_UnderlyingFund", "UnderlyingFundCashDistribution")]
        public EntityCollection<UnderlyingFundCashDistribution> UnderlyingFundCashDistributions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundCashDistribution>("DeepBlueModel.FK_UnderlyingFundCashDistribution_UnderlyingFund", "UnderlyingFundCashDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundCashDistribution>("DeepBlueModel.FK_UnderlyingFundCashDistribution_UnderlyingFund", "UnderlyingFundCashDistribution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundNAV_UnderlyingFund", "UnderlyingFundNAV")]
        public EntityCollection<UnderlyingFundNAV> UnderlyingFundNAVs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundNAV>("DeepBlueModel.FK_UnderlyingFundNAV_UnderlyingFund", "UnderlyingFundNAV");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundNAV>("DeepBlueModel.FK_UnderlyingFundNAV_UnderlyingFund", "UnderlyingFundNAV", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="UnderlyingFundCapitalCall")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnderlyingFundCapitalCall : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnderlyingFundCapitalCall object.
        /// </summary>
        /// <param name="underlyingFundCapitalCallID">Initial value of the UnderlyingFundCapitalCallID property.</param>
        /// <param name="underlyingFundID">Initial value of the UnderlyingFundID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="isDeemedCapitalCall">Initial value of the IsDeemedCapitalCall property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isPostRecordDateTransaction">Initial value of the IsPostRecordDateTransaction property.</param>
        public static UnderlyingFundCapitalCall CreateUnderlyingFundCapitalCall(global::System.Int32 underlyingFundCapitalCallID, global::System.Int32 underlyingFundID, global::System.Int32 fundID, global::System.Decimal amount, global::System.Boolean isDeemedCapitalCall, global::System.DateTime createdDate, global::System.Int32 createdBy, global::System.Boolean isPostRecordDateTransaction)
        {
            UnderlyingFundCapitalCall underlyingFundCapitalCall = new UnderlyingFundCapitalCall();
            underlyingFundCapitalCall.UnderlyingFundCapitalCallID = underlyingFundCapitalCallID;
            underlyingFundCapitalCall.UnderlyingFundID = underlyingFundID;
            underlyingFundCapitalCall.FundID = fundID;
            underlyingFundCapitalCall.Amount = amount;
            underlyingFundCapitalCall.IsDeemedCapitalCall = isDeemedCapitalCall;
            underlyingFundCapitalCall.CreatedDate = createdDate;
            underlyingFundCapitalCall.CreatedBy = createdBy;
            underlyingFundCapitalCall.IsPostRecordDateTransaction = isPostRecordDateTransaction;
            return underlyingFundCapitalCall;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundCapitalCallID
        {
            get
            {
                return _UnderlyingFundCapitalCallID;
            }
            set
            {
                if (_UnderlyingFundCapitalCallID != value)
                {
                    OnUnderlyingFundCapitalCallIDChanging(value);
                    ReportPropertyChanging("UnderlyingFundCapitalCallID");
                    _UnderlyingFundCapitalCallID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnderlyingFundCapitalCallID");
                    OnUnderlyingFundCapitalCallIDChanged();
                }
            }
        }
        private global::System.Int32 _UnderlyingFundCapitalCallID;
        partial void OnUnderlyingFundCapitalCallIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundCapitalCallIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundID
        {
            get
            {
                return _UnderlyingFundID;
            }
            set
            {
                OnUnderlyingFundIDChanging(value);
                ReportPropertyChanging("UnderlyingFundID");
                _UnderlyingFundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderlyingFundID");
                OnUnderlyingFundIDChanged();
            }
        }
        private global::System.Int32 _UnderlyingFundID;
        partial void OnUnderlyingFundIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NoticeDate
        {
            get
            {
                return _NoticeDate;
            }
            set
            {
                OnNoticeDateChanging(value);
                ReportPropertyChanging("NoticeDate");
                _NoticeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoticeDate");
                OnNoticeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NoticeDate;
        partial void OnNoticeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNoticeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivedDate;
        partial void OnReceivedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDeemedCapitalCall
        {
            get
            {
                return _IsDeemedCapitalCall;
            }
            set
            {
                OnIsDeemedCapitalCallChanging(value);
                ReportPropertyChanging("IsDeemedCapitalCall");
                _IsDeemedCapitalCall = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDeemedCapitalCall");
                OnIsDeemedCapitalCallChanged();
            }
        }
        private global::System.Boolean _IsDeemedCapitalCall;
        partial void OnIsDeemedCapitalCallChanging(global::System.Boolean value);
        partial void OnIsDeemedCapitalCallChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPostRecordDateTransaction
        {
            get
            {
                return _IsPostRecordDateTransaction;
            }
            set
            {
                OnIsPostRecordDateTransactionChanging(value);
                ReportPropertyChanging("IsPostRecordDateTransaction");
                _IsPostRecordDateTransaction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPostRecordDateTransaction");
                OnIsPostRecordDateTransactionChanged();
            }
        }
        private global::System.Boolean _IsPostRecordDateTransaction;
        partial void OnIsPostRecordDateTransactionChanging(global::System.Boolean value);
        partial void OnIsPostRecordDateTransactionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCall_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundCapitalCall_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundCapitalCall_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundCapitalCall_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundCapitalCall_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCall_UnderlyingFund", "UnderlyingFund")]
        public UnderlyingFund UnderlyingFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCapitalCall_UnderlyingFund", "UnderlyingFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCapitalCall_UnderlyingFund", "UnderlyingFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFund> UnderlyingFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCapitalCall_UnderlyingFund", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCapitalCall_UnderlyingFund", "UnderlyingFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCallLineItem_UnderlyingFundCapitalCallID", "UnderlyingFundCapitalCallLineItem")]
        public EntityCollection<UnderlyingFundCapitalCallLineItem> UnderlyingFundCapitalCallLineItems
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundCapitalCallLineItem>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFundCapitalCallID", "UnderlyingFundCapitalCallLineItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundCapitalCallLineItem>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFundCapitalCallID", "UnderlyingFundCapitalCallLineItem", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="UnderlyingFundCapitalCallLineItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnderlyingFundCapitalCallLineItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnderlyingFundCapitalCallLineItem object.
        /// </summary>
        /// <param name="underlyingFundCapitalCallLineItemID">Initial value of the UnderlyingFundCapitalCallLineItemID property.</param>
        /// <param name="underlyingFundID">Initial value of the UnderlyingFundID property.</param>
        /// <param name="dealID">Initial value of the DealID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static UnderlyingFundCapitalCallLineItem CreateUnderlyingFundCapitalCallLineItem(global::System.Int32 underlyingFundCapitalCallLineItemID, global::System.Int32 underlyingFundID, global::System.Int32 dealID, global::System.Decimal amount, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            UnderlyingFundCapitalCallLineItem underlyingFundCapitalCallLineItem = new UnderlyingFundCapitalCallLineItem();
            underlyingFundCapitalCallLineItem.UnderlyingFundCapitalCallLineItemID = underlyingFundCapitalCallLineItemID;
            underlyingFundCapitalCallLineItem.UnderlyingFundID = underlyingFundID;
            underlyingFundCapitalCallLineItem.DealID = dealID;
            underlyingFundCapitalCallLineItem.Amount = amount;
            underlyingFundCapitalCallLineItem.CreatedDate = createdDate;
            underlyingFundCapitalCallLineItem.CreatedBy = createdBy;
            return underlyingFundCapitalCallLineItem;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundCapitalCallLineItemID
        {
            get
            {
                return _UnderlyingFundCapitalCallLineItemID;
            }
            set
            {
                if (_UnderlyingFundCapitalCallLineItemID != value)
                {
                    OnUnderlyingFundCapitalCallLineItemIDChanging(value);
                    ReportPropertyChanging("UnderlyingFundCapitalCallLineItemID");
                    _UnderlyingFundCapitalCallLineItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnderlyingFundCapitalCallLineItemID");
                    OnUnderlyingFundCapitalCallLineItemIDChanged();
                }
            }
        }
        private global::System.Int32 _UnderlyingFundCapitalCallLineItemID;
        partial void OnUnderlyingFundCapitalCallLineItemIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundCapitalCallLineItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundID
        {
            get
            {
                return _UnderlyingFundID;
            }
            set
            {
                OnUnderlyingFundIDChanging(value);
                ReportPropertyChanging("UnderlyingFundID");
                _UnderlyingFundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderlyingFundID");
                OnUnderlyingFundIDChanged();
            }
        }
        private global::System.Int32 _UnderlyingFundID;
        partial void OnUnderlyingFundIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DealID
        {
            get
            {
                return _DealID;
            }
            set
            {
                OnDealIDChanging(value);
                ReportPropertyChanging("DealID");
                _DealID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DealID");
                OnDealIDChanged();
            }
        }
        private global::System.Int32 _DealID;
        partial void OnDealIDChanging(global::System.Int32 value);
        partial void OnDealIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnderlyingFundCapitalCallID
        {
            get
            {
                return _UnderlyingFundCapitalCallID;
            }
            set
            {
                OnUnderlyingFundCapitalCallIDChanging(value);
                ReportPropertyChanging("UnderlyingFundCapitalCallID");
                _UnderlyingFundCapitalCallID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderlyingFundCapitalCallID");
                OnUnderlyingFundCapitalCallIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UnderlyingFundCapitalCallID;
        partial void OnUnderlyingFundCapitalCallIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnderlyingFundCapitalCallIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivedDate;
        partial void OnReceivedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCallLineItem_Deal", "Deal")]
        public Deal Deal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_Deal", "Deal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_Deal", "Deal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Deal> DealReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Deal>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_Deal", "Deal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Deal>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_Deal", "Deal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCallLineItem_UnderlyingFund", "UnderlyingFund")]
        public UnderlyingFund UnderlyingFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFund", "UnderlyingFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFund", "UnderlyingFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFund> UnderlyingFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFund", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFund", "UnderlyingFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCapitalCallLineItem_UnderlyingFundCapitalCallID", "UnderlyingFundCapitalCall")]
        public UnderlyingFundCapitalCall UnderlyingFundCapitalCall
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundCapitalCall>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFundCapitalCallID", "UnderlyingFundCapitalCall").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundCapitalCall>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFundCapitalCallID", "UnderlyingFundCapitalCall").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFundCapitalCall> UnderlyingFundCapitalCallReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundCapitalCall>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFundCapitalCallID", "UnderlyingFundCapitalCall");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFundCapitalCall>("DeepBlueModel.FK_UnderlyingFundCapitalCallLineItem_UnderlyingFundCapitalCallID", "UnderlyingFundCapitalCall", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="UnderlyingFundCashDistribution")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnderlyingFundCashDistribution : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnderlyingFundCashDistribution object.
        /// </summary>
        /// <param name="underlyingFundCashDistributionID">Initial value of the UnderlyingFundCashDistributionID property.</param>
        /// <param name="underlyingFundID">Initial value of the UnderlyingFundID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="cashDistributionTypeID">Initial value of the CashDistributionTypeID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        /// <param name="isPostRecordDateTransaction">Initial value of the IsPostRecordDateTransaction property.</param>
        public static UnderlyingFundCashDistribution CreateUnderlyingFundCashDistribution(global::System.Int32 underlyingFundCashDistributionID, global::System.Int32 underlyingFundID, global::System.Int32 fundID, global::System.Int32 cashDistributionTypeID, global::System.Decimal amount, global::System.DateTime createdDate, global::System.Int32 createdBy, global::System.Boolean isPostRecordDateTransaction)
        {
            UnderlyingFundCashDistribution underlyingFundCashDistribution = new UnderlyingFundCashDistribution();
            underlyingFundCashDistribution.UnderlyingFundCashDistributionID = underlyingFundCashDistributionID;
            underlyingFundCashDistribution.UnderlyingFundID = underlyingFundID;
            underlyingFundCashDistribution.FundID = fundID;
            underlyingFundCashDistribution.CashDistributionTypeID = cashDistributionTypeID;
            underlyingFundCashDistribution.Amount = amount;
            underlyingFundCashDistribution.CreatedDate = createdDate;
            underlyingFundCashDistribution.CreatedBy = createdBy;
            underlyingFundCashDistribution.IsPostRecordDateTransaction = isPostRecordDateTransaction;
            return underlyingFundCashDistribution;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundCashDistributionID
        {
            get
            {
                return _UnderlyingFundCashDistributionID;
            }
            set
            {
                if (_UnderlyingFundCashDistributionID != value)
                {
                    OnUnderlyingFundCashDistributionIDChanging(value);
                    ReportPropertyChanging("UnderlyingFundCashDistributionID");
                    _UnderlyingFundCashDistributionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnderlyingFundCashDistributionID");
                    OnUnderlyingFundCashDistributionIDChanged();
                }
            }
        }
        private global::System.Int32 _UnderlyingFundCashDistributionID;
        partial void OnUnderlyingFundCashDistributionIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundCashDistributionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundID
        {
            get
            {
                return _UnderlyingFundID;
            }
            set
            {
                OnUnderlyingFundIDChanging(value);
                ReportPropertyChanging("UnderlyingFundID");
                _UnderlyingFundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderlyingFundID");
                OnUnderlyingFundIDChanged();
            }
        }
        private global::System.Int32 _UnderlyingFundID;
        partial void OnUnderlyingFundIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CashDistributionTypeID
        {
            get
            {
                return _CashDistributionTypeID;
            }
            set
            {
                OnCashDistributionTypeIDChanging(value);
                ReportPropertyChanging("CashDistributionTypeID");
                _CashDistributionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CashDistributionTypeID");
                OnCashDistributionTypeIDChanged();
            }
        }
        private global::System.Int32 _CashDistributionTypeID;
        partial void OnCashDistributionTypeIDChanging(global::System.Int32 value);
        partial void OnCashDistributionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> NoticeDate
        {
            get
            {
                return _NoticeDate;
            }
            set
            {
                OnNoticeDateChanging(value);
                ReportPropertyChanging("NoticeDate");
                _NoticeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NoticeDate");
                OnNoticeDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _NoticeDate;
        partial void OnNoticeDateChanging(Nullable<global::System.DateTime> value);
        partial void OnNoticeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ReceivedDate
        {
            get
            {
                return _ReceivedDate;
            }
            set
            {
                OnReceivedDateChanging(value);
                ReportPropertyChanging("ReceivedDate");
                _ReceivedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivedDate");
                OnReceivedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ReceivedDate;
        partial void OnReceivedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnReceivedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PaidDate
        {
            get
            {
                return _PaidDate;
            }
            set
            {
                OnPaidDateChanging(value);
                ReportPropertyChanging("PaidDate");
                _PaidDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaidDate");
                OnPaidDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PaidDate;
        partial void OnPaidDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPaidDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPostRecordDateTransaction
        {
            get
            {
                return _IsPostRecordDateTransaction;
            }
            set
            {
                OnIsPostRecordDateTransactionChanging(value);
                ReportPropertyChanging("IsPostRecordDateTransaction");
                _IsPostRecordDateTransaction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPostRecordDateTransaction");
                OnIsPostRecordDateTransactionChanged();
            }
        }
        private global::System.Boolean _IsPostRecordDateTransaction;
        partial void OnIsPostRecordDateTransactionChanging(global::System.Boolean value);
        partial void OnIsPostRecordDateTransactionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CashDistribution_UnderlyingFundCashDistribution", "CashDistribution")]
        public EntityCollection<CashDistribution> CashDistributions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CashDistribution>("DeepBlueModel.FK_CashDistribution_UnderlyingFundCashDistribution", "CashDistribution");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CashDistribution>("DeepBlueModel.FK_CashDistribution_UnderlyingFundCashDistribution", "CashDistribution", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCashDistribution_CashDistributionType", "CashDistributionType")]
        public CashDistributionType CashDistributionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashDistributionType>("DeepBlueModel.FK_UnderlyingFundCashDistribution_CashDistributionType", "CashDistributionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashDistributionType>("DeepBlueModel.FK_UnderlyingFundCashDistribution_CashDistributionType", "CashDistributionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CashDistributionType> CashDistributionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CashDistributionType>("DeepBlueModel.FK_UnderlyingFundCashDistribution_CashDistributionType", "CashDistributionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CashDistributionType>("DeepBlueModel.FK_UnderlyingFundCashDistribution_CashDistributionType", "CashDistributionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCashDistribution_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundCashDistribution_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundCashDistribution_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundCashDistribution_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundCashDistribution_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundCashDistribution_UnderlyingFund", "UnderlyingFund")]
        public UnderlyingFund UnderlyingFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCashDistribution_UnderlyingFund", "UnderlyingFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCashDistribution_UnderlyingFund", "UnderlyingFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFund> UnderlyingFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCashDistribution_UnderlyingFund", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundCashDistribution_UnderlyingFund", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="UnderlyingFundNAV")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnderlyingFundNAV : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnderlyingFundNAV object.
        /// </summary>
        /// <param name="underlyingFundNAVID">Initial value of the UnderlyingFundNAVID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="underlyingFundID">Initial value of the UnderlyingFundID property.</param>
        /// <param name="fundNAVDate">Initial value of the FundNAVDate property.</param>
        public static UnderlyingFundNAV CreateUnderlyingFundNAV(global::System.Int32 underlyingFundNAVID, global::System.Int32 fundID, global::System.Int32 underlyingFundID, global::System.DateTime fundNAVDate)
        {
            UnderlyingFundNAV underlyingFundNAV = new UnderlyingFundNAV();
            underlyingFundNAV.UnderlyingFundNAVID = underlyingFundNAVID;
            underlyingFundNAV.FundID = fundID;
            underlyingFundNAV.UnderlyingFundID = underlyingFundID;
            underlyingFundNAV.FundNAVDate = fundNAVDate;
            return underlyingFundNAV;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundNAVID
        {
            get
            {
                return _UnderlyingFundNAVID;
            }
            set
            {
                if (_UnderlyingFundNAVID != value)
                {
                    OnUnderlyingFundNAVIDChanging(value);
                    ReportPropertyChanging("UnderlyingFundNAVID");
                    _UnderlyingFundNAVID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnderlyingFundNAVID");
                    OnUnderlyingFundNAVIDChanged();
                }
            }
        }
        private global::System.Int32 _UnderlyingFundNAVID;
        partial void OnUnderlyingFundNAVIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundNAVIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundID
        {
            get
            {
                return _UnderlyingFundID;
            }
            set
            {
                OnUnderlyingFundIDChanging(value);
                ReportPropertyChanging("UnderlyingFundID");
                _UnderlyingFundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderlyingFundID");
                OnUnderlyingFundIDChanged();
            }
        }
        private global::System.Int32 _UnderlyingFundID;
        partial void OnUnderlyingFundIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundNAV
        {
            get
            {
                return _FundNAV;
            }
            set
            {
                OnFundNAVChanging(value);
                ReportPropertyChanging("FundNAV");
                _FundNAV = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundNAV");
                OnFundNAVChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundNAV;
        partial void OnFundNAVChanging(Nullable<global::System.Decimal> value);
        partial void OnFundNAVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FundNAVDate
        {
            get
            {
                return _FundNAVDate;
            }
            set
            {
                OnFundNAVDateChanging(value);
                ReportPropertyChanging("FundNAVDate");
                _FundNAVDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundNAVDate");
                OnFundNAVDateChanged();
            }
        }
        private global::System.DateTime _FundNAVDate;
        partial void OnFundNAVDateChanging(global::System.DateTime value);
        partial void OnFundNAVDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundNAV_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundNAV_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundNAV_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundNAV_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_UnderlyingFundNAV_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundNAV_UnderlyingFund", "UnderlyingFund")]
        public UnderlyingFund UnderlyingFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundNAV_UnderlyingFund", "UnderlyingFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundNAV_UnderlyingFund", "UnderlyingFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFund> UnderlyingFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundNAV_UnderlyingFund", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFundNAV_UnderlyingFund", "UnderlyingFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundNAVHistory_UnderlyingFundNAV", "UnderlyingFundNAVHistory")]
        public EntityCollection<UnderlyingFundNAVHistory> UnderlyingFundNAVHistories
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFundNAVHistory>("DeepBlueModel.FK_UnderlyingFundNAVHistory_UnderlyingFundNAV", "UnderlyingFundNAVHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFundNAVHistory>("DeepBlueModel.FK_UnderlyingFundNAVHistory_UnderlyingFundNAV", "UnderlyingFundNAVHistory", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="UnderlyingFundNAVHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnderlyingFundNAVHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnderlyingFundNAVHistory object.
        /// </summary>
        /// <param name="underlyingFundNAVHistoryID">Initial value of the UnderlyingFundNAVHistoryID property.</param>
        /// <param name="fundNAVDate">Initial value of the FundNAVDate property.</param>
        public static UnderlyingFundNAVHistory CreateUnderlyingFundNAVHistory(global::System.Int32 underlyingFundNAVHistoryID, global::System.DateTime fundNAVDate)
        {
            UnderlyingFundNAVHistory underlyingFundNAVHistory = new UnderlyingFundNAVHistory();
            underlyingFundNAVHistory.UnderlyingFundNAVHistoryID = underlyingFundNAVHistoryID;
            underlyingFundNAVHistory.FundNAVDate = fundNAVDate;
            return underlyingFundNAVHistory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundNAVHistoryID
        {
            get
            {
                return _UnderlyingFundNAVHistoryID;
            }
            set
            {
                if (_UnderlyingFundNAVHistoryID != value)
                {
                    OnUnderlyingFundNAVHistoryIDChanging(value);
                    ReportPropertyChanging("UnderlyingFundNAVHistoryID");
                    _UnderlyingFundNAVHistoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnderlyingFundNAVHistoryID");
                    OnUnderlyingFundNAVHistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _UnderlyingFundNAVHistoryID;
        partial void OnUnderlyingFundNAVHistoryIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundNAVHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UnderlyingFundNAVID
        {
            get
            {
                return _UnderlyingFundNAVID;
            }
            set
            {
                OnUnderlyingFundNAVIDChanging(value);
                ReportPropertyChanging("UnderlyingFundNAVID");
                _UnderlyingFundNAVID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnderlyingFundNAVID");
                OnUnderlyingFundNAVIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UnderlyingFundNAVID;
        partial void OnUnderlyingFundNAVIDChanging(Nullable<global::System.Int32> value);
        partial void OnUnderlyingFundNAVIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundNAV
        {
            get
            {
                return _FundNAV;
            }
            set
            {
                OnFundNAVChanging(value);
                ReportPropertyChanging("FundNAV");
                _FundNAV = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundNAV");
                OnFundNAVChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundNAV;
        partial void OnFundNAVChanging(Nullable<global::System.Decimal> value);
        partial void OnFundNAVChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime FundNAVDate
        {
            get
            {
                return _FundNAVDate;
            }
            set
            {
                OnFundNAVDateChanging(value);
                ReportPropertyChanging("FundNAVDate");
                _FundNAVDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundNAVDate");
                OnFundNAVDateChanged();
            }
        }
        private global::System.DateTime _FundNAVDate;
        partial void OnFundNAVDateChanging(global::System.DateTime value);
        partial void OnFundNAVDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Calculation
        {
            get
            {
                return _Calculation;
            }
            set
            {
                OnCalculationChanging(value);
                ReportPropertyChanging("Calculation");
                _Calculation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Calculation");
                OnCalculationChanged();
            }
        }
        private global::System.String _Calculation;
        partial void OnCalculationChanging(global::System.String value);
        partial void OnCalculationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAudited
        {
            get
            {
                return _IsAudited;
            }
            set
            {
                OnIsAuditedChanging(value);
                ReportPropertyChanging("IsAudited");
                _IsAudited = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAudited");
                OnIsAuditedChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAudited;
        partial void OnIsAuditedChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAuditedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFundNAVHistory_UnderlyingFundNAV", "UnderlyingFundNAV")]
        public UnderlyingFundNAV UnderlyingFundNAV
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundNAV>("DeepBlueModel.FK_UnderlyingFundNAVHistory_UnderlyingFundNAV", "UnderlyingFundNAV").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundNAV>("DeepBlueModel.FK_UnderlyingFundNAVHistory_UnderlyingFundNAV", "UnderlyingFundNAV").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UnderlyingFundNAV> UnderlyingFundNAVReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UnderlyingFundNAV>("DeepBlueModel.FK_UnderlyingFundNAVHistory_UnderlyingFundNAV", "UnderlyingFundNAV");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UnderlyingFundNAV>("DeepBlueModel.FK_UnderlyingFundNAVHistory_UnderlyingFundNAV", "UnderlyingFundNAV", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="UnderlyingFundType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnderlyingFundType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnderlyingFundType object.
        /// </summary>
        /// <param name="underlyingFundTypeID">Initial value of the UnderlyingFundTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static UnderlyingFundType CreateUnderlyingFundType(global::System.Int32 underlyingFundTypeID, global::System.String name)
        {
            UnderlyingFundType underlyingFundType = new UnderlyingFundType();
            underlyingFundType.UnderlyingFundTypeID = underlyingFundTypeID;
            underlyingFundType.Name = name;
            return underlyingFundType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UnderlyingFundTypeID
        {
            get
            {
                return _UnderlyingFundTypeID;
            }
            set
            {
                if (_UnderlyingFundTypeID != value)
                {
                    OnUnderlyingFundTypeIDChanging(value);
                    ReportPropertyChanging("UnderlyingFundTypeID");
                    _UnderlyingFundTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UnderlyingFundTypeID");
                    OnUnderlyingFundTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _UnderlyingFundTypeID;
        partial void OnUnderlyingFundTypeIDChanging(global::System.Int32 value);
        partial void OnUnderlyingFundTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_UnderlyingFund_UnderlyingFundType", "UnderlyingFund")]
        public EntityCollection<UnderlyingFund> UnderlyingFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFundType", "UnderlyingFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UnderlyingFund>("DeepBlueModel.FK_UnderlyingFund_UnderlyingFundType", "UnderlyingFund", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}

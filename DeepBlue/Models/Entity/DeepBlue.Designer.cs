//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Address_AddressType", "AddressType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.AddressType), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Address), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Address_Country", "COUNTRY", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.COUNTRY), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Address), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Address_State", "STATE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.STATE), "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Address), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ContactAddress_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Address), "ContactAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ContactAddress), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorAddress_Address", "Address", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Address), "InvestorAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorAddress), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Communication_CommunicationType", "CommunicationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CommunicationType), "Communication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Communication), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ContactCommunication_Communication", "Communication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Communication), "ContactCommunication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ContactCommunication), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorCommunication_Communication", "Communication", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Communication), "InvestorCommunication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorCommunication), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.CommunicationGrouping), "CommunicationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.CommunicationType), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ContactAddress_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Contact), "ContactAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ContactAddress), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_ContactCommunication_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Contact), "ContactCommunication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.ContactCommunication), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorContact_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Contact), "InvestorContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorContact), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundDocument_DocumentType", "DocumentType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.DocumentType), "InvestorFundDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundDocument), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_File_FileType", "FileType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.FileType), "File", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.File), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundDocument_File", "File", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.File), "InvestorFundDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundDocument), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FundAccount_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "FundAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FundAccount), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_FundClosing_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "FundClosing", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.FundClosing), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFund_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Fund), "InvestorFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundDocument_Fund", "Fund", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Fund), "InvestorFundDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundDocument), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundTransaction_FundClosing", "FundClosing", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.FundClosing), "InvestorFundTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundTransaction), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Investor_InvestorEntityType", "InvestorEntityType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.InvestorEntityType), "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Investor), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_Investor_ResidencyState", "STATE", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.STATE), "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.Investor), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorAccount_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "InvestorAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorAccount), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorAddress_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "InvestorAddress", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorAddress), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorCommunication_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "InvestorCommunication", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorCommunication), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorContact_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "InvestorContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorContact), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFund_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.Investor), "InvestorFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundDocument_Investor", "Investor", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.Investor), "InvestorFundDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundDocument), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFund_InvestorType", "InvestorType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DeepBlue.Models.Entity.InvestorType), "InvestorFund", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFund), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundTransaction_InvestorFund", "InvestorFund", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.InvestorFund), "InvestorFundTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundTransaction), true)]
[assembly: EdmRelationshipAttribute("DeepBlueModel", "FK_InvestorFundTransaction_TransactionType", "TransactionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DeepBlue.Models.Entity.TransactionType), "InvestorFundTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DeepBlue.Models.Entity.InvestorFundTransaction), true)]

#endregion

namespace DeepBlue.Models.Entity
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DeepBlueEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DeepBlueEntities object using the connection string found in the 'DeepBlueEntities' section of the application configuration file.
        /// </summary>
        public DeepBlueEntities() : base("name=DeepBlueEntities", "DeepBlueEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DeepBlueEntities object.
        /// </summary>
        public DeepBlueEntities(string connectionString) : base(connectionString, "DeepBlueEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DeepBlueEntities object.
        /// </summary>
        public DeepBlueEntities(EntityConnection connection) : base(connection, "DeepBlueEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Address> Addresses
        {
            get
            {
                if ((_Addresses == null))
                {
                    _Addresses = base.CreateObjectSet<Address>("Addresses");
                }
                return _Addresses;
            }
        }
        private ObjectSet<Address> _Addresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AddressType> AddressTypes
        {
            get
            {
                if ((_AddressTypes == null))
                {
                    _AddressTypes = base.CreateObjectSet<AddressType>("AddressTypes");
                }
                return _AddressTypes;
            }
        }
        private ObjectSet<AddressType> _AddressTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Communication> Communications
        {
            get
            {
                if ((_Communications == null))
                {
                    _Communications = base.CreateObjectSet<Communication>("Communications");
                }
                return _Communications;
            }
        }
        private ObjectSet<Communication> _Communications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommunicationGrouping> CommunicationGroupings
        {
            get
            {
                if ((_CommunicationGroupings == null))
                {
                    _CommunicationGroupings = base.CreateObjectSet<CommunicationGrouping>("CommunicationGroupings");
                }
                return _CommunicationGroupings;
            }
        }
        private ObjectSet<CommunicationGrouping> _CommunicationGroupings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CommunicationType> CommunicationTypes
        {
            get
            {
                if ((_CommunicationTypes == null))
                {
                    _CommunicationTypes = base.CreateObjectSet<CommunicationType>("CommunicationTypes");
                }
                return _CommunicationTypes;
            }
        }
        private ObjectSet<CommunicationType> _CommunicationTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactAddress> ContactAddresses
        {
            get
            {
                if ((_ContactAddresses == null))
                {
                    _ContactAddresses = base.CreateObjectSet<ContactAddress>("ContactAddresses");
                }
                return _ContactAddresses;
            }
        }
        private ObjectSet<ContactAddress> _ContactAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContactCommunication> ContactCommunications
        {
            get
            {
                if ((_ContactCommunications == null))
                {
                    _ContactCommunications = base.CreateObjectSet<ContactCommunication>("ContactCommunications");
                }
                return _ContactCommunications;
            }
        }
        private ObjectSet<ContactCommunication> _ContactCommunications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<COUNTRY> COUNTRies
        {
            get
            {
                if ((_COUNTRies == null))
                {
                    _COUNTRies = base.CreateObjectSet<COUNTRY>("COUNTRies");
                }
                return _COUNTRies;
            }
        }
        private ObjectSet<COUNTRY> _COUNTRies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DocumentType> DocumentTypes
        {
            get
            {
                if ((_DocumentTypes == null))
                {
                    _DocumentTypes = base.CreateObjectSet<DocumentType>("DocumentTypes");
                }
                return _DocumentTypes;
            }
        }
        private ObjectSet<DocumentType> _DocumentTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<File> Files
        {
            get
            {
                if ((_Files == null))
                {
                    _Files = base.CreateObjectSet<File>("Files");
                }
                return _Files;
            }
        }
        private ObjectSet<File> _Files;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileType> FileTypes
        {
            get
            {
                if ((_FileTypes == null))
                {
                    _FileTypes = base.CreateObjectSet<FileType>("FileTypes");
                }
                return _FileTypes;
            }
        }
        private ObjectSet<FileType> _FileTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Fund> Funds
        {
            get
            {
                if ((_Funds == null))
                {
                    _Funds = base.CreateObjectSet<Fund>("Funds");
                }
                return _Funds;
            }
        }
        private ObjectSet<Fund> _Funds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundAccount> FundAccounts
        {
            get
            {
                if ((_FundAccounts == null))
                {
                    _FundAccounts = base.CreateObjectSet<FundAccount>("FundAccounts");
                }
                return _FundAccounts;
            }
        }
        private ObjectSet<FundAccount> _FundAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundClosing> FundClosings
        {
            get
            {
                if ((_FundClosings == null))
                {
                    _FundClosings = base.CreateObjectSet<FundClosing>("FundClosings");
                }
                return _FundClosings;
            }
        }
        private ObjectSet<FundClosing> _FundClosings;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Investor> Investors
        {
            get
            {
                if ((_Investors == null))
                {
                    _Investors = base.CreateObjectSet<Investor>("Investors");
                }
                return _Investors;
            }
        }
        private ObjectSet<Investor> _Investors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorAccount> InvestorAccounts
        {
            get
            {
                if ((_InvestorAccounts == null))
                {
                    _InvestorAccounts = base.CreateObjectSet<InvestorAccount>("InvestorAccounts");
                }
                return _InvestorAccounts;
            }
        }
        private ObjectSet<InvestorAccount> _InvestorAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorAddress> InvestorAddresses
        {
            get
            {
                if ((_InvestorAddresses == null))
                {
                    _InvestorAddresses = base.CreateObjectSet<InvestorAddress>("InvestorAddresses");
                }
                return _InvestorAddresses;
            }
        }
        private ObjectSet<InvestorAddress> _InvestorAddresses;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorCommunication> InvestorCommunications
        {
            get
            {
                if ((_InvestorCommunications == null))
                {
                    _InvestorCommunications = base.CreateObjectSet<InvestorCommunication>("InvestorCommunications");
                }
                return _InvestorCommunications;
            }
        }
        private ObjectSet<InvestorCommunication> _InvestorCommunications;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorContact> InvestorContacts
        {
            get
            {
                if ((_InvestorContacts == null))
                {
                    _InvestorContacts = base.CreateObjectSet<InvestorContact>("InvestorContacts");
                }
                return _InvestorContacts;
            }
        }
        private ObjectSet<InvestorContact> _InvestorContacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorEntityType> InvestorEntityTypes
        {
            get
            {
                if ((_InvestorEntityTypes == null))
                {
                    _InvestorEntityTypes = base.CreateObjectSet<InvestorEntityType>("InvestorEntityTypes");
                }
                return _InvestorEntityTypes;
            }
        }
        private ObjectSet<InvestorEntityType> _InvestorEntityTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorFund> InvestorFunds
        {
            get
            {
                if ((_InvestorFunds == null))
                {
                    _InvestorFunds = base.CreateObjectSet<InvestorFund>("InvestorFunds");
                }
                return _InvestorFunds;
            }
        }
        private ObjectSet<InvestorFund> _InvestorFunds;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorFundDocument> InvestorFundDocuments
        {
            get
            {
                if ((_InvestorFundDocuments == null))
                {
                    _InvestorFundDocuments = base.CreateObjectSet<InvestorFundDocument>("InvestorFundDocuments");
                }
                return _InvestorFundDocuments;
            }
        }
        private ObjectSet<InvestorFundDocument> _InvestorFundDocuments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorFundTransaction> InvestorFundTransactions
        {
            get
            {
                if ((_InvestorFundTransactions == null))
                {
                    _InvestorFundTransactions = base.CreateObjectSet<InvestorFundTransaction>("InvestorFundTransactions");
                }
                return _InvestorFundTransactions;
            }
        }
        private ObjectSet<InvestorFundTransaction> _InvestorFundTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestorType> InvestorTypes
        {
            get
            {
                if ((_InvestorTypes == null))
                {
                    _InvestorTypes = base.CreateObjectSet<InvestorType>("InvestorTypes");
                }
                return _InvestorTypes;
            }
        }
        private ObjectSet<InvestorType> _InvestorTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<STATE> STATEs
        {
            get
            {
                if ((_STATEs == null))
                {
                    _STATEs = base.CreateObjectSet<STATE>("STATEs");
                }
                return _STATEs;
            }
        }
        private ObjectSet<STATE> _STATEs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionType> TransactionTypes
        {
            get
            {
                if ((_TransactionTypes == null))
                {
                    _TransactionTypes = base.CreateObjectSet<TransactionType>("TransactionTypes");
                }
                return _TransactionTypes;
            }
        }
        private ObjectSet<TransactionType> _TransactionTypes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Addresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddresses(Address address)
        {
            base.AddObject("Addresses", address);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AddressTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAddressTypes(AddressType addressType)
        {
            base.AddObject("AddressTypes", addressType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Communications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommunications(Communication communication)
        {
            base.AddObject("Communications", communication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommunicationGroupings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommunicationGroupings(CommunicationGrouping communicationGrouping)
        {
            base.AddObject("CommunicationGroupings", communicationGrouping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CommunicationTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCommunicationTypes(CommunicationType communicationType)
        {
            base.AddObject("CommunicationTypes", communicationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactAddresses(ContactAddress contactAddress)
        {
            base.AddObject("ContactAddresses", contactAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContactCommunications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContactCommunications(ContactCommunication contactCommunication)
        {
            base.AddObject("ContactCommunications", contactCommunication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the COUNTRies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCOUNTRies(COUNTRY cOUNTRY)
        {
            base.AddObject("COUNTRies", cOUNTRY);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DocumentTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDocumentTypes(DocumentType documentType)
        {
            base.AddObject("DocumentTypes", documentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Files EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFiles(File file)
        {
            base.AddObject("Files", file);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileTypes(FileType fileType)
        {
            base.AddObject("FileTypes", fileType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Funds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFunds(Fund fund)
        {
            base.AddObject("Funds", fund);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundAccounts(FundAccount fundAccount)
        {
            base.AddObject("FundAccounts", fundAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundClosings EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundClosings(FundClosing fundClosing)
        {
            base.AddObject("FundClosings", fundClosing);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Investors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestors(Investor investor)
        {
            base.AddObject("Investors", investor);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorAccounts(InvestorAccount investorAccount)
        {
            base.AddObject("InvestorAccounts", investorAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorAddresses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorAddresses(InvestorAddress investorAddress)
        {
            base.AddObject("InvestorAddresses", investorAddress);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorCommunications EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorCommunications(InvestorCommunication investorCommunication)
        {
            base.AddObject("InvestorCommunications", investorCommunication);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorContacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorContacts(InvestorContact investorContact)
        {
            base.AddObject("InvestorContacts", investorContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorEntityTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorEntityTypes(InvestorEntityType investorEntityType)
        {
            base.AddObject("InvestorEntityTypes", investorEntityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorFunds EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorFunds(InvestorFund investorFund)
        {
            base.AddObject("InvestorFunds", investorFund);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorFundDocuments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorFundDocuments(InvestorFundDocument investorFundDocument)
        {
            base.AddObject("InvestorFundDocuments", investorFundDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorFundTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorFundTransactions(InvestorFundTransaction investorFundTransaction)
        {
            base.AddObject("InvestorFundTransactions", investorFundTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestorTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestorTypes(InvestorType investorType)
        {
            base.AddObject("InvestorTypes", investorType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the STATEs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSTATEs(STATE sTATE)
        {
            base.AddObject("STATEs", sTATE);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionTypes(TransactionType transactionType)
        {
            base.AddObject("TransactionTypes", transactionType);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Address")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Address : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Address object.
        /// </summary>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
        /// <param name="address1">Initial value of the Address1 property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        /// <param name="listed">Initial value of the Listed property.</param>
        /// <param name="isPreferred">Initial value of the IsPreferred property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Address CreateAddress(global::System.Int32 addressID, global::System.Int32 entityID, global::System.Int32 addressTypeID, global::System.String address1, global::System.String city, global::System.Int32 country, global::System.Boolean listed, global::System.Boolean isPreferred, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Address address = new Address();
            address.AddressID = addressID;
            address.EntityID = entityID;
            address.AddressTypeID = addressTypeID;
            address.Address1 = address1;
            address.City = city;
            address.Country = country;
            address.Listed = listed;
            address.IsPreferred = isPreferred;
            address.CreatedDate = createdDate;
            address.CreatedBy = createdBy;
            return address;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                if (_AddressID != value)
                {
                    OnAddressIDChanging(value);
                    ReportPropertyChanging("AddressID");
                    _AddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressID");
                    OnAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeID
        {
            get
            {
                return _AddressTypeID;
            }
            set
            {
                OnAddressTypeIDChanging(value);
                ReportPropertyChanging("AddressTypeID");
                _AddressTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressTypeID");
                OnAddressTypeIDChanged();
            }
        }
        private global::System.Int32 _AddressTypeID;
        partial void OnAddressTypeIDChanging(global::System.Int32 value);
        partial void OnAddressTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address1
        {
            get
            {
                return _Address1;
            }
            set
            {
                OnAddress1Changing(value);
                ReportPropertyChanging("Address1");
                _Address1 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address1");
                OnAddress1Changed();
            }
        }
        private global::System.String _Address1;
        partial void OnAddress1Changing(global::System.String value);
        partial void OnAddress1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address2
        {
            get
            {
                return _Address2;
            }
            set
            {
                OnAddress2Changing(value);
                ReportPropertyChanging("Address2");
                _Address2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address2");
                OnAddress2Changed();
            }
        }
        private global::System.String _Address2;
        partial void OnAddress2Changing(global::System.String value);
        partial void OnAddress2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address3
        {
            get
            {
                return _Address3;
            }
            set
            {
                OnAddress3Changing(value);
                ReportPropertyChanging("Address3");
                _Address3 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address3");
                OnAddress3Changed();
            }
        }
        private global::System.String _Address3;
        partial void OnAddress3Changing(global::System.String value);
        partial void OnAddress3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StProvince
        {
            get
            {
                return _StProvince;
            }
            set
            {
                OnStProvinceChanging(value);
                ReportPropertyChanging("StProvince");
                _StProvince = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StProvince");
                OnStProvinceChanged();
            }
        }
        private global::System.String _StProvince;
        partial void OnStProvinceChanging(global::System.String value);
        partial void OnStProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> State
        {
            get
            {
                return _State;
            }
            set
            {
                OnStateChanging(value);
                ReportPropertyChanging("State");
                _State = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("State");
                OnStateChanged();
            }
        }
        private Nullable<global::System.Int32> _State;
        partial void OnStateChanging(Nullable<global::System.Int32> value);
        partial void OnStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.Int32 _Country;
        partial void OnCountryChanging(global::System.Int32 value);
        partial void OnCountryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String County
        {
            get
            {
                return _County;
            }
            set
            {
                OnCountyChanging(value);
                ReportPropertyChanging("County");
                _County = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("County");
                OnCountyChanged();
            }
        }
        private global::System.String _County;
        partial void OnCountyChanging(global::System.String value);
        partial void OnCountyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Listed
        {
            get
            {
                return _Listed;
            }
            set
            {
                OnListedChanging(value);
                ReportPropertyChanging("Listed");
                _Listed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Listed");
                OnListedChanged();
            }
        }
        private global::System.Boolean _Listed;
        partial void OnListedChanging(global::System.Boolean value);
        partial void OnListedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPreferred
        {
            get
            {
                return _IsPreferred;
            }
            set
            {
                OnIsPreferredChanging(value);
                ReportPropertyChanging("IsPreferred");
                _IsPreferred = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPreferred");
                OnIsPreferredChanged();
            }
        }
        private global::System.Boolean _IsPreferred;
        partial void OnIsPreferredChanging(global::System.Boolean value);
        partial void OnIsPreferredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_AddressType", "AddressType")]
        public AddressType AddressType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("DeepBlueModel.FK_Address_AddressType", "AddressType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("DeepBlueModel.FK_Address_AddressType", "AddressType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AddressType> AddressTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AddressType>("DeepBlueModel.FK_Address_AddressType", "AddressType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AddressType>("DeepBlueModel.FK_Address_AddressType", "AddressType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_Country", "COUNTRY")]
        public COUNTRY COUNTRY1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("DeepBlueModel.FK_Address_Country", "COUNTRY").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("DeepBlueModel.FK_Address_Country", "COUNTRY").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<COUNTRY> COUNTRY1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<COUNTRY>("DeepBlueModel.FK_Address_Country", "COUNTRY");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<COUNTRY>("DeepBlueModel.FK_Address_Country", "COUNTRY", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_State", "STATE")]
        public STATE STATE1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Address_State", "STATE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Address_State", "STATE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STATE> STATE1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Address_State", "STATE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STATE>("DeepBlueModel.FK_Address_State", "STATE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactAddress_Address", "ContactAddress")]
        public EntityCollection<ContactAddress> ContactAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactAddress>("DeepBlueModel.FK_ContactAddress_Address", "ContactAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactAddress>("DeepBlueModel.FK_ContactAddress_Address", "ContactAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAddress_Address", "InvestorAddress")]
        public EntityCollection<InvestorAddress> InvestorAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorAddress>("DeepBlueModel.FK_InvestorAddress_Address", "InvestorAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorAddress>("DeepBlueModel.FK_InvestorAddress_Address", "InvestorAddress", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="AddressType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AddressType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressType object.
        /// </summary>
        /// <param name="addressTypeID">Initial value of the AddressTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="addressTypeName">Initial value of the AddressTypeName property.</param>
        public static AddressType CreateAddressType(global::System.Int32 addressTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.String addressTypeName)
        {
            AddressType addressType = new AddressType();
            addressType.AddressTypeID = addressTypeID;
            addressType.EntityID = entityID;
            addressType.Enabled = enabled;
            addressType.AddressTypeName = addressTypeName;
            return addressType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressTypeID
        {
            get
            {
                return _AddressTypeID;
            }
            set
            {
                if (_AddressTypeID != value)
                {
                    OnAddressTypeIDChanging(value);
                    ReportPropertyChanging("AddressTypeID");
                    _AddressTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AddressTypeID");
                    OnAddressTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AddressTypeID;
        partial void OnAddressTypeIDChanging(global::System.Int32 value);
        partial void OnAddressTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressTypeName
        {
            get
            {
                return _AddressTypeName;
            }
            set
            {
                OnAddressTypeNameChanging(value);
                ReportPropertyChanging("AddressTypeName");
                _AddressTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressTypeName");
                OnAddressTypeNameChanged();
            }
        }
        private global::System.String _AddressTypeName;
        partial void OnAddressTypeNameChanging(global::System.String value);
        partial void OnAddressTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_AddressType", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("DeepBlueModel.FK_Address_AddressType", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("DeepBlueModel.FK_Address_AddressType", "Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Communication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Communication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Communication object.
        /// </summary>
        /// <param name="communicationID">Initial value of the CommunicationID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="communicationTypeID">Initial value of the CommunicationTypeID property.</param>
        /// <param name="communicationValue">Initial value of the CommunicationValue property.</param>
        /// <param name="listed">Initial value of the Listed property.</param>
        /// <param name="isPreferred">Initial value of the IsPreferred property.</param>
        public static Communication CreateCommunication(global::System.Int32 communicationID, global::System.Int32 entityID, global::System.Int32 communicationTypeID, global::System.String communicationValue, global::System.Boolean listed, global::System.Boolean isPreferred)
        {
            Communication communication = new Communication();
            communication.CommunicationID = communicationID;
            communication.EntityID = entityID;
            communication.CommunicationTypeID = communicationTypeID;
            communication.CommunicationValue = communicationValue;
            communication.Listed = listed;
            communication.IsPreferred = isPreferred;
            return communication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationID
        {
            get
            {
                return _CommunicationID;
            }
            set
            {
                if (_CommunicationID != value)
                {
                    OnCommunicationIDChanging(value);
                    ReportPropertyChanging("CommunicationID");
                    _CommunicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommunicationID");
                    OnCommunicationIDChanged();
                }
            }
        }
        private global::System.Int32 _CommunicationID;
        partial void OnCommunicationIDChanging(global::System.Int32 value);
        partial void OnCommunicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationTypeID
        {
            get
            {
                return _CommunicationTypeID;
            }
            set
            {
                OnCommunicationTypeIDChanging(value);
                ReportPropertyChanging("CommunicationTypeID");
                _CommunicationTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommunicationTypeID");
                OnCommunicationTypeIDChanged();
            }
        }
        private global::System.Int32 _CommunicationTypeID;
        partial void OnCommunicationTypeIDChanging(global::System.Int32 value);
        partial void OnCommunicationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommunicationValue
        {
            get
            {
                return _CommunicationValue;
            }
            set
            {
                OnCommunicationValueChanging(value);
                ReportPropertyChanging("CommunicationValue");
                _CommunicationValue = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommunicationValue");
                OnCommunicationValueChanged();
            }
        }
        private global::System.String _CommunicationValue;
        partial void OnCommunicationValueChanging(global::System.String value);
        partial void OnCommunicationValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastFourPhone
        {
            get
            {
                return _LastFourPhone;
            }
            set
            {
                OnLastFourPhoneChanging(value);
                ReportPropertyChanging("LastFourPhone");
                _LastFourPhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastFourPhone");
                OnLastFourPhoneChanged();
            }
        }
        private global::System.String _LastFourPhone;
        partial void OnLastFourPhoneChanging(global::System.String value);
        partial void OnLastFourPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Listed
        {
            get
            {
                return _Listed;
            }
            set
            {
                OnListedChanging(value);
                ReportPropertyChanging("Listed");
                _Listed = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Listed");
                OnListedChanged();
            }
        }
        private global::System.Boolean _Listed;
        partial void OnListedChanging(global::System.Boolean value);
        partial void OnListedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPreferred
        {
            get
            {
                return _IsPreferred;
            }
            set
            {
                OnIsPreferredChanging(value);
                ReportPropertyChanging("IsPreferred");
                _IsPreferred = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPreferred");
                OnIsPreferredChanged();
            }
        }
        private global::System.Boolean _IsPreferred;
        partial void OnIsPreferredChanging(global::System.Boolean value);
        partial void OnIsPreferredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CommunicationComment
        {
            get
            {
                return _CommunicationComment;
            }
            set
            {
                OnCommunicationCommentChanging(value);
                ReportPropertyChanging("CommunicationComment");
                _CommunicationComment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CommunicationComment");
                OnCommunicationCommentChanged();
            }
        }
        private global::System.String _CommunicationComment;
        partial void OnCommunicationCommentChanging(global::System.String value);
        partial void OnCommunicationCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Communication_CommunicationType", "CommunicationType")]
        public CommunicationType CommunicationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationType>("DeepBlueModel.FK_Communication_CommunicationType", "CommunicationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationType>("DeepBlueModel.FK_Communication_CommunicationType", "CommunicationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommunicationType> CommunicationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationType>("DeepBlueModel.FK_Communication_CommunicationType", "CommunicationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommunicationType>("DeepBlueModel.FK_Communication_CommunicationType", "CommunicationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactCommunication_Communication", "ContactCommunication")]
        public EntityCollection<ContactCommunication> ContactCommunications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactCommunication>("DeepBlueModel.FK_ContactCommunication_Communication", "ContactCommunication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactCommunication>("DeepBlueModel.FK_ContactCommunication_Communication", "ContactCommunication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorCommunication_Communication", "InvestorCommunication")]
        public EntityCollection<InvestorCommunication> InvestorCommunications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorCommunication>("DeepBlueModel.FK_InvestorCommunication_Communication", "InvestorCommunication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorCommunication>("DeepBlueModel.FK_InvestorCommunication_Communication", "InvestorCommunication", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CommunicationGrouping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommunicationGrouping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommunicationGrouping object.
        /// </summary>
        /// <param name="communicationGroupingID">Initial value of the CommunicationGroupingID property.</param>
        /// <param name="communicationGroupingName">Initial value of the CommunicationGroupingName property.</param>
        public static CommunicationGrouping CreateCommunicationGrouping(global::System.Int32 communicationGroupingID, global::System.String communicationGroupingName)
        {
            CommunicationGrouping communicationGrouping = new CommunicationGrouping();
            communicationGrouping.CommunicationGroupingID = communicationGroupingID;
            communicationGrouping.CommunicationGroupingName = communicationGroupingName;
            return communicationGrouping;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationGroupingID
        {
            get
            {
                return _CommunicationGroupingID;
            }
            set
            {
                if (_CommunicationGroupingID != value)
                {
                    OnCommunicationGroupingIDChanging(value);
                    ReportPropertyChanging("CommunicationGroupingID");
                    _CommunicationGroupingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommunicationGroupingID");
                    OnCommunicationGroupingIDChanged();
                }
            }
        }
        private global::System.Int32 _CommunicationGroupingID;
        partial void OnCommunicationGroupingIDChanging(global::System.Int32 value);
        partial void OnCommunicationGroupingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommunicationGroupingName
        {
            get
            {
                return _CommunicationGroupingName;
            }
            set
            {
                OnCommunicationGroupingNameChanging(value);
                ReportPropertyChanging("CommunicationGroupingName");
                _CommunicationGroupingName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommunicationGroupingName");
                OnCommunicationGroupingNameChanged();
            }
        }
        private global::System.String _CommunicationGroupingName;
        partial void OnCommunicationGroupingNameChanging(global::System.String value);
        partial void OnCommunicationGroupingNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CommunicationType_CommunicationGrouping", "CommunicationType")]
        public EntityCollection<CommunicationType> CommunicationTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CommunicationType>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CommunicationType>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="CommunicationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CommunicationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CommunicationType object.
        /// </summary>
        /// <param name="communicationTypeID">Initial value of the CommunicationTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="communicationGroupingID">Initial value of the CommunicationGroupingID property.</param>
        /// <param name="communicationTypeName">Initial value of the CommunicationTypeName property.</param>
        public static CommunicationType CreateCommunicationType(global::System.Int32 communicationTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.Int32 communicationGroupingID, global::System.String communicationTypeName)
        {
            CommunicationType communicationType = new CommunicationType();
            communicationType.CommunicationTypeID = communicationTypeID;
            communicationType.EntityID = entityID;
            communicationType.Enabled = enabled;
            communicationType.CommunicationGroupingID = communicationGroupingID;
            communicationType.CommunicationTypeName = communicationTypeName;
            return communicationType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationTypeID
        {
            get
            {
                return _CommunicationTypeID;
            }
            set
            {
                if (_CommunicationTypeID != value)
                {
                    OnCommunicationTypeIDChanging(value);
                    ReportPropertyChanging("CommunicationTypeID");
                    _CommunicationTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CommunicationTypeID");
                    OnCommunicationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CommunicationTypeID;
        partial void OnCommunicationTypeIDChanging(global::System.Int32 value);
        partial void OnCommunicationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationGroupingID
        {
            get
            {
                return _CommunicationGroupingID;
            }
            set
            {
                OnCommunicationGroupingIDChanging(value);
                ReportPropertyChanging("CommunicationGroupingID");
                _CommunicationGroupingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommunicationGroupingID");
                OnCommunicationGroupingIDChanged();
            }
        }
        private global::System.Int32 _CommunicationGroupingID;
        partial void OnCommunicationGroupingIDChanging(global::System.Int32 value);
        partial void OnCommunicationGroupingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CommunicationTypeName
        {
            get
            {
                return _CommunicationTypeName;
            }
            set
            {
                OnCommunicationTypeNameChanging(value);
                ReportPropertyChanging("CommunicationTypeName");
                _CommunicationTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CommunicationTypeName");
                OnCommunicationTypeNameChanged();
            }
        }
        private global::System.String _CommunicationTypeName;
        partial void OnCommunicationTypeNameChanging(global::System.String value);
        partial void OnCommunicationTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Communication_CommunicationType", "Communication")]
        public EntityCollection<Communication> Communications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Communication>("DeepBlueModel.FK_Communication_CommunicationType", "Communication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Communication>("DeepBlueModel.FK_Communication_CommunicationType", "Communication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping")]
        public CommunicationGrouping CommunicationGrouping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationGrouping>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationGrouping>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CommunicationGrouping> CommunicationGroupingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CommunicationGrouping>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CommunicationGrouping>("DeepBlueModel.FK_CommunicationType_CommunicationGrouping", "CommunicationGrouping", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="receivesDistributionNotices">Initial value of the ReceivesDistributionNotices property.</param>
        /// <param name="receivesK1">Initial value of the ReceivesK1 property.</param>
        /// <param name="receivesFinancials">Initial value of the ReceivesFinancials property.</param>
        /// <param name="receivesInvestorLetters">Initial value of the ReceivesInvestorLetters property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Contact CreateContact(global::System.Int32 contactID, global::System.Int32 entityID, global::System.String lastName, global::System.Boolean receivesDistributionNotices, global::System.Boolean receivesK1, global::System.Boolean receivesFinancials, global::System.Boolean receivesInvestorLetters, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Contact contact = new Contact();
            contact.ContactID = contactID;
            contact.EntityID = entityID;
            contact.LastName = lastName;
            contact.ReceivesDistributionNotices = receivesDistributionNotices;
            contact.ReceivesK1 = receivesK1;
            contact.ReceivesFinancials = receivesFinancials;
            contact.ReceivesInvestorLetters = receivesInvestorLetters;
            contact.CreatedDate = createdDate;
            contact.CreatedBy = createdBy;
            return contact;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                if (_ContactID != value)
                {
                    OnContactIDChanging(value);
                    ReportPropertyChanging("ContactID");
                    _ContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactID");
                    OnContactIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactType
        {
            get
            {
                return _ContactType;
            }
            set
            {
                OnContactTypeChanging(value);
                ReportPropertyChanging("ContactType");
                _ContactType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ContactType");
                OnContactTypeChanged();
            }
        }
        private global::System.String _ContactType;
        partial void OnContactTypeChanging(global::System.String value);
        partial void OnContactTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReceivesDistributionNotices
        {
            get
            {
                return _ReceivesDistributionNotices;
            }
            set
            {
                OnReceivesDistributionNoticesChanging(value);
                ReportPropertyChanging("ReceivesDistributionNotices");
                _ReceivesDistributionNotices = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivesDistributionNotices");
                OnReceivesDistributionNoticesChanged();
            }
        }
        private global::System.Boolean _ReceivesDistributionNotices;
        partial void OnReceivesDistributionNoticesChanging(global::System.Boolean value);
        partial void OnReceivesDistributionNoticesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReceivesK1
        {
            get
            {
                return _ReceivesK1;
            }
            set
            {
                OnReceivesK1Changing(value);
                ReportPropertyChanging("ReceivesK1");
                _ReceivesK1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivesK1");
                OnReceivesK1Changed();
            }
        }
        private global::System.Boolean _ReceivesK1;
        partial void OnReceivesK1Changing(global::System.Boolean value);
        partial void OnReceivesK1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReceivesFinancials
        {
            get
            {
                return _ReceivesFinancials;
            }
            set
            {
                OnReceivesFinancialsChanging(value);
                ReportPropertyChanging("ReceivesFinancials");
                _ReceivesFinancials = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivesFinancials");
                OnReceivesFinancialsChanged();
            }
        }
        private global::System.Boolean _ReceivesFinancials;
        partial void OnReceivesFinancialsChanging(global::System.Boolean value);
        partial void OnReceivesFinancialsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReceivesInvestorLetters
        {
            get
            {
                return _ReceivesInvestorLetters;
            }
            set
            {
                OnReceivesInvestorLettersChanging(value);
                ReportPropertyChanging("ReceivesInvestorLetters");
                _ReceivesInvestorLetters = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ReceivesInvestorLetters");
                OnReceivesInvestorLettersChanged();
            }
        }
        private global::System.Boolean _ReceivesInvestorLetters;
        partial void OnReceivesInvestorLettersChanging(global::System.Boolean value);
        partial void OnReceivesInvestorLettersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactAddress_Contact", "ContactAddress")]
        public EntityCollection<ContactAddress> ContactAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactAddress>("DeepBlueModel.FK_ContactAddress_Contact", "ContactAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactAddress>("DeepBlueModel.FK_ContactAddress_Contact", "ContactAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactCommunication_Contact", "ContactCommunication")]
        public EntityCollection<ContactCommunication> ContactCommunications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContactCommunication>("DeepBlueModel.FK_ContactCommunication_Contact", "ContactCommunication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContactCommunication>("DeepBlueModel.FK_ContactCommunication_Contact", "ContactCommunication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorContact_Contact", "InvestorContact")]
        public EntityCollection<InvestorContact> InvestorContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorContact>("DeepBlueModel.FK_InvestorContact_Contact", "InvestorContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorContact>("DeepBlueModel.FK_InvestorContact_Contact", "InvestorContact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="ContactAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactAddress object.
        /// </summary>
        /// <param name="contactAddressID">Initial value of the ContactAddressID property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        public static ContactAddress CreateContactAddress(global::System.Int32 contactAddressID, global::System.Int32 contactID, global::System.Int32 entityID, global::System.Int32 addressID)
        {
            ContactAddress contactAddress = new ContactAddress();
            contactAddress.ContactAddressID = contactAddressID;
            contactAddress.ContactID = contactID;
            contactAddress.EntityID = entityID;
            contactAddress.AddressID = addressID;
            return contactAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactAddressID
        {
            get
            {
                return _ContactAddressID;
            }
            set
            {
                if (_ContactAddressID != value)
                {
                    OnContactAddressIDChanging(value);
                    ReportPropertyChanging("ContactAddressID");
                    _ContactAddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactAddressID");
                    OnContactAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactAddressID;
        partial void OnContactAddressIDChanging(global::System.Int32 value);
        partial void OnContactAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactAddress_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_ContactAddress_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_ContactAddress_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_ContactAddress_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("DeepBlueModel.FK_ContactAddress_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactAddress_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactAddress_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactAddress_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactAddress_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DeepBlueModel.FK_ContactAddress_Contact", "Contact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="ContactCommunication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContactCommunication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactCommunication object.
        /// </summary>
        /// <param name="contactCommunicationID">Initial value of the ContactCommunicationID property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="communicationID">Initial value of the CommunicationID property.</param>
        public static ContactCommunication CreateContactCommunication(global::System.Int32 contactCommunicationID, global::System.Int32 contactID, global::System.Int32 entityID, global::System.Int32 communicationID)
        {
            ContactCommunication contactCommunication = new ContactCommunication();
            contactCommunication.ContactCommunicationID = contactCommunicationID;
            contactCommunication.ContactID = contactID;
            contactCommunication.EntityID = entityID;
            contactCommunication.CommunicationID = communicationID;
            return contactCommunication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactCommunicationID
        {
            get
            {
                return _ContactCommunicationID;
            }
            set
            {
                if (_ContactCommunicationID != value)
                {
                    OnContactCommunicationIDChanging(value);
                    ReportPropertyChanging("ContactCommunicationID");
                    _ContactCommunicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ContactCommunicationID");
                    OnContactCommunicationIDChanged();
                }
            }
        }
        private global::System.Int32 _ContactCommunicationID;
        partial void OnContactCommunicationIDChanging(global::System.Int32 value);
        partial void OnContactCommunicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationID
        {
            get
            {
                return _CommunicationID;
            }
            set
            {
                OnCommunicationIDChanging(value);
                ReportPropertyChanging("CommunicationID");
                _CommunicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommunicationID");
                OnCommunicationIDChanged();
            }
        }
        private global::System.Int32 _CommunicationID;
        partial void OnCommunicationIDChanging(global::System.Int32 value);
        partial void OnCommunicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactCommunication_Communication", "Communication")]
        public Communication Communication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_ContactCommunication_Communication", "Communication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_ContactCommunication_Communication", "Communication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Communication> CommunicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_ContactCommunication_Communication", "Communication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Communication>("DeepBlueModel.FK_ContactCommunication_Communication", "Communication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_ContactCommunication_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactCommunication_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactCommunication_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_ContactCommunication_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DeepBlueModel.FK_ContactCommunication_Contact", "Contact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="COUNTRY")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class COUNTRY : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new COUNTRY object.
        /// </summary>
        /// <param name="countryID">Initial value of the CountryID property.</param>
        /// <param name="countryCode">Initial value of the CountryCode property.</param>
        /// <param name="countryName">Initial value of the CountryName property.</param>
        public static COUNTRY CreateCOUNTRY(global::System.Int32 countryID, global::System.String countryCode, global::System.String countryName)
        {
            COUNTRY cOUNTRY = new COUNTRY();
            cOUNTRY.CountryID = countryID;
            cOUNTRY.CountryCode = countryCode;
            cOUNTRY.CountryName = countryName;
            return cOUNTRY;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountryID
        {
            get
            {
                return _CountryID;
            }
            set
            {
                if (_CountryID != value)
                {
                    OnCountryIDChanging(value);
                    ReportPropertyChanging("CountryID");
                    _CountryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CountryID");
                    OnCountryIDChanged();
                }
            }
        }
        private global::System.Int32 _CountryID;
        partial void OnCountryIDChanging(global::System.Int32 value);
        partial void OnCountryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryCode
        {
            get
            {
                return _CountryCode;
            }
            set
            {
                OnCountryCodeChanging(value);
                ReportPropertyChanging("CountryCode");
                _CountryCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryCode");
                OnCountryCodeChanged();
            }
        }
        private global::System.String _CountryCode;
        partial void OnCountryCodeChanging(global::System.String value);
        partial void OnCountryCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountryName
        {
            get
            {
                return _CountryName;
            }
            set
            {
                OnCountryNameChanging(value);
                ReportPropertyChanging("CountryName");
                _CountryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CountryName");
                OnCountryNameChanged();
            }
        }
        private global::System.String _CountryName;
        partial void OnCountryNameChanging(global::System.String value);
        partial void OnCountryNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_Country", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("DeepBlueModel.FK_Address_Country", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("DeepBlueModel.FK_Address_Country", "Address", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="DocumentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DocumentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DocumentType object.
        /// </summary>
        /// <param name="documentTypeID">Initial value of the DocumentTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="documentTypeName">Initial value of the DocumentTypeName property.</param>
        public static DocumentType CreateDocumentType(global::System.Int32 documentTypeID, global::System.Int32 entityID, global::System.String documentTypeName)
        {
            DocumentType documentType = new DocumentType();
            documentType.DocumentTypeID = documentTypeID;
            documentType.EntityID = entityID;
            documentType.DocumentTypeName = documentTypeName;
            return documentType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeID
        {
            get
            {
                return _DocumentTypeID;
            }
            set
            {
                if (_DocumentTypeID != value)
                {
                    OnDocumentTypeIDChanging(value);
                    ReportPropertyChanging("DocumentTypeID");
                    _DocumentTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DocumentTypeID");
                    OnDocumentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _DocumentTypeID;
        partial void OnDocumentTypeIDChanging(global::System.Int32 value);
        partial void OnDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DocumentTypeName
        {
            get
            {
                return _DocumentTypeName;
            }
            set
            {
                OnDocumentTypeNameChanging(value);
                ReportPropertyChanging("DocumentTypeName");
                _DocumentTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DocumentTypeName");
                OnDocumentTypeNameChanged();
            }
        }
        private global::System.String _DocumentTypeName;
        partial void OnDocumentTypeNameChanging(global::System.String value);
        partial void OnDocumentTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_DocumentType", "InvestorFundDocument")]
        public EntityCollection<InvestorFundDocument> InvestorFundDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "InvestorFundDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "InvestorFundDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="File")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class File : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new File object.
        /// </summary>
        /// <param name="fileID">Initial value of the FileID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="fileTypeID">Initial value of the FileTypeID property.</param>
        /// <param name="filePath">Initial value of the FilePath property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static File CreateFile(global::System.Int32 fileID, global::System.Int32 entityID, global::System.Int32 fileTypeID, global::System.String filePath, global::System.String fileName, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            File file = new File();
            file.FileID = fileID;
            file.EntityID = entityID;
            file.FileTypeID = fileTypeID;
            file.FilePath = filePath;
            file.FileName = fileName;
            file.CreatedDate = createdDate;
            file.CreatedBy = createdBy;
            return file;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                if (_FileID != value)
                {
                    OnFileIDChanging(value);
                    ReportPropertyChanging("FileID");
                    _FileID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileID");
                    OnFileIDChanged();
                }
            }
        }
        private global::System.Int32 _FileID;
        partial void OnFileIDChanging(global::System.Int32 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileTypeID
        {
            get
            {
                return _FileTypeID;
            }
            set
            {
                OnFileTypeIDChanging(value);
                ReportPropertyChanging("FileTypeID");
                _FileTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileTypeID");
                OnFileTypeIDChanged();
            }
        }
        private global::System.Int32 _FileTypeID;
        partial void OnFileTypeIDChanging(global::System.Int32 value);
        partial void OnFileTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FilePath
        {
            get
            {
                return _FilePath;
            }
            set
            {
                OnFilePathChanging(value);
                ReportPropertyChanging("FilePath");
                _FilePath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FilePath");
                OnFilePathChanged();
            }
        }
        private global::System.String _FilePath;
        partial void OnFilePathChanging(global::System.String value);
        partial void OnFilePathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Size
        {
            get
            {
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Nullable<global::System.Int32> _Size;
        partial void OnSizeChanging(Nullable<global::System.Int32> value);
        partial void OnSizeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_File_FileType", "FileType")]
        public FileType FileType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("DeepBlueModel.FK_File_FileType", "FileType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("DeepBlueModel.FK_File_FileType", "FileType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileType> FileTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileType>("DeepBlueModel.FK_File_FileType", "FileType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileType>("DeepBlueModel.FK_File_FileType", "FileType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_File", "InvestorFundDocument")]
        public EntityCollection<InvestorFundDocument> InvestorFundDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_File", "InvestorFundDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_File", "InvestorFundDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FileType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileType object.
        /// </summary>
        /// <param name="fileTypeID">Initial value of the FileTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="fileTypeName">Initial value of the FileTypeName property.</param>
        public static FileType CreateFileType(global::System.Int32 fileTypeID, global::System.Int32 entityID, global::System.String fileTypeName)
        {
            FileType fileType = new FileType();
            fileType.FileTypeID = fileTypeID;
            fileType.EntityID = entityID;
            fileType.FileTypeName = fileTypeName;
            return fileType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileTypeID
        {
            get
            {
                return _FileTypeID;
            }
            set
            {
                if (_FileTypeID != value)
                {
                    OnFileTypeIDChanging(value);
                    ReportPropertyChanging("FileTypeID");
                    _FileTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FileTypeID");
                    OnFileTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FileTypeID;
        partial void OnFileTypeIDChanging(global::System.Int32 value);
        partial void OnFileTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileTypeName
        {
            get
            {
                return _FileTypeName;
            }
            set
            {
                OnFileTypeNameChanging(value);
                ReportPropertyChanging("FileTypeName");
                _FileTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileTypeName");
                OnFileTypeNameChanged();
            }
        }
        private global::System.String _FileTypeName;
        partial void OnFileTypeNameChanging(global::System.String value);
        partial void OnFileTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileExtension
        {
            get
            {
                return _FileExtension;
            }
            set
            {
                OnFileExtensionChanging(value);
                ReportPropertyChanging("FileExtension");
                _FileExtension = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FileExtension");
                OnFileExtensionChanged();
            }
        }
        private global::System.String _FileExtension;
        partial void OnFileExtensionChanging(global::System.String value);
        partial void OnFileExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_File_FileType", "File")]
        public EntityCollection<File> Files
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<File>("DeepBlueModel.FK_File_FileType", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<File>("DeepBlueModel.FK_File_FileType", "File", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Fund")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Fund : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Fund object.
        /// </summary>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        public static Fund CreateFund(global::System.Int32 fundID, global::System.Int32 entityID)
        {
            Fund fund = new Fund();
            fund.FundID = fundID;
            fund.EntityID = entityID;
            return fund;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                if (_FundID != value)
                {
                    OnFundIDChanging(value);
                    ReportPropertyChanging("FundID");
                    _FundID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundID");
                    OnFundIDChanged();
                }
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FundName
        {
            get
            {
                return _FundName;
            }
            set
            {
                OnFundNameChanging(value);
                ReportPropertyChanging("FundName");
                _FundName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FundName");
                OnFundNameChanged();
            }
        }
        private global::System.String _FundName;
        partial void OnFundNameChanging(global::System.String value);
        partial void OnFundNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxID
        {
            get
            {
                return _TaxID;
            }
            set
            {
                OnTaxIDChanging(value);
                ReportPropertyChanging("TaxID");
                _TaxID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TaxID");
                OnTaxIDChanged();
            }
        }
        private global::System.String _TaxID;
        partial void OnTaxIDChanging(global::System.String value);
        partial void OnTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InceptionDate
        {
            get
            {
                return _InceptionDate;
            }
            set
            {
                OnInceptionDateChanging(value);
                ReportPropertyChanging("InceptionDate");
                _InceptionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InceptionDate");
                OnInceptionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InceptionDate;
        partial void OnInceptionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInceptionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ScheduleTerminationDate
        {
            get
            {
                return _ScheduleTerminationDate;
            }
            set
            {
                OnScheduleTerminationDateChanging(value);
                ReportPropertyChanging("ScheduleTerminationDate");
                _ScheduleTerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ScheduleTerminationDate");
                OnScheduleTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ScheduleTerminationDate;
        partial void OnScheduleTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnScheduleTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FinalTerminationDate
        {
            get
            {
                return _FinalTerminationDate;
            }
            set
            {
                OnFinalTerminationDateChanging(value);
                ReportPropertyChanging("FinalTerminationDate");
                _FinalTerminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FinalTerminationDate");
                OnFinalTerminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FinalTerminationDate;
        partial void OnFinalTerminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFinalTerminationDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NumofAutoExtensions
        {
            get
            {
                return _NumofAutoExtensions;
            }
            set
            {
                OnNumofAutoExtensionsChanging(value);
                ReportPropertyChanging("NumofAutoExtensions");
                _NumofAutoExtensions = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumofAutoExtensions");
                OnNumofAutoExtensionsChanged();
            }
        }
        private Nullable<global::System.Int32> _NumofAutoExtensions;
        partial void OnNumofAutoExtensionsChanging(Nullable<global::System.Int32> value);
        partial void OnNumofAutoExtensionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateClawbackTriggered
        {
            get
            {
                return _DateClawbackTriggered;
            }
            set
            {
                OnDateClawbackTriggeredChanging(value);
                ReportPropertyChanging("DateClawbackTriggered");
                _DateClawbackTriggered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateClawbackTriggered");
                OnDateClawbackTriggeredChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateClawbackTriggered;
        partial void OnDateClawbackTriggeredChanging(Nullable<global::System.DateTime> value);
        partial void OnDateClawbackTriggeredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RecycleProvision
        {
            get
            {
                return _RecycleProvision;
            }
            set
            {
                OnRecycleProvisionChanging(value);
                ReportPropertyChanging("RecycleProvision");
                _RecycleProvision = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RecycleProvision");
                OnRecycleProvisionChanged();
            }
        }
        private Nullable<global::System.Int32> _RecycleProvision;
        partial void OnRecycleProvisionChanging(Nullable<global::System.Int32> value);
        partial void OnRecycleProvisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> MgmtFeesCatchUpDate
        {
            get
            {
                return _MgmtFeesCatchUpDate;
            }
            set
            {
                OnMgmtFeesCatchUpDateChanging(value);
                ReportPropertyChanging("MgmtFeesCatchUpDate");
                _MgmtFeesCatchUpDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MgmtFeesCatchUpDate");
                OnMgmtFeesCatchUpDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _MgmtFeesCatchUpDate;
        partial void OnMgmtFeesCatchUpDateChanging(Nullable<global::System.DateTime> value);
        partial void OnMgmtFeesCatchUpDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Carry
        {
            get
            {
                return _Carry;
            }
            set
            {
                OnCarryChanging(value);
                ReportPropertyChanging("Carry");
                _Carry = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Carry");
                OnCarryChanged();
            }
        }
        private Nullable<global::System.Int32> _Carry;
        partial void OnCarryChanging(Nullable<global::System.Int32> value);
        partial void OnCarryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundAccount_Fund", "FundAccount")]
        public EntityCollection<FundAccount> FundAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundAccount>("DeepBlueModel.FK_FundAccount_Fund", "FundAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundAccount>("DeepBlueModel.FK_FundAccount_Fund", "FundAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundClosing_Fund", "FundClosing")]
        public EntityCollection<FundClosing> FundClosings
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundClosing>("DeepBlueModel.FK_FundClosing_Fund", "FundClosing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundClosing>("DeepBlueModel.FK_FundClosing_Fund", "FundClosing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_Fund", "InvestorFund")]
        public EntityCollection<InvestorFund> InvestorFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_Fund", "InvestorFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_Fund", "InvestorFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_Fund", "InvestorFundDocument")]
        public EntityCollection<InvestorFundDocument> InvestorFundDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_Fund", "InvestorFundDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_Fund", "InvestorFundDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FundAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundAccount object.
        /// </summary>
        /// <param name="fundAccountID">Initial value of the FundAccountID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="accountNumberCash">Initial value of the AccountNumberCash property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static FundAccount CreateFundAccount(global::System.Int32 fundAccountID, global::System.Int32 fundID, global::System.Int32 entityID, global::System.String account, global::System.String accountNumberCash, global::System.Boolean isPrimary, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            FundAccount fundAccount = new FundAccount();
            fundAccount.FundAccountID = fundAccountID;
            fundAccount.FundID = fundID;
            fundAccount.EntityID = entityID;
            fundAccount.Account = account;
            fundAccount.AccountNumberCash = accountNumberCash;
            fundAccount.IsPrimary = isPrimary;
            fundAccount.CreatedDate = createdDate;
            fundAccount.CreatedBy = createdBy;
            return fundAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundAccountID
        {
            get
            {
                return _FundAccountID;
            }
            set
            {
                if (_FundAccountID != value)
                {
                    OnFundAccountIDChanging(value);
                    ReportPropertyChanging("FundAccountID");
                    _FundAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundAccountID");
                    OnFundAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _FundAccountID;
        partial void OnFundAccountIDChanging(global::System.Int32 value);
        partial void OnFundAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Routing
        {
            get
            {
                return _Routing;
            }
            set
            {
                OnRoutingChanging(value);
                ReportPropertyChanging("Routing");
                _Routing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Routing");
                OnRoutingChanged();
            }
        }
        private Nullable<global::System.Int32> _Routing;
        partial void OnRoutingChanging(Nullable<global::System.Int32> value);
        partial void OnRoutingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccountNumberCash
        {
            get
            {
                return _AccountNumberCash;
            }
            set
            {
                OnAccountNumberCashChanging(value);
                ReportPropertyChanging("AccountNumberCash");
                _AccountNumberCash = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AccountNumberCash");
                OnAccountNumberCashChanged();
            }
        }
        private global::System.String _AccountNumberCash;
        partial void OnAccountNumberCashChanging(global::System.String value);
        partial void OnAccountNumberCashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SWIFT
        {
            get
            {
                return _SWIFT;
            }
            set
            {
                OnSWIFTChanging(value);
                ReportPropertyChanging("SWIFT");
                _SWIFT = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SWIFT");
                OnSWIFTChanged();
            }
        }
        private global::System.String _SWIFT;
        partial void OnSWIFTChanging(global::System.String value);
        partial void OnSWIFTChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccountOf
        {
            get
            {
                return _AccountOf;
            }
            set
            {
                OnAccountOfChanging(value);
                ReportPropertyChanging("AccountOf");
                _AccountOf = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccountOf");
                OnAccountOfChanged();
            }
        }
        private global::System.String _AccountOf;
        partial void OnAccountOfChanging(global::System.String value);
        partial void OnAccountOfChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FFCNumber
        {
            get
            {
                return _FFCNumber;
            }
            set
            {
                OnFFCNumberChanging(value);
                ReportPropertyChanging("FFCNumber");
                _FFCNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FFCNumber");
                OnFFCNumberChanged();
            }
        }
        private global::System.String _FFCNumber;
        partial void OnFFCNumberChanging(global::System.String value);
        partial void OnFFCNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String IBAN
        {
            get
            {
                return _IBAN;
            }
            set
            {
                OnIBANChanging(value);
                ReportPropertyChanging("IBAN");
                _IBAN = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("IBAN");
                OnIBANChanged();
            }
        }
        private global::System.String _IBAN;
        partial void OnIBANChanging(global::System.String value);
        partial void OnIBANChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attention
        {
            get
            {
                return _Attention;
            }
            set
            {
                OnAttentionChanging(value);
                ReportPropertyChanging("Attention");
                _Attention = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attention");
                OnAttentionChanged();
            }
        }
        private global::System.String _Attention;
        partial void OnAttentionChanging(global::System.String value);
        partial void OnAttentionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Fax
        {
            get
            {
                return _Fax;
            }
            set
            {
                OnFaxChanging(value);
                ReportPropertyChanging("Fax");
                _Fax = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Fax");
                OnFaxChanged();
            }
        }
        private global::System.String _Fax;
        partial void OnFaxChanging(global::System.String value);
        partial void OnFaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundAccount_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundAccount_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundAccount_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundAccount_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_FundAccount_Fund", "Fund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="FundClosing")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundClosing : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundClosing object.
        /// </summary>
        /// <param name="fundClosingID">Initial value of the FundClosingID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="isFirstClosing">Initial value of the IsFirstClosing property.</param>
        public static FundClosing CreateFundClosing(global::System.Int32 fundClosingID, global::System.Int32 fundID, global::System.Boolean isFirstClosing)
        {
            FundClosing fundClosing = new FundClosing();
            fundClosing.FundClosingID = fundClosingID;
            fundClosing.FundID = fundID;
            fundClosing.IsFirstClosing = isFirstClosing;
            return fundClosing;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundClosingID
        {
            get
            {
                return _FundClosingID;
            }
            set
            {
                if (_FundClosingID != value)
                {
                    OnFundClosingIDChanging(value);
                    ReportPropertyChanging("FundClosingID");
                    _FundClosingID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("FundClosingID");
                    OnFundClosingIDChanged();
                }
            }
        }
        private global::System.Int32 _FundClosingID;
        partial void OnFundClosingIDChanging(global::System.Int32 value);
        partial void OnFundClosingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FundClosingDate
        {
            get
            {
                return _FundClosingDate;
            }
            set
            {
                OnFundClosingDateChanging(value);
                ReportPropertyChanging("FundClosingDate");
                _FundClosingDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundClosingDate");
                OnFundClosingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _FundClosingDate;
        partial void OnFundClosingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnFundClosingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFirstClosing
        {
            get
            {
                return _IsFirstClosing;
            }
            set
            {
                OnIsFirstClosingChanging(value);
                ReportPropertyChanging("IsFirstClosing");
                _IsFirstClosing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsFirstClosing");
                OnIsFirstClosingChanged();
            }
        }
        private global::System.Boolean _IsFirstClosing;
        partial void OnIsFirstClosingChanging(global::System.Boolean value);
        partial void OnIsFirstClosingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_FundClosing_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundClosing_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundClosing_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_FundClosing_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_FundClosing_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_FundClosing", "InvestorFundTransaction")]
        public EntityCollection<InvestorFundTransaction> InvestorFundTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "InvestorFundTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "InvestorFundTransaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="Investor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Investor : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Investor object.
        /// </summary>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="investorEntityTypeID">Initial value of the InvestorEntityTypeID property.</param>
        /// <param name="social">Initial value of the Social property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="isDomestic">Initial value of the IsDomestic property.</param>
        /// <param name="taxExempt">Initial value of the TaxExempt property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static Investor CreateInvestor(global::System.Int32 investorID, global::System.Int32 entityID, global::System.Int32 investorEntityTypeID, global::System.String social, global::System.String lastName, global::System.Boolean isDomestic, global::System.Boolean taxExempt, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            Investor investor = new Investor();
            investor.InvestorID = investorID;
            investor.EntityID = entityID;
            investor.InvestorEntityTypeID = investorEntityTypeID;
            investor.Social = social;
            investor.LastName = lastName;
            investor.IsDomestic = isDomestic;
            investor.TaxExempt = taxExempt;
            investor.CreatedDate = createdDate;
            investor.CreatedBy = createdBy;
            return investor;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                if (_InvestorID != value)
                {
                    OnInvestorIDChanging(value);
                    ReportPropertyChanging("InvestorID");
                    _InvestorID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorID");
                    OnInvestorIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InvestorName
        {
            get
            {
                return _InvestorName;
            }
            set
            {
                OnInvestorNameChanging(value);
                ReportPropertyChanging("InvestorName");
                _InvestorName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InvestorName");
                OnInvestorNameChanged();
            }
        }
        private global::System.String _InvestorName;
        partial void OnInvestorNameChanging(global::System.String value);
        partial void OnInvestorNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorEntityTypeID
        {
            get
            {
                return _InvestorEntityTypeID;
            }
            set
            {
                OnInvestorEntityTypeIDChanging(value);
                ReportPropertyChanging("InvestorEntityTypeID");
                _InvestorEntityTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorEntityTypeID");
                OnInvestorEntityTypeIDChanged();
            }
        }
        private global::System.Int32 _InvestorEntityTypeID;
        partial void OnInvestorEntityTypeIDChanging(global::System.Int32 value);
        partial void OnInvestorEntityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Social
        {
            get
            {
                return _Social;
            }
            set
            {
                OnSocialChanging(value);
                ReportPropertyChanging("Social");
                _Social = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Social");
                OnSocialChanged();
            }
        }
        private global::System.String _Social;
        partial void OnSocialChanging(global::System.String value);
        partial void OnSocialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxID
        {
            get
            {
                return _TaxID;
            }
            set
            {
                OnTaxIDChanging(value);
                ReportPropertyChanging("TaxID");
                _TaxID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxID");
                OnTaxIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxID;
        partial void OnTaxIDChanging(Nullable<global::System.Int32> value);
        partial void OnTaxIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Alias
        {
            get
            {
                return _Alias;
            }
            set
            {
                OnAliasChanging(value);
                ReportPropertyChanging("Alias");
                _Alias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Alias");
                OnAliasChanged();
            }
        }
        private global::System.String _Alias;
        partial void OnAliasChanging(global::System.String value);
        partial void OnAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrevInvestorID
        {
            get
            {
                return _PrevInvestorID;
            }
            set
            {
                OnPrevInvestorIDChanging(value);
                ReportPropertyChanging("PrevInvestorID");
                _PrevInvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrevInvestorID");
                OnPrevInvestorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrevInvestorID;
        partial void OnPrevInvestorIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrevInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ManagerName
        {
            get
            {
                return _ManagerName;
            }
            set
            {
                OnManagerNameChanging(value);
                ReportPropertyChanging("ManagerName");
                _ManagerName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ManagerName");
                OnManagerNameChanged();
            }
        }
        private global::System.String _ManagerName;
        partial void OnManagerNameChanging(global::System.String value);
        partial void OnManagerNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDomestic
        {
            get
            {
                return _IsDomestic;
            }
            set
            {
                OnIsDomesticChanging(value);
                ReportPropertyChanging("IsDomestic");
                _IsDomestic = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsDomestic");
                OnIsDomesticChanged();
            }
        }
        private global::System.Boolean _IsDomestic;
        partial void OnIsDomesticChanging(global::System.Boolean value);
        partial void OnIsDomesticChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean TaxExempt
        {
            get
            {
                return _TaxExempt;
            }
            set
            {
                OnTaxExemptChanging(value);
                ReportPropertyChanging("TaxExempt");
                _TaxExempt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxExempt");
                OnTaxExemptChanged();
            }
        }
        private global::System.Boolean _TaxExempt;
        partial void OnTaxExemptChanging(global::System.Boolean value);
        partial void OnTaxExemptChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ResidencyState
        {
            get
            {
                return _ResidencyState;
            }
            set
            {
                OnResidencyStateChanging(value);
                ReportPropertyChanging("ResidencyState");
                _ResidencyState = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ResidencyState");
                OnResidencyStateChanged();
            }
        }
        private Nullable<global::System.Int32> _ResidencyState;
        partial void OnResidencyStateChanging(Nullable<global::System.Int32> value);
        partial void OnResidencyStateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Investor_InvestorEntityType", "InvestorEntityType")]
        public InvestorEntityType InvestorEntityType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorEntityType>("DeepBlueModel.FK_Investor_InvestorEntityType", "InvestorEntityType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorEntityType>("DeepBlueModel.FK_Investor_InvestorEntityType", "InvestorEntityType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvestorEntityType> InvestorEntityTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorEntityType>("DeepBlueModel.FK_Investor_InvestorEntityType", "InvestorEntityType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvestorEntityType>("DeepBlueModel.FK_Investor_InvestorEntityType", "InvestorEntityType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Investor_ResidencyState", "STATE")]
        public STATE STATE
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Investor_ResidencyState", "STATE").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Investor_ResidencyState", "STATE").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<STATE> STATEReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<STATE>("DeepBlueModel.FK_Investor_ResidencyState", "STATE");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<STATE>("DeepBlueModel.FK_Investor_ResidencyState", "STATE", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAccount_Investor", "InvestorAccount")]
        public EntityCollection<InvestorAccount> InvestorAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorAccount>("DeepBlueModel.FK_InvestorAccount_Investor", "InvestorAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorAccount>("DeepBlueModel.FK_InvestorAccount_Investor", "InvestorAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAddress_Investor", "InvestorAddress")]
        public EntityCollection<InvestorAddress> InvestorAddresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorAddress>("DeepBlueModel.FK_InvestorAddress_Investor", "InvestorAddress");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorAddress>("DeepBlueModel.FK_InvestorAddress_Investor", "InvestorAddress", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorCommunication_Investor", "InvestorCommunication")]
        public EntityCollection<InvestorCommunication> InvestorCommunications
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorCommunication>("DeepBlueModel.FK_InvestorCommunication_Investor", "InvestorCommunication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorCommunication>("DeepBlueModel.FK_InvestorCommunication_Investor", "InvestorCommunication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorContact_Investor", "InvestorContact")]
        public EntityCollection<InvestorContact> InvestorContacts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorContact>("DeepBlueModel.FK_InvestorContact_Investor", "InvestorContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorContact>("DeepBlueModel.FK_InvestorContact_Investor", "InvestorContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_Investor", "InvestorFund")]
        public EntityCollection<InvestorFund> InvestorFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_Investor", "InvestorFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_Investor", "InvestorFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_Investor", "InvestorFundDocument")]
        public EntityCollection<InvestorFundDocument> InvestorFundDocuments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_Investor", "InvestorFundDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundDocument>("DeepBlueModel.FK_InvestorFundDocument_Investor", "InvestorFundDocument", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorAccount object.
        /// </summary>
        /// <param name="investorAccountID">Initial value of the InvestorAccountID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="account">Initial value of the Account property.</param>
        /// <param name="isPrimary">Initial value of the IsPrimary property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InvestorAccount CreateInvestorAccount(global::System.Int32 investorAccountID, global::System.Int32 investorID, global::System.Int32 entityID, global::System.String account, global::System.Boolean isPrimary, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            InvestorAccount investorAccount = new InvestorAccount();
            investorAccount.InvestorAccountID = investorAccountID;
            investorAccount.InvestorID = investorID;
            investorAccount.EntityID = entityID;
            investorAccount.Account = account;
            investorAccount.IsPrimary = isPrimary;
            investorAccount.CreatedDate = createdDate;
            investorAccount.CreatedBy = createdBy;
            return investorAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorAccountID
        {
            get
            {
                return _InvestorAccountID;
            }
            set
            {
                if (_InvestorAccountID != value)
                {
                    OnInvestorAccountIDChanging(value);
                    ReportPropertyChanging("InvestorAccountID");
                    _InvestorAccountID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorAccountID");
                    OnInvestorAccountIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorAccountID;
        partial void OnInvestorAccountIDChanging(global::System.Int32 value);
        partial void OnInvestorAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Routing
        {
            get
            {
                return _Routing;
            }
            set
            {
                OnRoutingChanging(value);
                ReportPropertyChanging("Routing");
                _Routing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Routing");
                OnRoutingChanged();
            }
        }
        private Nullable<global::System.Int32> _Routing;
        partial void OnRoutingChanging(Nullable<global::System.Int32> value);
        partial void OnRoutingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Account
        {
            get
            {
                return _Account;
            }
            set
            {
                OnAccountChanging(value);
                ReportPropertyChanging("Account");
                _Account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Account");
                OnAccountChanged();
            }
        }
        private global::System.String _Account;
        partial void OnAccountChanging(global::System.String value);
        partial void OnAccountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reference
        {
            get
            {
                return _Reference;
            }
            set
            {
                OnReferenceChanging(value);
                ReportPropertyChanging("Reference");
                _Reference = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Reference");
                OnReferenceChanged();
            }
        }
        private global::System.String _Reference;
        partial void OnReferenceChanging(global::System.String value);
        partial void OnReferenceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Attention
        {
            get
            {
                return _Attention;
            }
            set
            {
                OnAttentionChanging(value);
                ReportPropertyChanging("Attention");
                _Attention = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Attention");
                OnAttentionChanged();
            }
        }
        private global::System.String _Attention;
        partial void OnAttentionChanging(global::System.String value);
        partial void OnAttentionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments;
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimary
        {
            get
            {
                return _IsPrimary;
            }
            set
            {
                OnIsPrimaryChanging(value);
                ReportPropertyChanging("IsPrimary");
                _IsPrimary = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsPrimary");
                OnIsPrimaryChanged();
            }
        }
        private global::System.Boolean _IsPrimary;
        partial void OnIsPrimaryChanging(global::System.Boolean value);
        partial void OnIsPrimaryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAccount_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAccount_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAccount_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAccount_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorAccount_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorAddress")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorAddress : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorAddress object.
        /// </summary>
        /// <param name="investorAddressID">Initial value of the InvestorAddressID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="addressID">Initial value of the AddressID property.</param>
        public static InvestorAddress CreateInvestorAddress(global::System.Int32 investorAddressID, global::System.Int32 investorID, global::System.Int32 entityID, global::System.Int32 addressID)
        {
            InvestorAddress investorAddress = new InvestorAddress();
            investorAddress.InvestorAddressID = investorAddressID;
            investorAddress.InvestorID = investorID;
            investorAddress.EntityID = entityID;
            investorAddress.AddressID = addressID;
            return investorAddress;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorAddressID
        {
            get
            {
                return _InvestorAddressID;
            }
            set
            {
                if (_InvestorAddressID != value)
                {
                    OnInvestorAddressIDChanging(value);
                    ReportPropertyChanging("InvestorAddressID");
                    _InvestorAddressID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorAddressID");
                    OnInvestorAddressIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorAddressID;
        partial void OnInvestorAddressIDChanging(global::System.Int32 value);
        partial void OnInvestorAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AddressID
        {
            get
            {
                return _AddressID;
            }
            set
            {
                OnAddressIDChanging(value);
                ReportPropertyChanging("AddressID");
                _AddressID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AddressID");
                OnAddressIDChanged();
            }
        }
        private global::System.Int32 _AddressID;
        partial void OnAddressIDChanging(global::System.Int32 value);
        partial void OnAddressIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAddress_Address", "Address")]
        public Address Address
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_InvestorAddress_Address", "Address").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_InvestorAddress_Address", "Address").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Address> AddressReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DeepBlueModel.FK_InvestorAddress_Address", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("DeepBlueModel.FK_InvestorAddress_Address", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorAddress_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAddress_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAddress_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorAddress_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorAddress_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorCommunication")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorCommunication : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorCommunication object.
        /// </summary>
        /// <param name="investorCommunicationID">Initial value of the InvestorCommunicationID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="communicationID">Initial value of the CommunicationID property.</param>
        public static InvestorCommunication CreateInvestorCommunication(global::System.Int32 investorCommunicationID, global::System.Int32 investorID, global::System.Int32 entityID, global::System.Int32 communicationID)
        {
            InvestorCommunication investorCommunication = new InvestorCommunication();
            investorCommunication.InvestorCommunicationID = investorCommunicationID;
            investorCommunication.InvestorID = investorID;
            investorCommunication.EntityID = entityID;
            investorCommunication.CommunicationID = communicationID;
            return investorCommunication;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorCommunicationID
        {
            get
            {
                return _InvestorCommunicationID;
            }
            set
            {
                if (_InvestorCommunicationID != value)
                {
                    OnInvestorCommunicationIDChanging(value);
                    ReportPropertyChanging("InvestorCommunicationID");
                    _InvestorCommunicationID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorCommunicationID");
                    OnInvestorCommunicationIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorCommunicationID;
        partial void OnInvestorCommunicationIDChanging(global::System.Int32 value);
        partial void OnInvestorCommunicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CommunicationID
        {
            get
            {
                return _CommunicationID;
            }
            set
            {
                OnCommunicationIDChanging(value);
                ReportPropertyChanging("CommunicationID");
                _CommunicationID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommunicationID");
                OnCommunicationIDChanged();
            }
        }
        private global::System.Int32 _CommunicationID;
        partial void OnCommunicationIDChanging(global::System.Int32 value);
        partial void OnCommunicationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorCommunication_Communication", "Communication")]
        public Communication Communication
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_InvestorCommunication_Communication", "Communication").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_InvestorCommunication_Communication", "Communication").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Communication> CommunicationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Communication>("DeepBlueModel.FK_InvestorCommunication_Communication", "Communication");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Communication>("DeepBlueModel.FK_InvestorCommunication_Communication", "Communication", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorCommunication_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorCommunication_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorCommunication_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorCommunication_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorCommunication_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorContact object.
        /// </summary>
        /// <param name="investorContactID">Initial value of the InvestorContactID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="contactID">Initial value of the ContactID property.</param>
        public static InvestorContact CreateInvestorContact(global::System.Int32 investorContactID, global::System.Int32 investorID, global::System.Int32 entityID, global::System.Int32 contactID)
        {
            InvestorContact investorContact = new InvestorContact();
            investorContact.InvestorContactID = investorContactID;
            investorContact.InvestorID = investorID;
            investorContact.EntityID = entityID;
            investorContact.ContactID = contactID;
            return investorContact;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorContactID
        {
            get
            {
                return _InvestorContactID;
            }
            set
            {
                if (_InvestorContactID != value)
                {
                    OnInvestorContactIDChanging(value);
                    ReportPropertyChanging("InvestorContactID");
                    _InvestorContactID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorContactID");
                    OnInvestorContactIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorContactID;
        partial void OnInvestorContactIDChanging(global::System.Int32 value);
        partial void OnInvestorContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContactID
        {
            get
            {
                return _ContactID;
            }
            set
            {
                OnContactIDChanging(value);
                ReportPropertyChanging("ContactID");
                _ContactID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactID");
                OnContactIDChanged();
            }
        }
        private global::System.Int32 _ContactID;
        partial void OnContactIDChanging(global::System.Int32 value);
        partial void OnContactIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatedBy;
        partial void OnCreatedByChanging(Nullable<global::System.Int32> value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorContact_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_InvestorContact_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_InvestorContact_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DeepBlueModel.FK_InvestorContact_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DeepBlueModel.FK_InvestorContact_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorContact_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorContact_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorContact_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorContact_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorContact_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorEntityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorEntityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorEntityType object.
        /// </summary>
        /// <param name="investorEntityTypeID">Initial value of the InvestorEntityTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="investorEntityTypeName">Initial value of the InvestorEntityTypeName property.</param>
        public static InvestorEntityType CreateInvestorEntityType(global::System.Int32 investorEntityTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.String investorEntityTypeName)
        {
            InvestorEntityType investorEntityType = new InvestorEntityType();
            investorEntityType.InvestorEntityTypeID = investorEntityTypeID;
            investorEntityType.EntityID = entityID;
            investorEntityType.Enabled = enabled;
            investorEntityType.InvestorEntityTypeName = investorEntityTypeName;
            return investorEntityType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorEntityTypeID
        {
            get
            {
                return _InvestorEntityTypeID;
            }
            set
            {
                if (_InvestorEntityTypeID != value)
                {
                    OnInvestorEntityTypeIDChanging(value);
                    ReportPropertyChanging("InvestorEntityTypeID");
                    _InvestorEntityTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorEntityTypeID");
                    OnInvestorEntityTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorEntityTypeID;
        partial void OnInvestorEntityTypeIDChanging(global::System.Int32 value);
        partial void OnInvestorEntityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvestorEntityTypeName
        {
            get
            {
                return _InvestorEntityTypeName;
            }
            set
            {
                OnInvestorEntityTypeNameChanging(value);
                ReportPropertyChanging("InvestorEntityTypeName");
                _InvestorEntityTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvestorEntityTypeName");
                OnInvestorEntityTypeNameChanged();
            }
        }
        private global::System.String _InvestorEntityTypeName;
        partial void OnInvestorEntityTypeNameChanging(global::System.String value);
        partial void OnInvestorEntityTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Investor_InvestorEntityType", "Investor")]
        public EntityCollection<Investor> Investors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Investor>("DeepBlueModel.FK_Investor_InvestorEntityType", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Investor>("DeepBlueModel.FK_Investor_InvestorEntityType", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorFund")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorFund : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorFund object.
        /// </summary>
        /// <param name="investorFundID">Initial value of the InvestorFundID property.</param>
        /// <param name="investorID">Initial value of the InvestorID property.</param>
        /// <param name="fundID">Initial value of the FundID property.</param>
        /// <param name="totalCommitment">Initial value of the TotalCommitment property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InvestorFund CreateInvestorFund(global::System.Int32 investorFundID, global::System.Int32 investorID, global::System.Int32 fundID, global::System.Decimal totalCommitment, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            InvestorFund investorFund = new InvestorFund();
            investorFund.InvestorFundID = investorFundID;
            investorFund.InvestorID = investorID;
            investorFund.FundID = fundID;
            investorFund.TotalCommitment = totalCommitment;
            investorFund.CreatedDate = createdDate;
            investorFund.CreatedBy = createdBy;
            return investorFund;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorFundID
        {
            get
            {
                return _InvestorFundID;
            }
            set
            {
                if (_InvestorFundID != value)
                {
                    OnInvestorFundIDChanging(value);
                    ReportPropertyChanging("InvestorFundID");
                    _InvestorFundID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorFundID");
                    OnInvestorFundIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorFundID;
        partial void OnInvestorFundIDChanging(global::System.Int32 value);
        partial void OnInvestorFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private global::System.Int32 _InvestorID;
        partial void OnInvestorIDChanging(global::System.Int32 value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private global::System.Int32 _FundID;
        partial void OnFundIDChanging(global::System.Int32 value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TotalCommitment
        {
            get
            {
                return _TotalCommitment;
            }
            set
            {
                OnTotalCommitmentChanging(value);
                ReportPropertyChanging("TotalCommitment");
                _TotalCommitment = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalCommitment");
                OnTotalCommitmentChanged();
            }
        }
        private global::System.Decimal _TotalCommitment;
        partial void OnTotalCommitmentChanging(global::System.Decimal value);
        partial void OnTotalCommitmentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnfundedAmount
        {
            get
            {
                return _UnfundedAmount;
            }
            set
            {
                OnUnfundedAmountChanging(value);
                ReportPropertyChanging("UnfundedAmount");
                _UnfundedAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnfundedAmount");
                OnUnfundedAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnfundedAmount;
        partial void OnUnfundedAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnUnfundedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvestorTypeId
        {
            get
            {
                return _InvestorTypeId;
            }
            set
            {
                OnInvestorTypeIdChanging(value);
                ReportPropertyChanging("InvestorTypeId");
                _InvestorTypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorTypeId");
                OnInvestorTypeIdChanged();
            }
        }
        private Nullable<global::System.Int32> _InvestorTypeId;
        partial void OnInvestorTypeIdChanging(Nullable<global::System.Int32> value);
        partial void OnInvestorTypeIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFund_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFund_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFund_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_InvestorFund_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFund_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFund_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFund_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorFund_Investor", "Investor", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_InvestorType", "InvestorType")]
        public InvestorType InvestorType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvestorType> InvestorTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorType>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvestorType>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_InvestorFund", "InvestorFundTransaction")]
        public EntityCollection<InvestorFundTransaction> InvestorFundTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFundTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFundTransaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorFundDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorFundDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorFundDocument object.
        /// </summary>
        /// <param name="investorFundDocumentID">Initial value of the InvestorFundDocumentID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="fileID">Initial value of the FileID property.</param>
        /// <param name="documentTypeID">Initial value of the DocumentTypeID property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InvestorFundDocument CreateInvestorFundDocument(global::System.Int32 investorFundDocumentID, global::System.Int32 entityID, global::System.Int32 fileID, global::System.Int32 documentTypeID, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            InvestorFundDocument investorFundDocument = new InvestorFundDocument();
            investorFundDocument.InvestorFundDocumentID = investorFundDocumentID;
            investorFundDocument.EntityID = entityID;
            investorFundDocument.FileID = fileID;
            investorFundDocument.DocumentTypeID = documentTypeID;
            investorFundDocument.CreatedDate = createdDate;
            investorFundDocument.CreatedBy = createdBy;
            return investorFundDocument;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorFundDocumentID
        {
            get
            {
                return _InvestorFundDocumentID;
            }
            set
            {
                if (_InvestorFundDocumentID != value)
                {
                    OnInvestorFundDocumentIDChanging(value);
                    ReportPropertyChanging("InvestorFundDocumentID");
                    _InvestorFundDocumentID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorFundDocumentID");
                    OnInvestorFundDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorFundDocumentID;
        partial void OnInvestorFundDocumentIDChanging(global::System.Int32 value);
        partial void OnInvestorFundDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> InvestorID
        {
            get
            {
                return _InvestorID;
            }
            set
            {
                OnInvestorIDChanging(value);
                ReportPropertyChanging("InvestorID");
                _InvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorID");
                OnInvestorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _InvestorID;
        partial void OnInvestorIDChanging(Nullable<global::System.Int32> value);
        partial void OnInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FundID
        {
            get
            {
                return _FundID;
            }
            set
            {
                OnFundIDChanging(value);
                ReportPropertyChanging("FundID");
                _FundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundID");
                OnFundIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FundID;
        partial void OnFundIDChanging(Nullable<global::System.Int32> value);
        partial void OnFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileID
        {
            get
            {
                return _FileID;
            }
            set
            {
                OnFileIDChanging(value);
                ReportPropertyChanging("FileID");
                _FileID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FileID");
                OnFileIDChanged();
            }
        }
        private global::System.Int32 _FileID;
        partial void OnFileIDChanging(global::System.Int32 value);
        partial void OnFileIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DocumentTypeID
        {
            get
            {
                return _DocumentTypeID;
            }
            set
            {
                OnDocumentTypeIDChanging(value);
                ReportPropertyChanging("DocumentTypeID");
                _DocumentTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentTypeID");
                OnDocumentTypeIDChanged();
            }
        }
        private global::System.Int32 _DocumentTypeID;
        partial void OnDocumentTypeIDChanging(global::System.Int32 value);
        partial void OnDocumentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastUpdatedDate
        {
            get
            {
                return _LastUpdatedDate;
            }
            set
            {
                OnLastUpdatedDateChanging(value);
                ReportPropertyChanging("LastUpdatedDate");
                _LastUpdatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedDate");
                OnLastUpdatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastUpdatedDate;
        partial void OnLastUpdatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastUpdatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LastUpdatedBy
        {
            get
            {
                return _LastUpdatedBy;
            }
            set
            {
                OnLastUpdatedByChanging(value);
                ReportPropertyChanging("LastUpdatedBy");
                _LastUpdatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastUpdatedBy");
                OnLastUpdatedByChanged();
            }
        }
        private Nullable<global::System.Int32> _LastUpdatedBy;
        partial void OnLastUpdatedByChanging(Nullable<global::System.Int32> value);
        partial void OnLastUpdatedByChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_DocumentType", "DocumentType")]
        public DocumentType DocumentType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "DocumentType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "DocumentType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DocumentType> DocumentTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DocumentType>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "DocumentType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DocumentType>("DeepBlueModel.FK_InvestorFundDocument_DocumentType", "DocumentType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_File", "File")]
        public File File
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DeepBlueModel.FK_InvestorFundDocument_File", "File").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DeepBlueModel.FK_InvestorFundDocument_File", "File").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<File> FileReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<File>("DeepBlueModel.FK_InvestorFundDocument_File", "File");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<File>("DeepBlueModel.FK_InvestorFundDocument_File", "File", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_Fund", "Fund")]
        public Fund Fund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFundDocument_Fund", "Fund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFundDocument_Fund", "Fund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Fund> FundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Fund>("DeepBlueModel.FK_InvestorFundDocument_Fund", "Fund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Fund>("DeepBlueModel.FK_InvestorFundDocument_Fund", "Fund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundDocument_Investor", "Investor")]
        public Investor Investor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFundDocument_Investor", "Investor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFundDocument_Investor", "Investor").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Investor> InvestorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Investor>("DeepBlueModel.FK_InvestorFundDocument_Investor", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Investor>("DeepBlueModel.FK_InvestorFundDocument_Investor", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorFundTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorFundTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorFundTransaction object.
        /// </summary>
        /// <param name="investorFundTransactionID">Initial value of the InvestorFundTransactionID property.</param>
        /// <param name="investorFundID">Initial value of the InvestorFundID property.</param>
        /// <param name="transactionTypeID">Initial value of the TransactionTypeID property.</param>
        /// <param name="isAgreementSigned">Initial value of the IsAgreementSigned property.</param>
        /// <param name="createdDate">Initial value of the CreatedDate property.</param>
        /// <param name="createdBy">Initial value of the CreatedBy property.</param>
        public static InvestorFundTransaction CreateInvestorFundTransaction(global::System.Int32 investorFundTransactionID, global::System.Int32 investorFundID, global::System.Int32 transactionTypeID, global::System.Boolean isAgreementSigned, global::System.DateTime createdDate, global::System.Int32 createdBy)
        {
            InvestorFundTransaction investorFundTransaction = new InvestorFundTransaction();
            investorFundTransaction.InvestorFundTransactionID = investorFundTransactionID;
            investorFundTransaction.InvestorFundID = investorFundID;
            investorFundTransaction.TransactionTypeID = transactionTypeID;
            investorFundTransaction.IsAgreementSigned = isAgreementSigned;
            investorFundTransaction.CreatedDate = createdDate;
            investorFundTransaction.CreatedBy = createdBy;
            return investorFundTransaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorFundTransactionID
        {
            get
            {
                return _InvestorFundTransactionID;
            }
            set
            {
                if (_InvestorFundTransactionID != value)
                {
                    OnInvestorFundTransactionIDChanging(value);
                    ReportPropertyChanging("InvestorFundTransactionID");
                    _InvestorFundTransactionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorFundTransactionID");
                    OnInvestorFundTransactionIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorFundTransactionID;
        partial void OnInvestorFundTransactionIDChanging(global::System.Int32 value);
        partial void OnInvestorFundTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorFundID
        {
            get
            {
                return _InvestorFundID;
            }
            set
            {
                OnInvestorFundIDChanging(value);
                ReportPropertyChanging("InvestorFundID");
                _InvestorFundID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvestorFundID");
                OnInvestorFundIDChanged();
            }
        }
        private global::System.Int32 _InvestorFundID;
        partial void OnInvestorFundIDChanging(global::System.Int32 value);
        partial void OnInvestorFundIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionTypeID
        {
            get
            {
                return _TransactionTypeID;
            }
            set
            {
                OnTransactionTypeIDChanging(value);
                ReportPropertyChanging("TransactionTypeID");
                _TransactionTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionTypeID");
                OnTransactionTypeIDChanged();
            }
        }
        private global::System.Int32 _TransactionTypeID;
        partial void OnTransactionTypeIDChanging(global::System.Int32 value);
        partial void OnTransactionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAgreementSigned
        {
            get
            {
                return _IsAgreementSigned;
            }
            set
            {
                OnIsAgreementSignedChanging(value);
                ReportPropertyChanging("IsAgreementSigned");
                _IsAgreementSigned = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAgreementSigned");
                OnIsAgreementSignedChanged();
            }
        }
        private global::System.Boolean _IsAgreementSigned;
        partial void OnIsAgreementSignedChanging(global::System.Boolean value);
        partial void OnIsAgreementSignedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FundClosingID
        {
            get
            {
                return _FundClosingID;
            }
            set
            {
                OnFundClosingIDChanging(value);
                ReportPropertyChanging("FundClosingID");
                _FundClosingID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FundClosingID");
                OnFundClosingIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FundClosingID;
        partial void OnFundClosingIDChanging(Nullable<global::System.Int32> value);
        partial void OnFundClosingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OtherInvestorID
        {
            get
            {
                return _OtherInvestorID;
            }
            set
            {
                OnOtherInvestorIDChanging(value);
                ReportPropertyChanging("OtherInvestorID");
                _OtherInvestorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OtherInvestorID");
                OnOtherInvestorIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OtherInvestorID;
        partial void OnOtherInvestorIDChanging(Nullable<global::System.Int32> value);
        partial void OnOtherInvestorIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private global::System.DateTime _CreatedDate;
        partial void OnCreatedDateChanging(global::System.DateTime value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatedBy
        {
            get
            {
                return _CreatedBy;
            }
            set
            {
                OnCreatedByChanging(value);
                ReportPropertyChanging("CreatedBy");
                _CreatedBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedBy");
                OnCreatedByChanged();
            }
        }
        private global::System.Int32 _CreatedBy;
        partial void OnCreatedByChanging(global::System.Int32 value);
        partial void OnCreatedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CommittedDate
        {
            get
            {
                return _CommittedDate;
            }
            set
            {
                OnCommittedDateChanging(value);
                ReportPropertyChanging("CommittedDate");
                _CommittedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CommittedDate");
                OnCommittedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CommittedDate;
        partial void OnCommittedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCommittedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_FundClosing", "FundClosing")]
        public FundClosing FundClosing
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundClosing>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "FundClosing").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundClosing>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "FundClosing").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundClosing> FundClosingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundClosing>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "FundClosing");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundClosing>("DeepBlueModel.FK_InvestorFundTransaction_FundClosing", "FundClosing", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_InvestorFund", "InvestorFund")]
        public InvestorFund InvestorFund
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorFund>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFund").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorFund>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFund").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvestorFund> InvestorFundReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestorFund>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvestorFund>("DeepBlueModel.FK_InvestorFundTransaction_InvestorFund", "InvestorFund", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_TransactionType", "TransactionType")]
        public TransactionType TransactionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "TransactionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "TransactionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionType> TransactionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "TransactionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionType>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "TransactionType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="InvestorType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestorType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestorType object.
        /// </summary>
        /// <param name="investorTypeID">Initial value of the InvestorTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="investorTypeName">Initial value of the InvestorTypeName property.</param>
        public static InvestorType CreateInvestorType(global::System.Int32 investorTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.String investorTypeName)
        {
            InvestorType investorType = new InvestorType();
            investorType.InvestorTypeID = investorTypeID;
            investorType.EntityID = entityID;
            investorType.Enabled = enabled;
            investorType.InvestorTypeName = investorTypeName;
            return investorType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvestorTypeID
        {
            get
            {
                return _InvestorTypeID;
            }
            set
            {
                if (_InvestorTypeID != value)
                {
                    OnInvestorTypeIDChanging(value);
                    ReportPropertyChanging("InvestorTypeID");
                    _InvestorTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InvestorTypeID");
                    OnInvestorTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _InvestorTypeID;
        partial void OnInvestorTypeIDChanging(global::System.Int32 value);
        partial void OnInvestorTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvestorTypeName
        {
            get
            {
                return _InvestorTypeName;
            }
            set
            {
                OnInvestorTypeNameChanging(value);
                ReportPropertyChanging("InvestorTypeName");
                _InvestorTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("InvestorTypeName");
                OnInvestorTypeNameChanged();
            }
        }
        private global::System.String _InvestorTypeName;
        partial void OnInvestorTypeNameChanging(global::System.String value);
        partial void OnInvestorTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFund_InvestorType", "InvestorFund")]
        public EntityCollection<InvestorFund> InvestorFunds
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorFund");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFund>("DeepBlueModel.FK_InvestorFund_InvestorType", "InvestorFund", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="STATE")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class STATE : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new STATE object.
        /// </summary>
        /// <param name="stateID">Initial value of the StateID property.</param>
        /// <param name="abbr">Initial value of the Abbr property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static STATE CreateSTATE(global::System.Int32 stateID, global::System.String abbr, global::System.String name)
        {
            STATE sTATE = new STATE();
            sTATE.StateID = stateID;
            sTATE.Abbr = abbr;
            sTATE.Name = name;
            return sTATE;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateID
        {
            get
            {
                return _StateID;
            }
            set
            {
                if (_StateID != value)
                {
                    OnStateIDChanging(value);
                    ReportPropertyChanging("StateID");
                    _StateID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StateID");
                    OnStateIDChanged();
                }
            }
        }
        private global::System.Int32 _StateID;
        partial void OnStateIDChanging(global::System.Int32 value);
        partial void OnStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Abbr
        {
            get
            {
                return _Abbr;
            }
            set
            {
                OnAbbrChanging(value);
                ReportPropertyChanging("Abbr");
                _Abbr = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Abbr");
                OnAbbrChanged();
            }
        }
        private global::System.String _Abbr;
        partial void OnAbbrChanging(global::System.String value);
        partial void OnAbbrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Address_State", "Address")]
        public EntityCollection<Address> Addresses
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Address>("DeepBlueModel.FK_Address_State", "Address");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Address>("DeepBlueModel.FK_Address_State", "Address", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_Investor_ResidencyState", "Investor")]
        public EntityCollection<Investor> Investors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Investor>("DeepBlueModel.FK_Investor_ResidencyState", "Investor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Investor>("DeepBlueModel.FK_Investor_ResidencyState", "Investor", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DeepBlueModel", Name="TransactionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionType object.
        /// </summary>
        /// <param name="transactionTypeID">Initial value of the TransactionTypeID property.</param>
        /// <param name="entityID">Initial value of the EntityID property.</param>
        /// <param name="enabled">Initial value of the Enabled property.</param>
        /// <param name="transactionTypeName">Initial value of the TransactionTypeName property.</param>
        public static TransactionType CreateTransactionType(global::System.Int32 transactionTypeID, global::System.Int32 entityID, global::System.Boolean enabled, global::System.String transactionTypeName)
        {
            TransactionType transactionType = new TransactionType();
            transactionType.TransactionTypeID = transactionTypeID;
            transactionType.EntityID = entityID;
            transactionType.Enabled = enabled;
            transactionType.TransactionTypeName = transactionTypeName;
            return transactionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionTypeID
        {
            get
            {
                return _TransactionTypeID;
            }
            set
            {
                if (_TransactionTypeID != value)
                {
                    OnTransactionTypeIDChanging(value);
                    ReportPropertyChanging("TransactionTypeID");
                    _TransactionTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionTypeID");
                    OnTransactionTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TransactionTypeID;
        partial void OnTransactionTypeIDChanging(global::System.Int32 value);
        partial void OnTransactionTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EntityID
        {
            get
            {
                return _EntityID;
            }
            set
            {
                OnEntityIDChanging(value);
                ReportPropertyChanging("EntityID");
                _EntityID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityID");
                OnEntityIDChanged();
            }
        }
        private global::System.Int32 _EntityID;
        partial void OnEntityIDChanging(global::System.Int32 value);
        partial void OnEntityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Enabled
        {
            get
            {
                return _Enabled;
            }
            set
            {
                OnEnabledChanging(value);
                ReportPropertyChanging("Enabled");
                _Enabled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Enabled");
                OnEnabledChanged();
            }
        }
        private global::System.Boolean _Enabled;
        partial void OnEnabledChanging(global::System.Boolean value);
        partial void OnEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionTypeName
        {
            get
            {
                return _TransactionTypeName;
            }
            set
            {
                OnTransactionTypeNameChanging(value);
                ReportPropertyChanging("TransactionTypeName");
                _TransactionTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransactionTypeName");
                OnTransactionTypeNameChanged();
            }
        }
        private global::System.String _TransactionTypeName;
        partial void OnTransactionTypeNameChanging(global::System.String value);
        partial void OnTransactionTypeNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DeepBlueModel", "FK_InvestorFundTransaction_TransactionType", "InvestorFundTransaction")]
        public EntityCollection<InvestorFundTransaction> InvestorFundTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "InvestorFundTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestorFundTransaction>("DeepBlueModel.FK_InvestorFundTransaction_TransactionType", "InvestorFundTransaction", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
